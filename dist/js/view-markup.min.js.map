{"version":3,"sources":["view-markup.js"],"names":["viewMarkup","viewMarkupEl","document","querySelectorAll","scriptLinkage","getElementById","querySelector","modalNav","dynamicPos","dynamicPosZIndex","excludeAttribute","urlParam","URLSearchParams","getAttribute","split","get","srcready","Event","pageSrc","request","window","XMLHttpRequest","ActiveXObject","makeHttpObject","open","location","href","send","onreadystatechange","readyState","responseText","dispatchEvent","Element","prototype","setAttributes","attrs","key","this","setAttribute","addEventListener","str","srcViewMarkupEl","DOMParser","parseFromString","length","options","elHtmlInitial","elHtmlClean","elAmount","markupContentHtmlString","forEach","item","index","excludeAttributeArr","element","attribute","removeAttribute","tagName","toLowerCase","outerHTML","convertToParamString","replace","modalBtn","createElement","classList","add","role","tabindex","innerHTML","nodeName","wrapperDivBody","body","prepend","appendChild","markupWrapperDiv","el","wrapper","parentNode","insertBefore","wrapElement","optionsParams","title","btnX","btnY","btnZ","btnPos","btnAppendTo","btnPrependTo","btnColor","scriptSelector","backdropRgb","renderInPage","marginBottom","marginTop","style","transform","zIndex","position","backgroundColor","elBtnParent","closest","textStyle","textStyleString","textContent","head","highlightVersionNumb","css","js","themeCssDarkUrl","themeCssLightUrl","highlightCssUrl","localStorage","getItem","highlightScriptUrl","beautifyScriptUrl","loadExternalJs","scriptSrc","callback","getElementsByTagName","script","src","onload","url","link","id","rel","loadExternalCss","viewMarkupInitialize","modalEl","aria-labelledby","aria-modal","modalDialog","wrapperEl","inPageBlock","inPageContent","inPageHeader","modalSetSize","readyAdjustments","inPageCodeJsBlock","jsToTidy","toString","tidyJS","html_beautify","indent_size","getCachedSpaceTab","space_in_empty_paren","hljs","highlightElement","inPageCodeHtmlBlock","tidyHTML","modalNavEl","modalPrevBtn","modalNextBtn","modalNavigate","remove","modalNavigation","documentElement","vmReadyEvent","allID","allFor","allAriaLabelledBy","x","y","currentFor","z","currentAriaLabelledBy","modalContent","modalCloseBtn","copyBtn","settingsBtn","settingsDropdown","textArea","preEl","htmlCodeEl","jsCodeEl","radio2Spaces","radio4Spaces","themeDark","themeLight","fontSize","htmlTab","jsTab","modalCodeHtmlEL","modalContentEl","modalTitleEl","modalSizeMedium","modalSizeLarge","modalCodeJsEL","checked","value","currentValue","setItem","currentShowingCode","currentCode","i","offsetWidth","offsetHeight","code","spaceTabRadio","tidyCode","applyTidyCodeToTextArea","applyCopyBtnState","navigator","clipboard","writeText","applyCleanHtml","applyCleanJs","focus","event","isClickInside","contains","target","modalHide","e","currentViewMarkupIndex","focusedElementBeforeModal","optionDropdownClass","modalBtnEL","html","spaces","btnEl","activeElement","keyCode","shiftKey","firstTabStop","preventDefault","lastTabStop","focusableElements","Array","slice","call","modalShow","hasAttribute","cleanTitle","codeEl","setTabSpaces","undefined","tidyJs","checkedSpacesRadio","state","clickedButton","direction","mapToModalBtnIndex","parseInt","mapToModalBtnSelector","mapToModalBtn","click","tabParent","tablistPanelId","setTimeout","ariaExpandedAttr","toggle","floatingButtonHolder","withmodalEl","floatingModalBtn","positionModalBtns","load","btnElement","top","getBoundingClientRect","scrollY","left","docFrag","createDocumentFragment","firstChild","child","removeChild","replaceChild","unwrap","func","timer","clearTimeout","debounce","parent","tabNav","aria-label","tabsList","tabButton","entry","tabButtonEntry","cloneNode","entryTitle","uniqueID","match","toUpperCase","camelize","renderID","aria-selected","aria-controls","vmPanel","tabButtonElement","panel","tabs","tabList","tab","changeTabs","tabFocus","tabslistParam","tabsParams","maxWidth","background","pillView","paddingX","class","tabsTitle","Object","assign","marginLeft","marginRight","paddingLeft","paddingRight","classItem","tabViewModalBtnSep","tabViewModalBtn","urlHash","hash","urlIDElement","associatedTab","scrollIntoView","behavior","grandparent","stringCleanup"],"mappings":"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","sourcesContent":["/*!\n    * View markup v1.6.0\n    * Plugin that makes it easy for developers to view and copy the html needed for a component.\n    *\n    * Copyright 2021-2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\nconst viewMarkup = function() {\n    \n    // Cache elements\n    const viewMarkupEl = document.querySelectorAll('[data-view-markup]');\n    \n    // Get query params if any\n    let scriptLinkage = document.getElementById('view-markup-js') || document.querySelector('script[src*=view-markup]');\n    let modalNav = null;\n    let dynamicPos = null;\n    let dynamicPosZIndex = null;\n    let excludeAttribute = null;\n\n    if (scriptLinkage) {\n        let urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n        modalNav = urlParam.get('modal-nav');\n        dynamicPos = urlParam.get('dynamic-pos');\n        dynamicPosZIndex = urlParam.get('z-index');\n        excludeAttribute = urlParam.get('exclude-attribute');\n    }\n\n    let srcready = new Event('ViewMarkupSrcIsReady');\n    let pageSrc = null;\n    let request = makeHttpObject();\n    \n    request.open('GET', window.location.href, true);\n    request.send(null);\n    request.onreadystatechange = function() {\n        if (request.readyState === 4) {\n            pageSrc = request.responseText;\n            document.dispatchEvent(srcready);\n        }\n    }\n\n    // Get original page src\n    function makeHttpObject() {\n        if ('XMLHttpRequest' in window) {\n            return new XMLHttpRequest();\n        } else if ('ActiveXObject' in window) {\n            return new ActiveXObject('Msxml2.XMLHTTP');\n        }\n    }\n    \n    // Convert src string to HTML\n    function stringToHTML(str) {\n        let parser = new DOMParser();\n        let doc = parser.parseFromString(str, 'text/html');\n        return doc;\n    }\n\n    // Remove multiple attributes\n    function removeAttributes(element, attributes) {\n        attributes.forEach(function (attribute) {\n            element.removeAttribute(attribute);\n        });\n    }\n\n    Element.prototype.setAttributes = function (attrs) {\n        for(let key in attrs) {\n            this.setAttribute(key, attrs[key]);\n        }\n    };\n\n    document.addEventListener('ViewMarkupSrcIsReady', function () {\n        const srcPageHTML = stringToHTML(pageSrc);\n        const srcViewMarkupEl = srcPageHTML.querySelectorAll('[data-view-markup]');\n                    \n        if (viewMarkupEl.length > 0) {\n            let elHtmlInitial = [];\n            let elHtmlClean = [];\n            let elAmount = 0;\n            let options;\n            let markupContentHtmlString = `//=inject _view-markup-modal.html`;\n\n            viewMarkupEl.forEach(function (item, index) {\n\n                // Remove specified param attribute(s)\n                if (excludeAttribute !== null) {\n                    let excludeAttributeArr = excludeAttribute.split(',');\n                    removeAttributes(srcViewMarkupEl[index], excludeAttributeArr);\n                }\n                \n                // Cache all viewable markup elements               \n                elHtmlInitial[index] = (index === 0 && viewMarkupEl[0].tagName.toLowerCase() === 'html') ?\n                    pageSrc :\n                    srcViewMarkupEl[index].outerHTML;\n\n                // Remove the view markup specific data attributes\n                if (!preserveViewMarkupAttr(viewMarkupEl[index])) {\n                    elHtmlClean[index] = elHtmlInitial[index].replace(/data-view-markup=\"[^\\\"]*\"/g, '').replace(/^data-view-markup$/g, '');\n                } else {\n                    elHtmlClean[index] = elHtmlInitial[index];\n                }\n                \n                // Create modal button\n                let modalBtn = document.createElement('div');\n                modalBtn.classList.add('view-markup__modal-btn');\n                modalBtn.setAttributes({\n                    'role': 'button',\n                    'tabindex': '0'\n                })\n                modalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                    \n                // if <html> or <body> do things a bit differently\n                if (viewMarkupEl[index].nodeName.toLowerCase()  === 'body' || viewMarkupEl[index].nodeName.toLowerCase()  === 'html') {\n                    let wrapperDivBody = document.createElement('div');\n                    wrapperDivBody.classList.add('view-markup', 'view-markup--body');\n                    document.body.prepend(wrapperDivBody);\n                    wrapperDivBody.appendChild(modalBtn);\n                } else {\n                    \n                    // Wrap in div\n                    let markupWrapperDiv = document.createElement('div');\n                    markupWrapperDiv.classList.add('view-markup');\n                    markupWrapperDiv.innerHTML = '<div class=\"view-markup__highlight\"></div>';\n                    wrapElement(viewMarkupEl[index], markupWrapperDiv);\n                    markupWrapperDiv.prepend(modalBtn);\n                }\n\n                // Apply some options to toggle if available\n                let optionsParams = convertToParamString(viewMarkupEl[index].getAttribute('data-view-markup'));\n                \n                options = {\n                    title: optionsParams.get('title'),\n                    btnX: optionsParams.get('btn-x'),\n                    btnY: optionsParams.get('btn-y'),\n                    btnZ: optionsParams.get('btn-z'),\n                    btnPos: optionsParams.get('btn-pos'),\n                    btnAppendTo: optionsParams.get('btn-append-to'),\n                    btnPrependTo: optionsParams.get('btn-prepend-to'),\n                    btnColor: optionsParams.get('btn-color'),\n                    scriptSelector: optionsParams.get('script-selector'),\n                    backdropRgb: optionsParams.get('backdrop-rgb'),\n                    renderInPage: optionsParams.get('render-in-page'),\n                    marginBottom: optionsParams.get('margin-bottom'),\n                    marginTop: optionsParams.get('margin-top')\n                };\n                                        \n                if (optionsParams !== 'null') {\n                    \n                    // Setup title attribute to be used later\n                    if (options.title) {\n                        modalBtn.setAttribute('data-view-markup-title', options.title);\n                    }\n\n                    // Btn x postion set\n                    if (options.btnX) {\n                        modalBtn.style.transform = 'translateX(' + options.btnX + ')';\n                    }\n\n                    // Btn y postion set\n                    if (options.btnY) {\n                        modalBtn.style.transform = 'translateY(' + options.btnY + ')';\n                    }\n\n                    // Btn both positions\n                    if (options.btnX && options.btnY) {\n                        modalBtn.style.transform = 'translateX(' + options.btnX + ') translateY(' + options.btnY + ')';\n                    }\n\n                    // Btn z-index\n                    if (options.btnZ) {\n                        modalBtn.style.zIndex = options.btnZ;\n                    }\n\n                    // Btn position\n                    if (options.btnPos) {\n                        modalBtn.style.position = options.btnPos;\n                    }\n                    \n                    // TODO: Btn color\n                    if (options.btnColor) {\n                        modalBtn.style.backgroundColor = options.btnColor;\n                    }\n\n                    // Append to selector\n                    if (options.btnAppendTo) {\n                        elBtnParent = document.querySelector(options.btnAppendTo);\n                        elBtnParent.appendChild(modalBtn);\n                    }\n\n                    // Prepend to selector\n                    if (options.btnPrependTo) {\n                        elBtnParent = document.querySelector(options.btnPrependTo);\n                        elBtnParent.prepend(modalBtn);\n                    }\n                    \n                    // Script selector\n                    if (options.scriptSelector) {\n                        modalBtn.setAttribute('data-view-markup-script-selector', options.scriptSelector);\n                    }\n                    \n                    // Backdrop rgba\n                    if (options.backdropRgb) {\n                        modalBtn.setAttribute('data-view-markup-backdrop-rgb', options.backdropRgb);\n                    }\n                    \n                    // In page rendering\n                    if (options.renderInPage) {\n                        modalBtn.setAttribute('data-view-markup-in-page', 'true');\n                        item.setAttribute('data-view-markup-render-in-page', '');\n                    }\n                                            \n                    // Bottom margin for in page view\n                    if (options.marginBottom) {\n                        item.closest('.view-markup').style.marginBottom = options.marginBottom;\n                    }\n                    \n                    // Top margin for in page view\n                    if (options.marginTop) {\n                        item.closest('.view-markup').style.marginTop = options.marginTop;\n                    }\n                }   \n            });\n\n\n            // Check for preserve-attribute option\n            function preserveViewMarkupAttr(el) {                   \n                let optionsParams = convertToParamString(el.getAttribute('data-view-markup'));\n                let optionPreserveAttr = optionsParams.get('preserve-attribute');\n                \n                if (optionPreserveAttr !== null) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n            \n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Custom styles added via js\n            // -----------------------------------------------------------------------------\n\n            // Create style tag to dump styles into for the markup modal\n            let textStyle = document.createElement('style');\n            textStyle.setAttribute('id', 'viewMarkupStyle');\n\n            // Import compressed styles as a string\n            let textStyleString = `//=inject view-markup.css`;\n\n            // Apply in page styles to style tag\n            textStyle.textContent = textStyleString;\n\n            // Add in page styles to head\n            document.head.appendChild(textStyle);\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Load external libraries\n            // -----------------------------------------------------------------------------\n\n            // TODO: import these through npm packages\n\n            // Highlight css and js CDN. Project repo: https://github.com/highlightjs/highlight.js/\n            let highlightVersionNumb = {\n                css: '10.7.2',\n                js: '11.3.1'\n            }\n            let themeCssDarkUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/atom-one-dark.min.css';\n            let themeCssLightUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/github.min.css';\n\n            let highlightCssUrl = (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') ? themeCssDarkUrl : themeCssLightUrl;\n            let highlightScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.js + '/highlight.min.js';\n\n            // Beautify HTML CDN. Project repo: https://github.com/beautifier/beautifier.io\n            let beautifyVersionNumb = '1.14.0';\n            let beautifyScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/' + beautifyVersionNumb + '/beautify-html.min.js';\n\n            // Load highlight js/css external assets\n            loadExternalCss(highlightCssUrl);\n\n            // Initalize everything after getting beautify-html script\n            loadExternalJs(beautifyScriptUrl, loadFinalJS);\n            \n            function loadFinalJS() {\n                loadExternalJs(highlightScriptUrl, viewMarkupInitialize);\n            }\n\n            function loadExternalJs(scriptSrc, callback) {\n                let head = document.getElementsByTagName('head')[0];\n                let script = document.createElement('script');\n                \n                script.src = scriptSrc;\n                \n                head.appendChild(script);\n                script.onload = callback;\n            }\n\n            // Run after getting beautify-html/highlight.io external assets\n            function loadExternalCss(url, callback) {\n                let head = document.getElementsByTagName('head')[0];\n                let link = document.createElement('link');\n                    \n                link.id = 'highlightJsCss';\n                link.rel = 'stylesheet';\n                link.href = url;\n                \n                link.onreadystatechange = callback;\n                link.onload = callback;\n                head.appendChild(link);\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Render modal\n            // -----------------------------------------------------------------------------\n                \n            // Setup modal outer div and attributes\n            let modalEl = document.createElement('div');\n            modalEl.classList.add('view-markup-modal');\n            \n            modalEl.setAttributes({\n                'id': 'viewMarkupModal',\n                'aria-labelledby': 'viewMarkupModalTitle',\n                'aria-modal': 'true',\n                'role': 'dialog',\n                'tabindex': '-1',\n            });\n\n            // Create modal dialog div\n            let modalDialog = document.createElement('div');\n\n            // Insert modal dialog element into outer modal element\n            modalDialog.classList.add('view-markup-modal__dialog');\n            modalEl.appendChild(modalDialog);\n\n            // Add the rest of the html string into modal dialog\n            modalDialog.innerHTML = markupContentHtmlString;\n            document.body.appendChild(modalEl);\n\n            // Set in page element\n            let wrapperEl = document.querySelectorAll('.view-markup');\n            wrapperEl.forEach(function (item) {\n                if (item.querySelector('[data-view-markup-in-page]')) {\n                    let inPageBlock = document.createElement('div');\n                    inPageBlock.classList.add('view-markup__in-page-view');\n                    item.appendChild(inPageBlock);\n                    inPageBlock.innerHTML = markupContentHtmlString;\n                }\n            });\n\n            // Assign in page unique ids and adjust aria-lablledby to match\n            let inPageContent = document.querySelectorAll('.view-markup__in-page-view .view-markup__content');\n            let inPageHeader = document.querySelectorAll('.view-markup__in-page-view .view-markup__header');\n            let modalSetSize = document.querySelectorAll('.view-markup__size-set');\n\n            inPageContent.forEach(function (item, index) {\n                inPageHeader[index].remove();\n                modalSetSize[index].remove();\n                \n                let allID = item.querySelectorAll('[id]');\n                let allFor = item.querySelectorAll('[for]');\n                let allAriaLabelledBy = item.querySelectorAll('[aria-labelledby]');\n\n                // Unique id\n                for (let x = 0; x < allID.length; x++) {\n                    allID[x].id = allID[x].id + '-' + index;\n                }\n                \n                // Unique for\n                for (let y = 0; y < allFor.length; y++) {\n                    let currentFor = allFor[y].getAttribute('for');\n                    allFor[y].setAttribute('for', currentFor + '-' + index);\n                }\n\n                // Unique aria-labelledby\n                for (let z = 0; z < allAriaLabelledBy.length; z++) {\n                    let currentAriaLabelledBy = allAriaLabelledBy[z].getAttribute('aria-labelledby');\n                    allAriaLabelledBy[z].setAttribute('aria-labelledby', currentAriaLabelledBy + '-' + index);\n                }\n            });\n\n            // When external assets are loaded run this\n            function readyAdjustments() {\n                wrapperEl.forEach(function (item, index) {\n                    \n                    // Tidy js\n                    if (item.querySelector('[data-view-markup-in-page]') && item.querySelector('[data-view-markup-script-selector]')) {\n                        let inPageCodeJsBlock = item.querySelector('.view-markup__code--js');\n                        let scriptSelector = item.querySelector('[data-view-markup-script-selector]').getAttribute('data-view-markup-script-selector');\n                        let scriptElement = document.querySelector(scriptSelector);\n                        let jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        \n                        let tidyJS = html_beautify(jsToTidy, {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeJsBlock.textContent = tidyJS;\n                        hljs.highlightElement(inPageCodeJsBlock);\n                        \n                        if (inPageCodeJsBlock.textContent !== '') {\n                            inPageCodeJsBlock.closest('.view-markup__content').classList.add('view-markup-modal--has-js');\n                        }\n                    }\n                    \n                    // Tidy html\n                    if (item.querySelector('[data-view-markup-in-page]')) {\n                        let inPageCodeHtmlBlock = item.querySelector('.view-markup__code--html');\n                        let tidyHTML = html_beautify(elHtmlClean[index], {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeHtmlBlock.textContent = tidyHTML;\n                        hljs.highlightElement(inPageCodeHtmlBlock);\n                    }\n                });\n                \n                // Ready to initialize modal navigation\n                modalNavigation();\n                \n                // Add ready class on body\n                document.documentElement.classList.add('js-view-markup-ready');\n\n                const vmReadyEvent = new Event('ViewMarkupReady');\n                window.dispatchEvent(vmReadyEvent);\n            }\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Cache rendered elements\n            // -----------------------------------------------------------------------------\n\n            let modalContent = document.querySelectorAll('.view-markup__content');\n            let modalCloseBtn = document.querySelectorAll('.view-markup__close-btn');\n            let copyBtn = document.querySelectorAll('.view-markup__copy-btn');\n            let settingsBtn = document.querySelectorAll('.view-markup__settings-btn');\n            let settingsDropdown = document.querySelectorAll('.view-markup__settings-dropdown');\n            let textArea = document.querySelectorAll('.view-markup__hidden-textarea');\n            let preEl = document.querySelectorAll('.view-markup__pre');\n            let htmlCodeEl = document.querySelectorAll('.view-markup__code--html');\n            let jsCodeEl = document.querySelectorAll('.view-markup__code--js');\n            let radio2Spaces = document.querySelectorAll('.view-markup__indent-2');\n            let radio4Spaces = document.querySelectorAll('.view-markup__indent-4');\n            let themeDark = document.querySelectorAll('.view-markup__theme-dark');\n            let themeLight = document.querySelectorAll('.view-markup__theme-light');\n            let fontSize = document.querySelectorAll('.view-markup__font-size');\n            let htmlTab = document.querySelectorAll('.view-markup__tabs-button--html');\n            let jsTab = document.querySelectorAll('.view-markup__tabs-button--js');\n\n            // Modal specific elements\n            let modalCodeHtmlEL = document.querySelector('.view-markup-modal .view-markup__code--html');\n            let modalContentEl = document.querySelector('.view-markup-modal .view-markup__content');\n            let modalTitleEl = document.querySelector('.view-markup-modal .view-markup__title');\n            let modalSizeMedium = document.querySelectorAll('.view-markup__size-medium');\n            let modalSizeLarge = document.querySelectorAll('.view-markup__size-large');\n            let modalCodeJsEL = document.querySelectorAll('.view-markup-modal .view-markup__code--js');\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Setup cached settings\n            // -----------------------------------------------------------------------------\n\n            // Select cached tabspaces radio\n            if (localStorage.getItem('checkedSpaceTab') === null || localStorage.getItem('checkedSpaceTab') === '4' ) {\n                radio4Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                radio2Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            }\n\n\n            // Select cached theme radio\n            if (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') {\n                themeDark.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                themeLight.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.documentElement.classList.add('js-view-markup-theme-light');\n            }\n\n\n            // Select cached modal size radio\n            if (localStorage.getItem('checkedModalSize') === null || localStorage.getItem('checkedModalSize') === 'medium' ) {\n                modalSizeMedium.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                modalSizeLarge.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.body.classList.add('js-view-markup-size-large');\n            } \n\n\n            // Get cached font-size\n            if (localStorage.getItem('fontSizevalue') === null ) {\n                fontSize.forEach(function (item) {\n                    item.value = '13';\n                });\n            } else {\n                let currentValue = localStorage.getItem('fontSizevalue');\n                \n                fontSize.forEach(function (item) {\n                    item.value = localStorage.getItem('fontSizevalue');\n                });\n\n                preEl.forEach(function (item, index) {\n                    item.style.fontSize = currentValue + 'px';\n                });\n            }\n\n            \n            // Font code font size\n            fontSize.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    let currentValue = item.value;\n                    \n                    localStorage.setItem('fontSizevalue', currentValue);\n\n                    fontSize.forEach(function (item, index) {\n                        item.value = currentValue\n                    });\n\n                    preEl.forEach(function (item, index) {\n                        item.style.fontSize = currentValue + 'px';\n                    });\n                });\n            });\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Modal and code controls\n            // -----------------------------------------------------------------------------\n\n            // Copy button\n            copyBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    let currentShowingCode;\n                    let closestElement = item.closest('.view-markup__content');\n                    let currentCode = closestElement.querySelectorAll('.view-markup__code');\n                            \n                    for (let i = 0; i < currentCode.length; i++) {\n                        if (currentCode[i].offsetWidth > 0 && currentCode[i].offsetHeight > 0) {\n                            currentShowingCode = currentCode[i];\n                        }\n                    }\n                            \n                    applyTidyCodeToTextArea(currentShowingCode.textContent, getCachedSpaceTab(), index);\n                    \n                    applyCopyBtnState('disabled');\n\n                    navigator.clipboard.writeText(textArea[index].value);\n                });\n            });\n\n            // Tabspaces (2) radio change event listeners\n            radio2Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 2);\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 2 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(2, null, true, jsCodeEl);\n                                                \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n            // Tabspaces (4) radio change event listeners\n            radio4Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 4);\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 4 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(4, null, true, jsCodeEl);\n                        \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n\n            // Dark theme radio change event listeners\n            themeDark.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'dark');\n                        document.documentElement.classList.remove('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssDarkUrl;\n                    }\n                });\n            });\n\n            // Light theme radio change event listeners\n            themeLight.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'light');\n                        document.documentElement.classList.add('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssLightUrl;\n                    }\n                });\n            });\n\n            // Medium modal size radio change event listeners\n            modalSizeMedium.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeLarge.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeMedium.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'medium');\n                        document.body.classList.remove('js-view-markup-size-large');\n                    }\n                });\n            });\n\n            // Large modal size radio change event listeners\n            modalSizeLarge.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeMedium.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeLarge.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'large');\n                        document.body.classList.add('js-view-markup-size-large');\n                    }\n                });\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // HTML/JS tab toggling\n            // -----------------------------------------------------------------------------\n\n            htmlTab.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.remove('view-markup--js-tab-showing');\n                });\n            });\n\n            jsTab.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.add('view-markup--js-tab-showing');\n                });\n            });\n\n\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Exiting the modal\n            // -----------------------------------------------------------------------------\n\n            // Hide modal by clicking outside of it\n            modalEl.addEventListener('mousedown', function (event) {\n                let isClickInside = false;\n                \n                modalContent.forEach(function (item) {\n                    if ( item.contains(event.target) ) {\n                        isClickInside = true;\n                    }\n                });\n                \n                if (!isClickInside && this.classList.contains('view-markup-modal--showing')) {\n                    modalHide();\n                }\n            });\n\n            // Hide modal with close and cancel button click\n            modalCloseBtn.forEach(function (item) {\n                item.addEventListener('click', function () {\n                    modalHide();\n                });\n            });\n\n            // Hide modal with esc key\n            modalEl.addEventListener('keydown', function (e) {\n                let key = e.key;\n\n                if (key === 'Escape' && document.documentElement.classList.contains('js-view-markup-modal-showing')) {\n                    modalHide();\n                }\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Settings dropdown functionality\n            // -----------------------------------------------------------------------------\n\n            let optionDropdownClass = 'view-markup__settings-dropdown--showing';\n\n            // Settings dropdown\n            settingsBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    let ariaExpandedAttr = this.getAttribute('aria-expanded');\n\n                    this.setAttribute('aria-expanded', (ariaExpandedAttr === 'true') ? 'false' : 'true');\n                    settingsDropdown[index].classList.toggle(optionDropdownClass);\n                });\n            });\n\n            // Hide settings dropdown by clicking outside of it\n            document.addEventListener('mousedown', function (event) {\n                settingsDropdown.forEach(function (item, index) {\n                    let isClickInside = item.contains(event.target);\n\n                    if (\n                        !event.target.classList.contains('view-markup__settings-btn') &&\n                        item.classList.contains(optionDropdownClass) &&\n                        !isClickInside\n                    ) {\n                        settingsBtn[index].setAttribute('aria-expanded', false);\n                        item.classList.remove(optionDropdownClass);\n                    }\n                });\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Functions\n            // -----------------------------------------------------------------------------\n\n            // Function properly assigns untouched DOM html modal\n            function viewMarkupInitialize() {\n                elHtmlClean.forEach(function (item, index) {\n                    \n                    // Assign modal button to correct html to view\n                    let modalParent = viewMarkupEl[index].closest('.view-markup') || viewMarkupEl[index];\n                    let modalBtnEL = modalParent.querySelector('.view-markup__modal-btn');\n\n                    // Crack open the modal with the correct html in view\n                    modalMapping(item, 2, modalBtnEL, null);\n                });\n                \n                readyAdjustments();\n            }\n\n            // Cleanup and highlight markup\n            function applyCleanHtml(html, spaces, btnEl, codeEl) {\n                let tidyHTML = html_beautify(html, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                    \n                codeEl.textContent = tidyHTML;\n                \n                hljs.highlightElement(codeEl);\n            }\n\n            // Cleanup and highlight associated js\n            function applyCleanJs(spaces, btnEl, setTabSpaces, jsCodeEl) {    \n                for (let i = 0; i < jsCodeEl.length; i++) {\n                    if (jsCodeEl[i] !== undefined) {\n                        let jsToTidy;\n                                \n                        if (setTabSpaces) {\n                            jsToTidy = jsCodeEl[i].textContent;\n                        } else if (btnEl !== null && btnEl.hasAttribute('data-view-markup-script-selector')) {\n                            let scriptElement = document.querySelector(btnEl.getAttribute('data-view-markup-script-selector'));\n                            jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        }\n                                \n                        jsCodeEl[i].textContent = '';\n                        \n                        let tidyJs = html_beautify(jsToTidy, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                        \n                        jsCodeEl[i].textContent = tidyJs;\n                        \n                        hljs.highlightElement(jsCodeEl[i]);\n                    }\n                }\n            }\n\n            // Return cached space/tab amount\n            function getCachedSpaceTab() {\n                let checkedSpacesRadio;\n                if (localStorage.getItem('checkedSpaceTab') === null) {\n                    checkedSpacesRadio = (radio2Spaces[0].checked === true) ? 2 : 4;\n                } else {\n                    checkedSpacesRadio = localStorage.getItem('checkedSpaceTab');\n                }\n                return checkedSpacesRadio;\n            }\n\n            // Populate hidden textarea with tidy html/js for copy button\n            function applyTidyCodeToTextArea(code, spaceTabRadio, index) {\n                let tidyCode = html_beautify(code, { indent_size: spaceTabRadio, space_in_empty_paren: true });\n                textArea[index].textContent = tidyCode;\n                return;\n            }\n\n            // Function that gets html, beautifies it, and displays it in a modal\n            let currentViewMarkupIndex;\n            function modalMapping(html, spaces, btnEl) {    \n                btnEl.addEventListener('click', function () {        \n                    \n                    // Current modal button index (used for modal navigation)\n                    currentViewMarkupIndex = this.getAttribute('data-view-markup-nav-index');\n                    \n                    // screenShotDomElement(viewMarkupEl[currentViewMarkupIndex]);\n\n                    // Clean html\n                    applyCleanHtml(html, spaces, this, modalCodeHtmlEL);\n                    \n                    // Clean js\n                    applyCleanJs(spaces, this, null, modalCodeJsEL);\n\n                    modalContentEl.classList.remove('view-markup--js-tab-showing');\n                    \n                    jsCodeEl.forEach(function (item) {\n                        if (item.textContent !== '') {\n                            modalContentEl.classList.add('view-markup-modal--has-js');\n                        } else {\n                            modalContentEl.classList.remove('view-markup-modal--has-js');\n                        }\n                    });\n                    \n                    modalShow();\n                    \n                    applyCopyBtnState('enabled');\n\n                    // Add option title to modal title if there is one\n                    if (btnEl.hasAttribute('data-view-markup-title')) {\n                        let cleanTitle = btnEl.getAttribute('data-view-markup-title').replace(/^'(.*)'$/, '$1');\n                        modalTitleEl.textContent = cleanTitle;\n                    } else {\n                        modalTitleEl.textContent = 'Viewing markup';\n                    }\n                    \n                    // Add option backdrop rgb to modal back\n                    if (btnEl.hasAttribute('data-view-markup-backdrop-rgb')) {\n                        modalEl.style.backgroundColor = 'rgba(' + options.backdropRgb + ', .7)';\n                    } else {\n                        modalEl.style.backgroundColor = '';\n                    }\n                });\n            }\n\n            // Apply copy button state\n            function applyCopyBtnState(state) {\n                let clickedButton = document.querySelectorAll('.view-markup__copy-btn:focus');\n                if (state === 'disabled') {\n                    clickedButton.forEach(function (item) {\n                        item.textContent = 'Copied';\n                        item.setAttribute('disabled', 'disabled');\n                    });\n                } else if (state === 'enabled') {\n                    copyBtn.forEach(function (item) {\n                        item.textContent = 'Copy';\n                        item.removeAttribute('disabled');\n                    });\n                }\n            }\n\n            // Wrap in tag\n            function wrapElement(el, wrapper) {\n                el.parentNode.insertBefore(wrapper, el);\n                wrapper.appendChild(el);\n            }\n\n            // Show modal\n            let focusedElementBeforeModal;\n            function modalShow() {\n                document.documentElement.classList.add('js-view-markup-modal-showing');\n                modalEl.classList.add('view-markup-modal--showing');\n                \n                // Save current focus\n                focusedElementBeforeModal = document.activeElement;\n\n                // Listen for and trap the keyboard\n                modalEl.addEventListener('keydown', trapTabKey);\n                \n                // Find all focusable children\n                let focusableElementsString =`\n                    a[href],\n                    area[href],\n                    input,\n                    select:not([disabled]),\n                    textarea:not([tabindex=\"-1\"]),\n                    button:not([disabled]),\n                    iframe,\n                    object,\n                    embed,\n                    [tabindex=\"0\"],\n                    [contenteditable]\n                `;\n                    \n                let focusableElements = modalEl.querySelectorAll(focusableElementsString);\n                \n                // Convert NodeList to Array\n                focusableElements = Array.prototype.slice.call(focusableElements);\n\n                let firstTabStop = focusableElements[0];\n                let lastTabStop = focusableElements[focusableElements.length - 1];\n                \n                // Set initial focus on the modal\n                modalEl.focus();\n                \n                function trapTabKey(e) {\n                    \n                    // Check for TAB key press\n                    if (e.keyCode === 9) {\n\n                        // SHIFT + TAB\n                        if (e.shiftKey) {\n                            if (document.activeElement === firstTabStop) {\n                                e.preventDefault();\n                                lastTabStop.focus();\n                            }\n\n                        // TAB\n                        } else {\n                            if (document.activeElement === lastTabStop) {\n                                e.preventDefault();\n                                firstTabStop.focus();\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Hide modal\n            function modalHide() {\n                document.documentElement.classList.remove('js-view-markup-modal-showing');\n                modalEl.classList.remove('view-markup-modal--showing');\n                applyCopyBtnState('enabled');\n                focusedElementBeforeModal.focus();\n            }\n\n            // Go to previous/next view markup element\n            function modalNavigate(el, direction) {\n                let mapToModalBtnIndex;\n                \n                if (direction === 'prev') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === 0) ? parseInt(elAmount) - 1 : parseInt(currentViewMarkupIndex) - 1;\n                } else if (direction === 'next') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === parseInt(elAmount) - 1) ? 0 : parseInt(currentViewMarkupIndex) + 1;\n                }\n                    \n                let mapToModalBtnSelector = '[data-view-markup-nav-index=\"' + mapToModalBtnIndex + '\"]';\n                let mapToModalBtn = document.querySelector(mapToModalBtnSelector.toString());\n                \n                document.documentElement.classList.add('js-view-markup-modal-showing--navigating');\n                \n                mapToModalBtn.click();\n                mapToModalBtn.focus();\n                \n                // Show corresponding tab if contained in one\n                if (mapToModalBtn.closest('.view-markup-tabs__panel')) {\n                    let tabParent = mapToModalBtn.closest('[data-view-markup-tabs]');\n                    let tablistPanelId = mapToModalBtn.closest('.view-markup-tabs__panel').id;\n                    \n                    tabParent\n                        .querySelector(`[aria-controls=\"${tablistPanelId}\"]`)\n                        .click();\n                }\n                \n                setTimeout(function () {\n                    document.documentElement.classList.remove('js-view-markup-modal-showing--navigating');\n                }, 300);\n            }\n\n            // Modal navigation arrows\n            function modalNavigation() {    \n                \n                // Add index to modal buttons for navigation\n                let modalNavEl = document.querySelector('.view-markup__nav');\n                let modalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                \n                elAmount = modalBtn.length;\n                \n                modalBtn.forEach(function (item, index) {\n                    item.setAttribute('data-view-markup-nav-index', index);\n                });\n                \n                if (elAmount > 1) {\n\n                    // Modal previous button\n                    let modalPrevBtn = modalEl.querySelector('.view-markup__prev-btn');\n\n                    // Modal next button\n                    let modalNextBtn = modalEl.querySelector('.view-markup__next-btn');\n                    \n                    // Modal previous button click\n                    modalPrevBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'prev');\n                    });\n\n                    // Modal next button click\n                    modalNextBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'next');\n                    });  \n                } else {\n\n                    // Remove modal nav if only 1 item\n                    modalNavEl.remove();\n                }\n                \n                if (modalNav === null) {\n                \n                    // Remove modal nav if no setting is found\n                    modalNavEl.remove();\n                }\n            }\n\n\n\n            // If dynamic position query param is set, do some stuff\n            if (dynamicPos !== null) {\n                window.addEventListener('ViewMarkupReady', () => {\n                \n                    // Create new div that will contain all modal buttons\n                    let floatingButtonHolder = document.createElement('div');\n                    floatingButtonHolder.classList.add('view-markup-dynamic-nav');\n                    \n                    if (dynamicPosZIndex !== null) {\n                        floatingButtonHolder.style.zIndex = dynamicPosZIndex.toString();\n                    }\n                    \n                    document.body.appendChild(floatingButtonHolder);\n            \n                    // Cache elements with modals\n                    let withmodalEl = document.querySelectorAll('[data-view-markup]:not([data-view-markup-render-in-page])');\n                    \n                    // Re-cache remaining buttons\n                    let floatingModalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                    \n                    // Dynamically position modal button next to associated element\n                    function positionModalBtns(load) {\n                        \n                        // Add inline css to position button at the top left of the element\n                        withmodalEl.forEach( (item, i) => {\n                            let btnElement = floatingModalBtn[i];\n            \n                            btnElement.style.top = (item.getBoundingClientRect().top + window.scrollY) + 'px';\n                            btnElement.style.left = item.getBoundingClientRect().left + 'px';\n            \n                            if (load === 'load') {\n                                floatingButtonHolder.appendChild(btnElement);\n                            }\n                        });\n                    }\n                    \n                    // Remove un-needed highlight divs\n                    let highlightElement = document.querySelectorAll('.view-markup__highlight');\n                    highlightElement.forEach( (item) => {\n                        item.remove();\n                    });\n            \n                    // Unwrap view-markup div\n                    wrapperEl.forEach( (item) => {\n                        unwrap(item);\n                    });\n                    \n                    // Position buttons on load\n                    positionModalBtns('load');\n                    \n                    // Position buttons after resize\n                    window.addEventListener('resize', debounce( () => {\n                        positionModalBtns();\n                    }));\n                }, false);\n            }\n\n\n            // Make div with role=button act like an actual button for a11y reasons\n            document.querySelectorAll('div[role=\"button\"]').forEach((item) => {\n                item.addEventListener('keydown', function (event) {\n                    if (event.key === 'Enter' || event.code === 'Space') {\n                        event.preventDefault();\n                        this.click();\n                    }\n                });\n            });\n                \n\n\n\n\n            \n            /* -----------------------------------------------------------------------------\n                EXPIREMENTAL WIP: prototype floating the buttons over the page instead of\n                wrapping each element in a div and then positioning it inside that div. Not\n                a fan of how much it currently modifies the DOM to get the modal button next\n                to the associated element correctly\n\n                TODOS:\n                ✓ Allow for dynamic button positioning\n                • Add \"Skip to view markup modal navigation\" skip link\n                • Add visual focus indicator to modal button when focus in the background\n                when using modal navigation.\n                ✓ Set smooth scrolling on the html,body when modal is active\n                • Enhance preserve attribute functionality a bit. (allow for top and inner)\n                • Add tab view\n            ----------------------------------------------------------------------------- */\n\n            // Unwrap function\n            function unwrap(wrapper) {\n                let docFrag = document.createDocumentFragment();\n                \n                while (wrapper.firstChild) {\n                    let child = wrapper.removeChild(wrapper.firstChild);\n                    docFrag.appendChild(child);\n                }\n\n                wrapper.parentNode.replaceChild(docFrag, wrapper);\n            }\n\n            // Debounce function (throttle window resize)\n            function debounce(func) {\n                let timer;\n\n                return (event) => {\n                    if (timer) {\n                        clearTimeout(timer);\n                    }\n                    timer = setTimeout(func, 1000, event);\n                };\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Create tabs view of view markup elements inside a container\n            // Based off https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role\n            // -----------------------------------------------------------------------------\n\n            const viewMarkupTabsParent = document.querySelectorAll('[data-view-markup-tabs]');\n    \n            viewMarkupTabsParent.forEach((parent) => {\n                parent.classList.add('view-markup-tabs');\n                \n                // Create tab nav element\n                const tabNav = document.createElement('div');\n                tabNav.classList.add('view-markup-tabs__nav');\n                tabNav.setAttributes({\n                    'role': 'tablist',\n                    'aria-label': 'View markup tabs'\n                });\n                parent.prepend(tabNav);\n\n                // Create tabs list element\n                const tabsList = document.createElement('div');\n                tabsList.classList.add('view-markup-tabs__tabs-list', 'view-markup-styled-scrollbar');\n                tabNav.prepend(tabsList);\n                \n                // Create tab nav item element(s)\n                const tabButton = document.createElement('div');\n                tabButton.classList.add('view-markup-tabs__tab-button');\n                \n                // Get title(s) if any\n                const vmEntry = parent.querySelectorAll('[data-view-markup]');\n                \n                // Setup tab list entry\n                vmEntry.forEach((entry, index) => {\n                    let tabButtonEntry = tabButton.cloneNode();\n                    let entryTitle = convertToParamString(entry.getAttribute('data-view-markup')).get('title');\n                    let uniqueID = renderID(entryTitle);\n                    \n                    tabButtonEntry.setAttributes({\n                        'aria-selected': (index === 0) ? 'true' : 'false',\n                        'role': 'tab',\n                        'tabindex': (index === 0) ? '0' : '-1',\n                        'aria-controls': uniqueID,\n                        'id': uniqueID + 'TabItem'\n                    });\n\n                    tabButtonEntry.innerHTML = entryTitle;\n                    tabsList.appendChild(tabButtonEntry);\n                });\n\n                // Setup tab panel areas\n                const vmPanel = parent.querySelectorAll('.view-markup');\n                const tabButtonElement = parent.querySelectorAll('.view-markup-tabs__tab-button');\n                \n                vmPanel.forEach((panel, index) => {\n                    panel.classList.add('view-markup-tabs__panel');\n                    panel.setAttributes({\n                        'role': 'tabpanel',\n                        'tabindex': '0',\n                        'aria-labelledby': tabButtonElement[index].getAttribute('id'),\n                        'id': tabButtonElement[index].getAttribute('aria-controls')\n                    });\n\n                    if (index > 0) {\n                        panel.setAttribute('hidden', 'true');\n                    }\n                });\n\n                const tabs = parent.querySelectorAll('[role=\"tab\"]');\n                const tabList = parent.querySelector('[role=\"tablist\"]');\n\n                // Add a click event handler to each tab\n                tabs.forEach((tab) => {\n                    tab.addEventListener('click', changeTabs);\n                });\n                \n                // Enable arrow navigation between tabs in the tab list\n                let tabFocus = 0;\n                \n                tabList.addEventListener('keydown', (event) => {\n                    \n                    // Move right\n                    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n                        tabs[tabFocus].setAttribute('tabindex', '-1');\n                        \n                        if (event.key === 'ArrowRight') {\n                            tabFocus++;\n                            \n                            // If we're at the end, go to the start\n                            if (tabFocus >= tabs.length) {\n                                tabFocus = 0;\n                            }\n                        \n                        // Move left\n                        } else if (event.key === 'ArrowLeft') {\n                            tabFocus--;\n                            \n                            // If we're at the start, move to the end\n                            if (tabFocus < 0) {\n                                tabFocus = tabs.length - 1;\n                            }\n                        }\n\n                        tabs[tabFocus].setAttribute('tabindex', '0');\n                        tabs[tabFocus].focus();\n                    }\n\n                    if (event.key === 'Enter' || event.code === 'Space') {\n                        event.preventDefault();\n                        event.target.click();\n                    }\n                });\n\n                // Create tab title and max-width option\n                let tabslistParam = convertToParamString(parent.getAttribute('data-view-markup-tabs'));\n                let tabsParams = {\n                    title: tabslistParam.get('title'),\n                    maxWidth: tabslistParam.get('max-width'),\n                    background: tabslistParam.get('background'),\n                    pillView: tabslistParam.get('pill-view'),\n                    paddingX: tabslistParam.get('padding-x'),\n                    class: tabslistParam.get('class'),\n                    modalBtn: tabslistParam.get('modal-btn')\n                }\n\n                if (tabsParams.title !== null) {\n                    const tabsTitle = document.createElement('div');\n                    tabsTitle.classList.add('view-markup-tabs__title');\n                    tabsTitle.innerHTML = tabsParams.title;\n                    tabNav.prepend(tabsTitle);\n                }\n\n                if (tabsParams.maxWidth !== null) {\n                    Object.assign(tabNav.style,{\n                        maxWidth: tabsParams.maxWidth,\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                    });\n                }\n                \n                if (tabsParams.paddingX !== null) {\n                    Object.assign(tabNav.style,{\n                        paddingLeft: tabsParams.paddingX,\n                        paddingRight: tabsParams.paddingX,\n                    });\n                }\n\n                if (tabsParams.background === 'false') {\n                    parent.classList.add('view-markup-tabs--bg-none');\n                }\n                \n                if (tabsParams.pillView !== null) {\n                    parent.classList.add('view-markup-tabs--pill-view');\n                }\n\n                if (tabsParams.class !== null) {\n                    let classes = tabsParams.class.replace(/,\\s|,/g, ' ').split(' ');\n                    classes.forEach((classItem) => {\n                        tabNav.classList.add(classItem);\n                    });\n                }\n\n                if (tabsParams.modalBtn !== null) {\n                    parent.classList.add('view-markup-tabs--show-modal-btn');\n\n                    // Create view markup button which controls the visible tab panel element\n                    const tabViewModalBtnSep = document.createElement('span');\n                    tabViewModalBtnSep.classList.add('view-markup-tabs__sep');\n                    tabNav.appendChild(tabViewModalBtnSep);\n\n                    const tabViewModalBtn = document.createElement('div');\n                    tabViewModalBtn.classList.add('view-markup-tabs__modal-btn');\n                    tabViewModalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                    tabViewModalBtn.setAttributes({\n                        'role': 'button',\n                        'tabindex': '0'\n                    });\n                    tabNav.appendChild(tabViewModalBtn);\n    \n                    tabViewModalBtn.addEventListener('click', function () {\n                        parent.querySelector('.view-markup-tabs__panel:not([hidden]) .view-markup__modal-btn').click();\n                    });\n    \n                    tabViewModalBtn.addEventListener('keydown', function (event) {\n                        if (event.key === 'Enter' || event.code === 'Space') {\n                            parent.querySelector('.view-markup-tabs__panel:not([hidden]) .view-markup__modal-btn').click();\n                        }\n                    });\n                }\n            });\n\n            // Display and scrollto tablist item if hash is available\n            let urlHash = window.location.hash;\n            if (urlHash !== '') {\n                let urlIDElement = document.querySelector(`${urlHash}`);\n                if (urlIDElement && urlIDElement.closest('[data-view-markup-tabs]')) {\n                    let associatedTab = document.querySelector('[aria-controls=\"' + urlHash.replace('#', '') +'\"]')\n                    \n                    // Click associated tab\n                    associatedTab.click();\n\n                    // Scroll into view\n                    associatedTab.scrollIntoView({\n                        behavior: 'smooth'\n                    });\n                }\n            }\n\n            function changeTabs(event) {\n                const target = event.target;\n                const parent = target.closest('.view-markup-tabs__nav');\n                const grandparent = parent.closest('.view-markup-tabs');\n\n                // Remove all current selected tabs\n                parent\n                    .querySelectorAll('[aria-selected=\"true\"]')\n                    .forEach((tab) => tab.setAttribute('aria-selected', 'false'));\n\n                // Set this tab as selected\n                target.setAttribute('aria-selected', 'true');\n\n                // Hide all tab panels\n                grandparent\n                    .querySelectorAll('[role=\"tabpanel\"]')\n                    .forEach((panel) => panel.setAttribute('hidden', true));\n\n                // Show the selected panel\n                grandparent.parentNode\n                    .querySelector(`#${target.getAttribute('aria-controls')}`)\n                    .removeAttribute('hidden');\n\n                event.target.focus();\n            }\n\n            function camelize(str) {\n                return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n                if (+match === 0) return \"\";\n                    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n                });\n            }\n\n            function renderID(str) {\n                return camelize(str.replace(/[^a-z0-9]/gi, ' '));\n            }\n\n            function convertToParamString(str) {\n                let stringCleanup = str.replace(/;\\s|;/g, '&').replace(/:\\s|:/g, '=');\n                let optionParam = new URLSearchParams(stringCleanup);\n                return optionParam;\n            }\n        }\n    });\n}\n\nwindow.addEventListener('DOMContentLoaded', viewMarkup);"]}