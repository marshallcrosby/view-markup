{"version":3,"sources":["view-markup.js"],"names":["viewMarkupEl","document","querySelectorAll","scriptLinkage","getElementById","modalNav","dynamicPos","dynamicPosZIndex","excludeAttribute","urlParam","URLSearchParams","getAttribute","split","get","srcready","Event","pageSrc","request","window","XMLHttpRequest","ActiveXObject","makeHttpObject","open","send","onreadystatechange","readyState","responseText","dispatchEvent","addEventListener","length","options","elHtmlInitial","elHtmlClean","elAmount","modalEl","createElement","markupContentHtmlString","parseOption","splitOn","optionString","trim","forEach","item","index","excludeAttributeArr","element","attribute","removeAttribute","tagName","toLowerCase","toString","outerHTML","el","optionPreserveAttr","semiColonSplit","undefined","leaveAttr","replace","modalBtn","classList","add","setAttribute","innerHTML","nodeName","wrapperDivBody","body","prepend","appendChild","markupWrapperDiv","wrapper","parentNode","insertBefore","title","btnX","btnY","btnZ","btnPos","btnAppendTo","btnPrependTo","btnColor","scriptSelector","backdropRgb","renderInPage","marginBottom","marginTop","currentElement","style","transform","zIndex","position","backgroundColor","elBtnParent","querySelector","closest","textStyle","textStyleString","textContent","head","highlightVersionNumb","css","js","themeCssDarkUrl","themeCssLightUrl","highlightCssUrl","localStorage","getItem","highlightScriptUrl","beautifyScriptUrl","loadExternalJs","scriptSrc","callback","getElementsByTagName","script","src","onload","url","link","id","rel","href","loadExternalCss","viewMarkupInitialize","modalDialog","wrapperEl","inPageBlock","inPageContent","inPageHeader","modalSetSize","readyAdjustments","inPageCodeJsBlock","jsToTidy","tidyJS","html_beautify","indent_size","getCachedSpaceTab","space_in_empty_paren","hljs","highlightElement","inPageCodeHtmlBlock","tidyHTML","remove","modalNavEl","modalPrevBtn","modalNextBtn","modalNavigate","this","modalNavigation","documentElement","allID","allFor","allAriaLabelledBy","x","y","currentFor","z","currentAriaLabelledBy","modalContent","modalCloseBtn","copyBtn","settingsBtn","settingsDropdown","textArea","preEl","htmlCodeEl","jsCodeEl","radio2Spaces","radio4Spaces","themeDark","themeLight","fontSize","htmlTab","jsTab","modalCodeHtmlEL","modalContentEl","modalTitleEl","modalSizeMedium","modalSizeLarge","modalCodeJsEL","checked","value","currentValue","setItem","currentShowingCode","currentCode","i","offsetWidth","offsetHeight","code","spaceTabRadio","tidyCode","applyTidyCodeToTextArea","applyCopyBtnState","navigator","clipboard","writeText","applyCleanHtml","applyCleanJs","focus","event","isClickInside","contains","target","modalHide","e","key","currentViewMarkupIndex","focusedElementBeforeModal","optionDropdownClass","modalBtnEL","html","spaces","btnEl","activeElement","keyCode","shiftKey","firstTabStop","preventDefault","lastTabStop","focusableElements","Array","prototype","slice","call","modalShow","hasAttribute","cleanTitle","codeEl","setTabSpaces","tidyJs","checkedSpacesRadio","state","clickedButton","focusedElementBeforemodalEl","direction","mapToModalBtnIndex","parseInt","mapToModalBtnSelector","mapToModalBtn","click","setTimeout","ariaExpandedAttr","toggle","floatingButtonHolder","withmodalEl","floatingModalBtn","positionModalBtns","load","btnElement","top","getBoundingClientRect","scrollY","left","docFrag","createDocumentFragment","firstChild","child","removeChild","replaceChild","unwrap","func","timer","clearTimeout","debounce"],"mappings":"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","sourcesContent":["/*!\n    * View markup v1.2.2\n    * Plugin that makes it easy for developers to view and copy the html needed for a component.\n    *\n    * Copyright 2021-2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n// Cache view markup elements immediately.\nconst viewMarkupEl = document.querySelectorAll('[data-view-markup]');\n\n(function () {\n    \"use strict\"\n\n    // Get query params if any\n    let scriptLinkage = document.getElementById('view-markup-js');\n    let modalNav = null;\n    let dynamicPos = null;\n    let dynamicPosZIndex = null;\n    let excludeAttribute = null;\n\n    if (scriptLinkage) {\n        let urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n        modalNav = urlParam.get('modal-nav');\n        dynamicPos = urlParam.get('dynamic-pos');\n        dynamicPosZIndex = urlParam.get('z-index');\n        excludeAttribute = urlParam.get('exclude-attribute');;\n    }\n\n    // -----------------------------------------------------------------------------\n    // Setup outer div and modal btn (with options)\n    // -----------------------------------------------------------------------------\n   \n    let srcready = new Event('src-is-ready');\n    let pageSrc = null;\n    let request = makeHttpObject();\n    \n    request.open('GET', '/', true);\n    request.send(null);\n    request.onreadystatechange = function() {\n        if (request.readyState === 4) {\n            pageSrc = request.responseText;\n            document.dispatchEvent(srcready);\n        }\n    }\n\n    // Get page src\n    function makeHttpObject() {\n        if ('XMLHttpRequest' in window) {\n            return new XMLHttpRequest();\n        } else if ('ActiveXObject' in window) {\n            return new ActiveXObject('Msxml2.XMLHTTP');\n        }\n    }\n\n    function removeAttributes(element, attributes) {\n        attributes.forEach(function (attribute) {\n            element.removeAttribute(attribute);\n        });\n    }\n\n    document.addEventListener('src-is-ready', function () {\n        if (viewMarkupEl.length > 0) {\n            \n            let elHtmlInitial = [];\n            let elHtmlClean = [];\n            let elAmount = 0;\n            let options;\n\n            // Declare base modal element right away to add some data attributes to\n            let modalEl = document.createElement('div');\n\n            let markupContentHtmlString = `//import _view-markup-modal.html`;\n\n            viewMarkupEl.forEach(function (item, index) {\n\n                // Remove specified param attrbute(s)\n                if (excludeAttribute !== null) {\n                    let excludeAttributeArr = excludeAttribute.split(',');\n                    removeAttributes(viewMarkupEl[index], excludeAttributeArr);\n                }\n                \n                // Cache all viewable markup elements               \n                elHtmlInitial[index] = (index === 0 && viewMarkupEl[0].tagName.toLowerCase() === 'html') ?\n                    pageSrc.toString() :\n                    viewMarkupEl[index].outerHTML.toString();\n                \n                // Remove the view markup specific data attributes\n                if (!leaveAttr(viewMarkupEl[index])) {\n                    elHtmlClean[index] = elHtmlInitial[index].replace(/data-view-markup=\"[^\\\"]*\"/g, '').replace(/data-view-markup/g, '');\n                }\n                \n                // Create modal button\n                let modalBtn = document.createElement('button');\n                modalBtn.classList.add('view-markup__modal-btn');\n                modalBtn.setAttribute('type', 'button');\n                modalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                    \n                // if <html> or <body> do things a bit differently\n                if (viewMarkupEl[index].nodeName.toLowerCase()  === 'body' || viewMarkupEl[index].nodeName.toLowerCase()  === 'html') {\n                    let wrapperDivBody = document.createElement('div');\n                    wrapperDivBody.classList.add('view-markup');\n                    wrapperDivBody.classList.add('view-markup--body');\n                    document.body.prepend(wrapperDivBody);\n                    wrapperDivBody.appendChild(modalBtn);\n                } else {\n                    \n                    // Wrap in div\n                    let markupWrapperDiv = document.createElement('div');\n                    markupWrapperDiv.classList.add('view-markup');\n                    markupWrapperDiv.innerHTML = '<div class=\"view-markup__highlight\"></div>';\n                    wrapElement(viewMarkupEl[index], markupWrapperDiv);\n                    markupWrapperDiv.prepend(modalBtn);\n                }\n                \n                options = {\n                    title: null,\n                    btnX: null,\n                    btnY: null,\n                    btnZ: null,\n                    btnPos: null,\n                    btnAppendTo: null,\n                    btnPrependTo: null,\n                    btnColor: null,\n                    scriptSelector: null,\n                    backdropRgb: null,\n                    renderInPage: null,\n                    marginBottom: null,\n                    marginTop: null,\n                    modalNav: null\n                };\n                    \n                // Apply some options to toggle if available\n                let currentElement = viewMarkupEl[index];\n                if (currentElement.getAttribute('data-view-markup') !== '') {\n                    let semiColonSplit = viewMarkupEl[index].getAttribute('data-view-markup').split(';');\n                    \n                    // Assign option values if any\n                    semiColonSplit.forEach(function (item, index) {\n                        if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                            options.title = parseOption(semiColonSplit[index], 'title');\n                        }\n\n                        if (semiColonSplit[index].split('btn-x:')[1] !== undefined) {\n                            options.btnX = parseOption(semiColonSplit[index], 'btn-x');\n                        }\n                        \n                        if (semiColonSplit[index].split('btn-y:')[1] !== undefined) {\n                            options.btnY = parseOption(semiColonSplit[index], 'btn-y');\n                        }\n                        \n                        if (semiColonSplit[index].split('btn-z:')[1] !== undefined) {\n                            options.btnZ = parseOption(semiColonSplit[index], 'btn-z');\n                        }\n                        \n                        if (semiColonSplit[index].split('btn-pos:')[1] !== undefined) {\n                            options.btnPos = parseOption(semiColonSplit[index], 'btn-pos');\n                        }\n                        \n                        if (semiColonSplit[index].split('btn-append-to:')[1] !== undefined) {\n                            options.btnAppendTo = parseOption(semiColonSplit[index], 'btn-append-to');\n                        }\n                        \n                        if (semiColonSplit[index].split('btn-prepend-to:')[1] !== undefined) {\n                            options.btnPrependTo = parseOption(semiColonSplit[index], 'btn-prepend-to');\n                        }\n                        \n                        if (semiColonSplit[index].split('btn-color:')[1] !== undefined) {\n                            options.btnColor = parseOption(semiColonSplit[index], 'btn-color');\n                        }\n                        \n                        if (semiColonSplit[index].split('associated-script:')[1] !== undefined) {\n                            options.scriptSelector = parseOption(semiColonSplit[index], 'associated-script');\n                        }\n                        \n                        if (semiColonSplit[index].split('backdrop-rgb:')[1] !== undefined) {\n                            options.backdropRgb = parseOption(semiColonSplit[index], 'backdrop-rgb');\n                        }\n                        \n                        if (semiColonSplit[index].split('render-in-page:')[1] !== undefined) {\n                            options.renderInPage = parseOption(semiColonSplit[index], 'render-in-page');\n                            currentElement.setAttribute('data-view-markup-render-in-page', '');\n                        }\n                        \n                        if (semiColonSplit[index].split('margin-bottom:')[1] !== undefined) {\n                            options.marginBottom = parseOption(semiColonSplit[index], 'margin-bottom');\n                        }\n                        \n                        if (semiColonSplit[index].split('margin-top:')[1] !== undefined) {\n                            options.marginTop = parseOption(semiColonSplit[index], 'margin-top');\n                        }\n                        \n                        if (semiColonSplit[index].split('modal-nav:')[1] !== undefined) {\n                            options.modalNav = parseOption(semiColonSplit[index], 'modal-nav');\n                        }\n                    });          \n                                        \n                    // Setup title attribute to be used later\n                    if (options.title) {\n                        modalBtn.setAttribute('data-view-markup-title', options.title);\n                    }\n\n                    // Btn x postion set\n                    if (options.btnX) {\n                        modalBtn.style.transform = 'translateX(' + options.btnX + ')';\n                    }\n\n                    // Btn y postion set\n                    if (options.btnY) {\n                        modalBtn.style.transform = 'translateY(' + options.btnY + ')';\n                    }\n\n                    // Btn both positions\n                    if (options.btnX && options.btnY) {\n                        modalBtn.style.transform = 'translateX(' + options.btnX + ') translateY(' + options.btnY + ')';\n                    }\n\n                    // Btn z-index\n                    if (options.btnZ) {\n                        modalBtn.style.zIndex = options.btnZ;\n                    }\n\n                    // Btn position\n                    if (options.btnPos) {\n                        modalBtn.style.position = options.btnPos;\n                    }\n                    \n                    // TODO: Btn color\n                    if (options.btnColor) {\n                        modalBtn.style.backgroundColor = options.btnColor;\n                    }\n\n                    // Append to selector\n                    if (options.btnAppendTo) {\n                        elBtnParent = document.querySelector(options.btnAppendTo);\n                        elBtnParent.appendChild(modalBtn);\n                    }\n\n                    // Prepend to selector\n                    if (options.btnPrependTo) {\n                        elBtnParent = document.querySelector(options.btnPrependTo);\n                        elBtnParent.prepend(modalBtn);\n                    }\n                    \n                    // Script selector\n                    if (options.scriptSelector) {\n                        modalBtn.setAttribute('data-view-markup-script-selector', options.scriptSelector);\n                    }\n                    \n                    // Backdrop rgba\n                    if (options.backdropRgb) {\n                        modalBtn.setAttribute('data-view-markup-backdrop-rgb', options.backdropRgb);\n                    }\n                    \n                    // In page rendering\n                    if (options.renderInPage) {\n                        modalBtn.setAttribute('data-view-markup-in-page', 'true');\n                    }\n                    \n                    // Modal navigation\n                    if (options.modalNav === 'true') {\n                        modalBtn.setAttribute('data-view-markup-modal-nav', 'true');\n                    }\n                    \n                    // Bottom margin for in page view\n                    if (options.marginBottom) {\n                        item.closest('.view-markup').style.marginBottom = options.marginBottom;\n                    }\n                    \n                    // Top margin for in page view\n                    if (options.marginTop) {\n                        item.closest('.view-markup').style.marginTop = options.marginTop;\n                    }\n                }   \n            });\n\n\n            // Check for preserve-attribute option\n            function leaveAttr(el) {\n                let optionPreserveAttr = null;\n                \n                if (el.getAttribute('data-view-markup').split(';')) {\n                    let semiColonSplit = el.getAttribute('data-view-markup').split(';');\n                    \n                    if (semiColonSplit[0].split('preserve-attribute:')[1] !== undefined) {\n                        optionPreserveAttr = semiColonSplit[0].split('preserve-attribute:')[1].trim();\n                    }\n                            \n                    if (optionPreserveAttr === 'true') {\n                        return true;\n                    } else {\n                        return false;\n                    }    \n                }\n            }\n            \n\n            // Spit out option value\n            function parseOption(splitOn, optionString) {\n                return splitOn.split(optionString + ':')[1].trim();\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Custom styles added via js\n            // -----------------------------------------------------------------------------\n\n            // Create style tag to dump styles into for the markup modal\n            let textStyle = document.createElement('style');\n            textStyle.setAttribute('id', 'viewMarkupStyle');\n\n            // Import compressed styles as a string\n            let textStyleString = `//import view-markup.css`;\n\n            // Apply in page styles to style tag\n            textStyle.textContent = textStyleString;\n\n            // Add in page styles to head\n            document.head.appendChild(textStyle);\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Load external libraries\n            // -----------------------------------------------------------------------------\n\n            // TODO: import these through npm packages\n\n            // Highlight css and js CDN. Project repo: https://github.com/highlightjs/highlight.js/\n            let highlightVersionNumb = {\n                css: '10.7.2',\n                js: '11.3.1'\n            }\n            let themeCssDarkUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/atom-one-dark.min.css';\n            let themeCssLightUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/github.min.css';\n\n            let highlightCssUrl = (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') ? themeCssDarkUrl : themeCssLightUrl;\n            let highlightScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.js + '/highlight.min.js';\n\n            // Beautify HTML CDN. Project repo: https://github.com/beautifier/beautifier.io\n            let beautifyVersionNumb = '1.14.0';\n            let beautifyScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/' + beautifyVersionNumb + '/beautify-html.min.js';\n\n            // HTML2Canvas CDN\n            let html2CanvasVersionNumb = '1.4.1';\n            let html2CanvasScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/html2canvas/' + html2CanvasVersionNumb + '/html2canvas.min.js';\n\n            // Load highlight js/css external assets\n            loadExternalCss(highlightCssUrl);\n\n            // Initalize everything after getting beautify-html script\n            loadExternalJs(beautifyScriptUrl, loadFinalJS);\n            \n            // loadExternalJs(html2CanvasScriptUrl);\n\n            function loadFinalJS() {\n                loadExternalJs(highlightScriptUrl, viewMarkupInitialize);\n            }\n\n            function loadExternalJs(scriptSrc, callback) {\n                let head = document.getElementsByTagName('head')[0];\n                let script = document.createElement('script');\n                \n                script.src = scriptSrc;\n                \n                head.appendChild(script);\n                script.onload = callback;\n            }\n\n            // Run after getting beautify-html/highlight.io external assets\n            function loadExternalCss(url, callback) {\n                let head = document.getElementsByTagName('head')[0];\n                let link = document.createElement('link');\n                    \n                link.id = 'highlightJsCss';\n                link.rel = 'stylesheet';\n                link.href = url;\n                \n                link.onreadystatechange = callback;\n                link.onload = callback;\n                head.appendChild(link);\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Render modal\n            // -----------------------------------------------------------------------------\n                \n            // Setup modal outer div and attributes\n            modalEl.classList.add('view-markup-modal');\n            modalEl.setAttribute('id', 'viewMarkupModal');\n            modalEl.setAttribute('aria-labelledby', 'viewMarkupModalTitle');\n            modalEl.setAttribute('aria-modal', true);\n            modalEl.setAttribute('role', 'dialog');\n            modalEl.setAttribute('tabindex', '-1');\n\n            // Create modal dialog div\n            let modalDialog = document.createElement('div');\n\n            // Insert modal dialog element into outer modal element\n            modalDialog.classList.add('view-markup-modal__dialog');\n            modalEl.appendChild(modalDialog);\n\n            // Add the rest of the html string into modal dialog\n            modalDialog.innerHTML = markupContentHtmlString;\n            document.body.appendChild(modalEl);\n\n            // Set in page element\n            let wrapperEl = document.querySelectorAll('.view-markup');\n            wrapperEl.forEach(function (item) {\n                if (item.querySelector('[data-view-markup-in-page]')) {\n                    let inPageBlock = document.createElement('div');\n                    inPageBlock.classList.add('view-markup__in-page-view');\n                    item.appendChild(inPageBlock);\n                    inPageBlock.innerHTML = markupContentHtmlString;\n                }\n            });\n\n            // Assign in page unique ids and adjust aria-lablledby to match\n            let inPageContent = document.querySelectorAll('.view-markup__in-page-view .view-markup__content');\n            let inPageHeader = document.querySelectorAll('.view-markup__in-page-view .view-markup__header');\n            let modalSetSize = document.querySelectorAll('.view-markup__size-set');\n\n            inPageContent.forEach(function (item, index) {\n                inPageHeader[index].remove();\n                modalSetSize[index].remove();\n                \n                let allID = item.querySelectorAll('[id]');\n                let allFor = item.querySelectorAll('[for]');\n                let allAriaLabelledBy = item.querySelectorAll('[aria-labelledby]');\n\n                // Unique id\n                for (let x = 0; x < allID.length; x++) {\n                    allID[x].id = allID[x].id + '-' + index;\n                }\n                \n                // Unique for\n                for (let y = 0; y < allFor.length; y++) {\n                    let currentFor = allFor[y].getAttribute('for');\n                    allFor[y].setAttribute('for', currentFor + '-' + index);\n                }\n\n                // Unique aria-labelledby\n                for (let z = 0; z < allAriaLabelledBy.length; z++) {\n                    let currentAriaLabelledBy = allAriaLabelledBy[z].getAttribute('aria-labelledby');\n                    allAriaLabelledBy[z].setAttribute('aria-labelledby', currentAriaLabelledBy + '-' + index);\n                }\n            });\n\n            // When external assets are loaded run this\n            function readyAdjustments() {\n                wrapperEl.forEach(function (item, index) {\n                    \n                    // Tidy js\n                    if (item.querySelector('[data-view-markup-in-page]') && item.querySelector('[data-view-markup-script-selector]')) {\n                        let inPageCodeJsBlock = item.querySelector('.view-markup__code--js');\n                        let scriptSelector = item.querySelector('[data-view-markup-script-selector]').getAttribute('data-view-markup-script-selector');\n                        let scriptElement = document.querySelector(scriptSelector);\n                        let jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        \n                        let tidyJS = html_beautify(jsToTidy, {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeJsBlock.textContent = tidyJS;\n                        hljs.highlightElement(inPageCodeJsBlock);\n                        \n                        if (inPageCodeJsBlock.textContent !== '') {\n                            inPageCodeJsBlock.closest('.view-markup__content').classList.add('view-markup-modal--has-js');\n                        }\n                    }\n                    \n                    // Tidy html\n                    if (item.querySelector('[data-view-markup-in-page]')) {\n                        let inPageCodeHtmlBlock = item.querySelector('.view-markup__code--html');\n                        let tidyHTML = html_beautify(elHtmlClean[index], {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeHtmlBlock.textContent = tidyHTML;\n                        hljs.highlightElement(inPageCodeHtmlBlock);\n                        \n                        // Remove uneeded modal button\n                        item.querySelector('[data-view-markup-in-page]').remove();\n                    }\n                });\n                \n                // Ready to initialize modal navigation\n                modalNavigation();\n                \n                // Add ready class on body\n                document.documentElement.classList.add('js-view-markup-ready');\n            }\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Cache rendered elements\n            // -----------------------------------------------------------------------------\n\n            let modalContent = document.querySelectorAll('.view-markup__content');\n            let modalCloseBtn = document.querySelectorAll('.view-markup__close-btn');\n            let copyBtn = document.querySelectorAll('.view-markup__copy-btn');\n            let settingsBtn = document.querySelectorAll('.view-markup__settings-btn');\n            let settingsDropdown = document.querySelectorAll('.view-markup__settings-dropdown');\n            let textArea = document.querySelectorAll('.view-markup__hidden-textarea');\n            let preEl = document.querySelectorAll('.view-markup__pre');\n            let htmlCodeEl = document.querySelectorAll('.view-markup__code--html');\n            let jsCodeEl = document.querySelectorAll('.view-markup__code--js');\n            let radio2Spaces = document.querySelectorAll('.view-markup__indent-2');\n            let radio4Spaces = document.querySelectorAll('.view-markup__indent-4');\n            let themeDark = document.querySelectorAll('.view-markup__theme-dark');\n            let themeLight = document.querySelectorAll('.view-markup__theme-light');\n            let fontSize = document.querySelectorAll('.view-markup__font-size');\n            let htmlTab = document.querySelectorAll('.view-markup__tabs-button--html');\n            let jsTab = document.querySelectorAll('.view-markup__tabs-button--js');\n            let inPageCodeBlock = document.querySelectorAll('.view-markup-in-page');\n\n            // Modal specific elements\n            let modalCodeHtmlEL = document.querySelector('.view-markup-modal .view-markup__code--html');\n            let modalContentEl = document.querySelector('.view-markup-modal .view-markup__content');\n            let modalTitleEl = document.querySelector('.view-markup-modal .view-markup__title');\n            let modalSizeMedium = document.querySelectorAll('.view-markup__size-medium');\n            let modalSizeLarge = document.querySelectorAll('.view-markup__size-large');\n            let modalCodeJsEL = document.querySelectorAll('.view-markup-modal .view-markup__code--js');\n\n\n\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Setup cached settings\n            // -----------------------------------------------------------------------------\n\n            // Select cached tabspaces radio\n            if (localStorage.getItem('checkedSpaceTab') === null || localStorage.getItem('checkedSpaceTab') === '4' ) {\n                radio4Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                radio2Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            }\n\n\n            // Select cached theme radio\n            if (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') {\n                themeDark.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                themeLight.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.documentElement.classList.add('js-view-markup-theme-light');\n            }\n\n\n            // Select cached modal size radio\n            if (localStorage.getItem('checkedModalSize') === null || localStorage.getItem('checkedModalSize') === 'medium' ) {\n                modalSizeMedium.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                modalSizeLarge.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.body.classList.add('js-view-markup-size-large');\n            } \n\n\n            // Get cached font-size\n            if (localStorage.getItem('fontSizevalue') === null ) {\n                fontSize.forEach(function (item) {\n                    item.value = '13';\n                });\n            } else {\n                let currentValue = localStorage.getItem('fontSizevalue');\n                \n                fontSize.forEach(function (item) {\n                    item.value = localStorage.getItem('fontSizevalue');\n                });\n\n                preEl.forEach(function (item, index) {\n                    item.style.fontSize = currentValue + 'px';\n                });\n            }\n\n            // Font code font size\n            fontSize.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    let currentValue = item.value;\n                    \n                    localStorage.setItem('fontSizevalue', currentValue);\n\n                    fontSize.forEach(function (item, index) {\n                        item.value = currentValue\n                    });\n\n                    preEl.forEach(function (item, index) {\n                        item.style.fontSize = currentValue + 'px';\n                    });\n                });\n            });\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Modal and code controls\n            // -----------------------------------------------------------------------------\n\n            // Copy button\n            copyBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    let currentShowingCode;\n                    let closestElement = item.closest('.view-markup__content');\n                    let currentCode = closestElement.querySelectorAll('.view-markup__code');\n                            \n                    for (let i = 0; i < currentCode.length; i++) {\n                        if (currentCode[i].offsetWidth > 0 && currentCode[i].offsetHeight > 0) {\n                            currentShowingCode = currentCode[i];\n                        }\n                    }\n                            \n                    applyTidyCodeToTextArea(currentShowingCode.textContent, getCachedSpaceTab(), index);\n                    \n                    applyCopyBtnState('disabled');\n\n                    navigator.clipboard.writeText(textArea[index].value);\n                });\n            });\n\n            // Tabspaces (2) radio change event listeners\n            radio2Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 2);\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 2 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(2, null, true, jsCodeEl);\n                                                \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n            // Tabspaces (4) radio change event listeners\n            radio4Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 4);\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 4 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(4, null, true, jsCodeEl);\n                        \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n\n            // Dark theme radio change event listeners\n            themeDark.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'dark');\n                        document.documentElement.classList.remove('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssDarkUrl;\n                    }\n                });\n            });\n\n            // Light theme radio change event listeners\n            themeLight.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'light');\n                        document.documentElement.classList.add('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssLightUrl;\n                    }\n                });\n            });\n\n            // Medium modal size radio change event listeners\n            modalSizeMedium.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeLarge.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeMedium.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'medium');\n                        document.body.classList.remove('js-view-markup-size-large');\n                    }\n                });\n            });\n\n            // Large modal size radio change event listeners\n            modalSizeLarge.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeMedium.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeLarge.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'large');\n                        document.body.classList.add('js-view-markup-size-large');\n                    }\n                });\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // HTML/JS tab toggling\n            // -----------------------------------------------------------------------------\n\n            htmlTab.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.remove('view-markup--js-tab-showing');\n                });\n            });\n\n            jsTab.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.add('view-markup--js-tab-showing');\n                });\n            });\n\n\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Exiting the modal\n            // -----------------------------------------------------------------------------\n\n            // Hide modal by clicking outside of it\n            modalEl.addEventListener('mousedown', function (event) {\n                let isClickInside = false;\n                \n                modalContent.forEach(function (item) {\n                    if ( item.contains(event.target) ) {\n                        isClickInside = true;\n                    }\n                });\n                \n                if (!isClickInside && this.classList.contains('view-markup-modal--showing')) {\n                    modalHide();\n                }\n            });\n\n            // Hide modal with close and cancel button click\n            modalCloseBtn.forEach(function (item) {\n                item.addEventListener('click', function () {\n                    modalHide();\n                });\n            });\n\n            // Hide modal with esc key\n            modalEl.addEventListener('keydown', function (e) {\n                let key = e.key;\n\n                if (key === 'Escape' && document.documentElement.classList.contains('js-view-markup-modal-showing')) {\n                    modalHide();\n                }\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Settings dropdown functionality\n            // -----------------------------------------------------------------------------\n\n            let optionDropdownClass = 'view-markup__settings-dropdown--showing';\n\n            // Settings dropdown\n            settingsBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    let ariaExpandedAttr = this.getAttribute('aria-expanded');\n\n                    this.setAttribute('aria-expanded', (ariaExpandedAttr === 'true') ? 'false' : 'true');\n                    settingsDropdown[index].classList.toggle(optionDropdownClass);\n                });\n            });\n\n            // Hide settings dropdown by clicking outside of it\n            document.addEventListener('mousedown', function (event) {\n                settingsDropdown.forEach(function (item, index) {\n                    let isClickInside = item.contains(event.target);\n\n                    if (\n                        !event.target.classList.contains('view-markup__settings-btn') &&\n                        item.classList.contains(optionDropdownClass) &&\n                        !isClickInside\n                    ) {\n                        settingsBtn[index].setAttribute('aria-expanded', false);\n                        item.classList.remove(optionDropdownClass);\n                    }\n                });\n            });\n\n            // Focus out of dropdown\n            // settingsDropdown.addEventListener('focusout', function (event) {\n            //     settingsBtn.setAttribute('aria-expanded', false);\n            //     settingsDropdown.classList.remove(optionDropdownClass);\n            // });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Functions\n            // -----------------------------------------------------------------------------\n\n            // Function properly assigns untouched DOM html modal\n            function viewMarkupInitialize() {\n                elHtmlClean.forEach(function (item, index) {\n                    \n                    // Assign modal button to correct html to view\n                    let modalParent = viewMarkupEl[index].closest('.view-markup') || viewMarkupEl[index];\n                    let modalBtnEL = modalParent.querySelector('.view-markup__modal-btn');\n\n                    // Crack open the modal with the correct html in view\n                    modalMapping(item, 2, modalBtnEL, null);\n                });\n                \n                readyAdjustments();\n            }\n\n            // Cleanup and highlight markup\n            function applyCleanHtml(html, spaces, btnEl, codeEl) {\n                let tidyHTML = html_beautify(html, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                    \n                codeEl.textContent = tidyHTML;\n                \n                hljs.highlightElement(codeEl);\n            }\n\n            // Cleanup and highlight associated js\n            function applyCleanJs(spaces, btnEl, setTabSpaces, jsCodeEl) {    \n                for (let i = 0; i < jsCodeEl.length; i++) {\n                    if (jsCodeEl[i] !== undefined) {\n                        let jsToTidy;\n                                \n                        if (setTabSpaces) {\n                            jsToTidy = jsCodeEl[i].textContent;\n                        } else if (btnEl !== null && btnEl.hasAttribute('data-view-markup-script-selector')) {\n                            let scriptElement = document.querySelector(btnEl.getAttribute('data-view-markup-script-selector'));\n                            jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        }\n                                \n                        jsCodeEl[i].textContent = '';\n                        \n                        let tidyJs = html_beautify(jsToTidy, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                        \n                        jsCodeEl[i].textContent = tidyJs;\n                        \n                        hljs.highlightElement(jsCodeEl[i]);\n                    }\n                }\n            }\n\n            // Return cached space/tab amount\n            function getCachedSpaceTab() {\n                let checkedSpacesRadio;\n                if (localStorage.getItem('checkedSpaceTab') === null) {\n                    checkedSpacesRadio = (radio2Spaces[0].checked === true) ? 2 : 4;\n                } else {\n                    checkedSpacesRadio = localStorage.getItem('checkedSpaceTab');\n                }\n                return checkedSpacesRadio;\n            }\n\n            // Populate hidden textarea with tidy html/js for copy button\n            function applyTidyCodeToTextArea(code, spaceTabRadio, index) {\n                let tidyCode = html_beautify(code, { indent_size: spaceTabRadio, space_in_empty_paren: true });\n                textArea[index].textContent = tidyCode;\n                return;\n            }\n\n            // Function that gets html, beautifies it, and displays it in a modal\n            let currentViewMarkupIndex;\n            function modalMapping(html, spaces, btnEl) {    \n                btnEl.addEventListener('click', function () {        \n                    \n                    // Current modal button index (used for modal navigation)\n                    currentViewMarkupIndex = this.getAttribute('data-view-markup-nav-index');\n                    \n                    // screenShotDomElement(viewMarkupEl[currentViewMarkupIndex]);\n\n                    // Clean html\n                    applyCleanHtml(html, spaces, this, modalCodeHtmlEL);\n                    \n                    // Clean js\n                    applyCleanJs(spaces, this, null, modalCodeJsEL);\n\n                    modalContentEl.classList.remove('view-markup--js-tab-showing');\n                    \n                    jsCodeEl.forEach(function (item) {\n                        if (item.textContent !== '') {\n                            modalContentEl.classList.add('view-markup-modal--has-js');\n                        } else {\n                            modalContentEl.classList.remove('view-markup-modal--has-js');\n                        }\n                    });\n                    \n                    modalShow();\n                    \n                    applyCopyBtnState('enabled');\n\n                    // Add option title to modal title if there is one\n                    if (btnEl.hasAttribute('data-view-markup-title')) {\n                        let cleanTitle = btnEl.getAttribute('data-view-markup-title').replace(/^'(.*)'$/, '$1');\n                        modalTitleEl.textContent = cleanTitle;\n                    } else {\n                        modalTitleEl.textContent = 'Viewing markup';\n                    }\n                    \n                    // Add option backdrop rgb to modal back\n                    if (btnEl.hasAttribute('data-view-markup-backdrop-rgb')) {\n                        modalEl.style.backgroundColor = 'rgba(' + options.backdropRgb + ', .7)';\n                    } else {\n                        modalEl.style.backgroundColor = '';\n                    }\n                });\n            }\n\n            // Apply copy button state\n            function applyCopyBtnState(state) {\n                let clickedButton = document.querySelectorAll('.view-markup__copy-btn:focus');\n                if (state === 'disabled') {\n                    clickedButton.forEach(function (item) {\n                        item.textContent = 'Copied';\n                        item.setAttribute('disabled', 'disabled');\n                    });\n                } else if (state === 'enabled') {\n                    copyBtn.forEach(function (item) {\n                        item.textContent = 'Copy';\n                        item.removeAttribute('disabled');\n                    });\n                }\n            }\n\n            // Wrap in tag\n            function wrapElement(el, wrapper) {\n                el.parentNode.insertBefore(wrapper, el);\n                wrapper.appendChild(el);\n            }\n\n            // Insert after\n            function insertAfter(newNode, existingNode) {\n                existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n            }\n\n            // Show modal\n            let focusedElementBeforeModal;\n            function modalShow() {\n                document.documentElement.classList.add('js-view-markup-modal-showing');\n                modalEl.classList.add('view-markup-modal--showing');\n                \n                // Save current focus\n                focusedElementBeforeModal = document.activeElement;\n\n                // Listen for and trap the keyboard\n                modalEl.addEventListener('keydown', trapTabKey);\n                \n                // Find all focusable children\n                let focusableElementsString =\n                    'a[href],' +\n                    'area[href],' +\n                    'input,' +\n                    'select:not([disabled]),' +\n                    'textarea:not([tabindex=\"-1\"]),' +\n                    'button:not([disabled]),' +\n                    'iframe,' +\n                    'object,' +\n                    'embed,' +\n                    '[tabindex=\"0\"],' +\n                    '[contenteditable]';\n                    \n                let focusableElements = modalEl.querySelectorAll(focusableElementsString);\n                \n                // Convert NodeList to Array\n                focusableElements = Array.prototype.slice.call(focusableElements);\n\n                let firstTabStop = focusableElements[0];\n                let lastTabStop = focusableElements[focusableElements.length - 1];\n                \n                // Set initial focus on the modal\n                modalEl.focus();\n                \n                function trapTabKey(e) {\n                    \n                    // Check for TAB key press\n                    if (e.keyCode === 9) {\n\n                        // SHIFT + TAB\n                        if (e.shiftKey) {\n                            if (document.activeElement === firstTabStop) {\n                                e.preventDefault();\n                                lastTabStop.focus();\n                            }\n\n                        // TAB\n                        } else {\n                            if (document.activeElement === lastTabStop) {\n                                e.preventDefault();\n                                firstTabStop.focus();\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Hide modal\n            function modalHide() {\n                document.documentElement.classList.remove('js-view-markup-modal-showing');\n                modalEl.classList.remove('view-markup-modal--showing');\n                applyCopyBtnState('enabled');\n                focusedElementBeforemodalEl.focus();\n            }\n\n            // Go to previous/next view markup element\n            function modalNavigate(el, direction) {\n                let mapToModalBtnIndex;\n                \n                if (direction === 'prev') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === 0) ? parseInt(elAmount) - 1 : parseInt(currentViewMarkupIndex) - 1;\n                } else if (direction === 'next') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === parseInt(elAmount) - 1) ? 0 : parseInt(currentViewMarkupIndex) + 1;\n                }\n                    \n                let mapToModalBtnSelector = '[data-view-markup-nav-index=\"' + mapToModalBtnIndex + '\"]';\n                let mapToModalBtn = document.querySelector(mapToModalBtnSelector.toString());\n                \n                document.documentElement.classList.add('js-view-markup-modal-showing--navigating');\n                \n                mapToModalBtn.click();\n                mapToModalBtn.focus();\n                \n                setTimeout(function () {\n                    document.documentElement.classList.remove('js-view-markup-modal-showing--navigating');\n                }, 300);\n            }\n\n            // Modal navigation arrows\n            function modalNavigation() {    \n                \n                // Add index to modal buttons for navigation\n                let modalNavEl = document.querySelector('.view-markup__nav');\n                let modalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                \n                elAmount = modalBtn.length;\n                \n                modalBtn.forEach(function (item, index) {\n                    item.setAttribute('data-view-markup-nav-index', index);\n                });\n                \n                if (elAmount > 1) {\n\n                    // Modal previous button\n                    let modalPrevBtn = modalEl.querySelector('.view-markup__prev-btn');\n\n                    // Modal next button\n                    let modalNextBtn = modalEl.querySelector('.view-markup__next-btn');\n                    \n                    // Modal previous button click\n                    modalPrevBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'prev');\n                    });\n\n                    // Modal next button click\n                    modalNextBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'next');\n                    });  \n                } else {\n\n                    // Remove modal nav if only 1 item\n                    modalNavEl.remove();\n                }\n                \n                if (modalNav === null) {\n                \n                    // Remove modal nav if no setting is found\n                    modalNavEl.remove();\n                }\n            }\n\n\n\n            // If dynamic position query param is set, do some stuff\n            if (dynamicPos !== null) {\n                window.addEventListener('load', () => {\n                \n                    // Create new div that will contain all modal buttons\n                    let floatingButtonHolder = document.createElement('div');\n                    floatingButtonHolder.classList.add('view-markup-dynamic-nav');\n                    \n                    if (dynamicPosZIndex !== null) {\n                        floatingButtonHolder.style.zIndex = dynamicPosZIndex.toString();\n                    }\n                    \n                    document.body.appendChild(floatingButtonHolder);\n            \n                    // Cache elements with modals\n                    let withmodalEl = document.querySelectorAll('[data-view-markup]:not([data-view-markup-render-in-page])');\n                    \n                    // Re-cache remaining buttons\n                    let floatingModalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                    \n                    // Dynamically position modal button next to associated element\n                    function positionModalBtns(load) {\n                        \n                        // Add inline css to position button at the top left of the element\n                        withmodalEl.forEach( (item, i) => {\n                            let btnElement = floatingModalBtn[i];\n            \n                            btnElement.style.top = (item.getBoundingClientRect().top + window.scrollY) + 'px';\n                            btnElement.style.left = item.getBoundingClientRect().left + 'px';\n            \n                            if (load === 'load') {\n                                floatingButtonHolder.appendChild(btnElement);\n                            }\n                        });\n                    }\n                    \n                    // Remove un-needed highlight divs\n                    let highlightElement = document.querySelectorAll('.view-markup__highlight');\n                    highlightElement.forEach( (item) => {\n                        item.remove();\n                    });\n            \n                    // Unwrap view-markup div\n                    wrapperEl.forEach( (item) => {\n                        unwrap(item);\n                    });\n                    \n                    // Position buttons on load\n                    positionModalBtns('load');\n                    \n                    // Position buttons after resize\n                    window.addEventListener('resize', debounce( () => {\n                        positionModalBtns();\n                    }));\n                });\n            }\n\n\n\n\n            \n            /* -----------------------------------------------------------------------------\n                EXPIREMENTAL WIP: prototype floating the buttons over the page instead of\n                wrapping each element in a div and then positioning it inside that div. Not\n                a fan of how much it currently modifies the DOM to get the modal button next\n                to the associated element correctly\n\n                TODOS:\n                ✓ Allow for dynamic button positioning\n                • Add \"Skip to view markup modal navigation\" skip link\n                • Add visual focus indicator to modal button when focus in the background\n                when using modal navigation.\n                ✓ Set smooth scrolling on the html,body when modal is active\n                • Enhance preserve attribute functionality a bit. (allow for top and inner)\n            ----------------------------------------------------------------------------- */\n\n            // Render image of view-markup element\n            function screenShotDomElement(el) {\n                html2canvas(el).then(function(canvas) {\n                    document.body.appendChild(canvas);\n                });\n            }\n\n            // Unwrap function\n            function unwrap(wrapper) {\n                let docFrag = document.createDocumentFragment();\n                \n                while (wrapper.firstChild) {\n                    let child = wrapper.removeChild(wrapper.firstChild);\n                    docFrag.appendChild(child);\n                }\n\n                wrapper.parentNode.replaceChild(docFrag, wrapper);\n            }\n\n            // Debounce function (throttle window resize)\n            function debounce(func) {\n                let timer;\n\n                return (event) => {\n                    if (timer) {\n                        clearTimeout(timer);\n                    }\n                    timer = setTimeout(func, 1000, event);\n                };\n            }\n        }\n    });\n})();"]}