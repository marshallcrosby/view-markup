{"version":3,"sources":["view-markup.js"],"names":["viewMarkup","viewMarkupEl","document","querySelectorAll","scriptLinkage","getElementById","querySelector","param","modalNav","dynamicPos","dynamicPosZIndex","excludeAttribute","urlParam","URLSearchParams","getAttribute","split","get","srcReady","Event","request","window","XMLHttpRequest","ActiveXObject","makeHttpObject","pageSrc","open","location","href","send","onreadystatechange","readyState","responseText","dispatchEvent","Element","prototype","setAttributes","attrs","key","this","setAttribute","addEventListener","str","srcViewMarkupEl","DOMParser","parseFromString","length","options","elHtmlInitial","elHtmlClean","elAmount","markupContentHtmlString","forEach","item","index","excludeAttributeArr","element","attribute","removeAttribute","el","optionExclude","convertToParamString","optionExlcudeArr","excludeAttr","tagName","toLowerCase","outerHTML","replace","modalBtn","createElement","classList","add","role","tabindex","innerHTML","nodeName","wrapperDivBody","body","prepend","appendChild","markupWrapperDiv","wrapper","parentNode","insertBefore","wrapElement","optionsParams","title","btnX","btnY","btnZ","btnPos","btnAppendTo","btnPrependTo","btnColor","scriptSelector","backdropRgb","renderInPage","marginBottom","marginTop","style","transform","zIndex","position","backgroundColor","elBtnParent","closest","textStyle","textStyleString","textContent","head","highlightVersionNumb","css","js","themeCssDarkUrl","themeCssLightUrl","highlightCssUrl","localStorage","getItem","highlightScriptUrl","beautifyScriptUrl","loadExternalJs","scriptSrc","callback","getElementsByTagName","script","src","onload","url","link","id","rel","loadExternalCss","viewMarkupInitialize","modalEl","aria-labelledby","aria-modal","modalDialog","wrapperEl","inPageBlock","inPageContent","inPageHeader","modalSetSize","readyAdjustments","inPageCodeJsBlock","jsToTidy","toString","tidyJS","html_beautify","indent_size","getCachedSpaceTab","space_in_empty_paren","hljs","highlightElement","inPageCodeHtmlBlock","tidyHTML","modalNavEl","modalPrevBtn","modalNextBtn","modalNavigate","remove","modalNavigation","documentElement","vmReadyEvent","allID","allFor","allAriaLabelledBy","x","y","currentFor","z","currentAriaLabelledBy","modalContent","modalCloseBtn","copyBtn","settingsBtn","settingsDropdown","textArea","preEl","htmlCodeEl","jsCodeEl","radio2Spaces","radio4Spaces","themeDark","themeLight","fontSize","htmlTab","jsTab","modalCodeHtmlEL","modalContentEl","modalTitleEl","modalSizeMedium","modalSizeLarge","modalCodeJsEL","checked","value","currentValue","setItem","currentShowingCode","currentCode","i","offsetWidth","offsetHeight","code","spaceTabRadio","tidyCode","applyTidyCodeToTextArea","applyCopyBtnState","navigator","clipboard","writeText","applyCleanHtml","applyCleanJs","focus","event","isClickInside","contains","target","modalHide","optionDropdownClass","modalBtnEL","html","spaces","btnEl","currentViewMarkupIndex","focusedElementBeforeModal","activeElement","keyCode","shiftKey","firstTabStop","preventDefault","lastTabStop","focusableElements","Array","slice","call","modalShow","hasAttribute","cleanTitle","codeEl","setTabSpaces","undefined","tidyJs","checkedSpacesRadio","state","clickedButton","direction","mapToModalBtnIndex","parseInt","mapToModalBtnSelector","mapToModalBtn","click","tabParent","tablistPanelId","setTimeout","ariaExpandedAttr","toggle","floatingButtonHolder","withmodalEl","floatingModalBtn","positionModalBtns","load","btnElement","top","getBoundingClientRect","scrollY","left","docFrag","createDocumentFragment","firstChild","child","removeChild","replaceChild","unwrap","func","timer","clearTimeout","debounce","parent","tabNav","aria-label","tabsList","tabButton","entry","tabButtonEntry","cloneNode","entryTitleText","entryTitle","uniqueID","match","toUpperCase","camelize","renderID","aria-selected","aria-controls","vmPanel","tabButtonElement","panel","tabs","tabList","tab","changeTabs","tabFocus","tabslistParam","tabsParams","maxWidth","background","pillView","paddingX","class","tabsTitle","Object","assign","marginLeft","marginRight","paddingLeft","paddingRight","classItem","tabViewModalBtnSep","tabViewModalBtn","urlHash","hash","urlIDElement","associatedTab","scrollIntoView","behavior","grandparent","stringCleanup"],"mappings":";;;;;;;AAQA,MAAMA,WAAa,WAGf,MAAMC,EAAeC,SAASC,iBAAiB,sBAGzCC,EAAgBF,SAASG,eAAe,mBAAqBH,SAASI,cAAc,4BACpFC,EAAQ,CACVC,SAAU,KACVC,WAAY,KACZC,iBAAkB,KAClBC,iBAAkB,MAGtB,GAAIP,EAAe,CACf,MAAMQ,EAAW,IAAIC,gBAAgBT,EAAcU,aAAa,OAAOC,MAAM,KAAK,IAClFR,EAAMC,SAAWI,EAASI,IAAI,aAC9BT,EAAME,WAAaG,EAASI,IAAI,eAChCT,EAAMG,iBAAmBE,EAASI,IAAI,WACtCT,EAAMI,iBAAmBC,EAASI,IAAI,qBAG1C,MAAMC,EAAW,IAAIC,MAAM,wBACrBC,EAaN,WACI,GAAI,mBAAoBC,OACpB,OAAO,IAAIC,eACR,GAAI,kBAAmBD,OAC1B,OAAO,IAAIE,cAAc,kBAjBjBC,GAChB,IAAIC,EAAU,KAEdL,EAAQM,KAAK,MAAOL,OAAOM,SAASC,MAAM,GAC1CR,EAAQS,KAAK,MACbT,EAAQU,mBAAqB,WACE,IAAvBV,EAAQW,aACRN,EAAUL,EAAQY,aAClB7B,SAAS8B,cAAcf,KA2B/BgB,QAAQC,UAAUC,cAAgB,SAAUC,GACxC,IAAI,IAAIC,KAAOD,EACXE,KAAKC,aAAaF,EAAKD,EAAMC,KAIrCnC,SAASsC,iBAAiB,uBAAwB,WAnBlD,IAAsBC,EAqBlB,MAAMC,GArBYD,EAoBejB,GAnBlB,IAAImB,WACAC,gBAAgBH,EAAK,cAmBJtC,iBAAiB,sBAErD,GAAIF,EAAa4C,OAAS,EAAG,CACzB,IAGIC,EAHAC,EAAgB,GAChBC,EAAc,GACdC,EAAW,EAEf,MAAMC,EAA0B,qjNAKhCjD,EAAakD,QAAQ,SAAUC,EAAMC,GAGjC,GAA+B,OAA3B9C,EAAMI,iBAA2B,CACjC,MAAM2C,EAAsB/C,EAAMI,iBAAiBI,MAAM,KA9B/CwC,EA+BOb,EAAgBW,GAAQC,EA9B1CH,QAAQ,SAAUK,GACzBD,EAAQE,gBAAgBD,KAFhC,IAA0BD,GAqLlB,SAAqBG,GACjB,MAAMC,EAAgBC,EAAqBF,EAAG5C,aAAa,qBAAqBE,IAAI,qBAEpF,GAAsB,OAAlB2C,EAAwB,CACxB,MAAME,EAAmBF,EAAc5C,MAAM,SAE7C8C,EAAiBV,QAAQ,SAAUK,GAC/BE,EAAGD,gBAAgBD,MAzJ3BM,CAAYpB,EAAgBW,IAG5BN,EAAcM,GAAoB,IAAVA,GAAyD,SAA1CpD,EAAa,GAAG8D,QAAQC,cAC3DxC,EACAkB,EAAgBW,GAAOY,UAqIA,OAHLL,EA/HM3D,EAAaoD,GA+HKvC,aAAa,qBAClBE,IAAI,sBA/HzCgC,EAAYK,GAASN,EAAcM,GAAOa,QAAQ,6BAA8B,IAAIA,QAAQ,sBAAuB,IAEnHlB,EAAYK,GAASN,EAAcM,GAIvC,IAAIc,EAAWjE,SAASkE,cAAc,OAStC,GARAD,EAASE,UAAUC,IAAI,0BACvBH,EAAShC,cAAc,CACnBoC,KAAQ,SACRC,SAAY,MAEhBL,EAASM,UAAY,+DAG+B,SAAhDxE,EAAaoD,GAAOqB,SAASV,eAA6E,SAAhD/D,EAAaoD,GAAOqB,SAASV,cAA2B,CAClH,MAAMW,EAAiBzE,SAASkE,cAAc,OAC9CO,EAAeN,UAAUC,IAAI,cAAe,qBAC5CpE,SAAS0E,KAAKC,QAAQF,GACtBA,EAAeG,YAAYX,OACxB,CAGH,MAAMY,EAAmB7E,SAASkE,cAAc,OAChDW,EAAiBV,UAAUC,IAAI,eAC/BS,EAAiBN,UAAY,6CAk1BrC,SAAqBf,EAAIsB,GACrBtB,EAAGuB,WAAWC,aAAaF,EAAStB,GACpCsB,EAAQF,YAAYpB,GAn1BhByB,CAAYlF,EAAaoD,GAAQ0B,GACjCA,EAAiBF,QAAQV,GAI7B,MAAMiB,EAAgBxB,EAAqB3D,EAAaoD,GAAOvC,aAAa,sBAE5EgC,EAAU,CACNuC,MAAOD,EAAcpE,IAAI,SACzBsE,KAAMF,EAAcpE,IAAI,SACxBuE,KAAMH,EAAcpE,IAAI,SACxBwE,KAAMJ,EAAcpE,IAAI,SACxByE,OAAQL,EAAcpE,IAAI,WAC1B0E,YAAaN,EAAcpE,IAAI,iBAC/B2E,aAAcP,EAAcpE,IAAI,kBAChC4E,SAAUR,EAAcpE,IAAI,aAC5B6E,eAAgBT,EAAcpE,IAAI,mBAClC8E,YAAaV,EAAcpE,IAAI,gBAC/B+E,aAAcX,EAAcpE,IAAI,kBAChCgF,aAAcZ,EAAcpE,IAAI,iBAChCiF,UAAWb,EAAcpE,IAAI,gBAIrBqE,OACRlB,EAAS5B,aAAa,yBAA0BO,EAAQuC,OAIxDvC,EAAQwC,OACRnB,EAAS+B,MAAMC,UAAY,cAAgBrD,EAAQwC,KAAO,KAI1DxC,EAAQyC,OACRpB,EAAS+B,MAAMC,UAAY,cAAgBrD,EAAQyC,KAAO,KAI1DzC,EAAQwC,MAAQxC,EAAQyC,OACxBpB,EAAS+B,MAAMC,UAAY,cAAgBrD,EAAQwC,KAAO,gBAAkBxC,EAAQyC,KAAO,KAI3FzC,EAAQ0C,OACRrB,EAAS+B,MAAME,OAAStD,EAAQ0C,MAIhC1C,EAAQ2C,SACRtB,EAAS+B,MAAMG,SAAWvD,EAAQ2C,QAIlC3C,EAAQ8C,WACRzB,EAAS+B,MAAMI,gBAAkBxD,EAAQ8C,UAIzC9C,EAAQ4C,cACRa,YAAcrG,SAASI,cAAcwC,EAAQ4C,aAC7Ca,YAAYzB,YAAYX,IAIxBrB,EAAQ6C,eACRY,YAAcrG,SAASI,cAAcwC,EAAQ6C,cAC7CY,YAAY1B,QAAQV,IAIpBrB,EAAQ+C,gBACR1B,EAAS5B,aAAa,mCAAoCO,EAAQ+C,gBAIlE/C,EAAQgD,aACR3B,EAAS5B,aAAa,gCAAiCO,EAAQgD,aAI/DhD,EAAQiD,eACR5B,EAAS5B,aAAa,2BAA4B,QAClDa,EAAKb,aAAa,kCAAmC,KAIrDO,EAAQkD,eACR5C,EAAKoD,QAAQ,gBAAgBN,MAAMF,aAAelD,EAAQkD,cAI1DlD,EAAQmD,YACR7C,EAAKoD,QAAQ,gBAAgBN,MAAMD,UAAYnD,EAAQmD,aAyC/D,MAAMQ,EAAYvG,SAASkE,cAAc,SACzCqC,EAAUlE,aAAa,KAAM,mBAG7B,MAAMmE,EAAkB,yurBAIxBD,EAAUE,YAAcD,EAGxBxG,SAAS0G,KAAK9B,YAAY2B,GAa1B,MAAMI,EAAuB,CACzBC,IAAK,SACLC,GAAI,UAEFC,EAAkB,uDAAyDH,EAAqBC,IAAM,gCACtGG,EAAmB,uDAAyDJ,EAAqBC,IAAM,yBAEvGI,EAAiE,OAA9CC,aAAaC,QAAQ,sBAA+E,SAA9CD,aAAaC,QAAQ,qBAAmCJ,EAAkBC,EACnJI,EAAqB,uDAAyDR,EAAqBE,GAAK,oBAIxGO,EAAoB,sDADE,SAC4E,wBAYxG,SAASC,EAAeC,EAAWC,GAC/B,MAAMb,EAAO1G,SAASwH,qBAAqB,QAAQ,GAC7CC,EAASzH,SAASkE,cAAc,UAEtCuD,EAAOC,IAAMJ,EAEbZ,EAAK9B,YAAY6C,GACjBA,EAAOE,OAASJ,GAIpB,SAAyBK,EAAKL,GAC1B,MAAMb,EAAO1G,SAASwH,qBAAqB,QAAQ,GAC7CK,EAAO7H,SAASkE,cAAc,QAEpC2D,EAAKC,GAAK,iBACVD,EAAKE,IAAM,aACXF,EAAKpG,KAAOmG,EAEZC,EAAKlG,mBAAqB4F,EAC1BM,EAAKF,OAASJ,EACdb,EAAK9B,YAAYiD,GA9BrBG,CAAgBhB,GAGhBK,EAAeD,EAEf,WACIC,EAAeF,EAAoBc,KAoCvC,MAAMC,EAAUlI,SAASkE,cAAc,OACvCgE,EAAQ/D,UAAUC,IAAI,qBAEtB8D,EAAQjG,cAAc,CAClB6F,GAAM,kBACNK,kBAAmB,uBACnBC,aAAc,OACd/D,KAAQ,SACRC,SAAY,OAIhB,MAAM+D,EAAcrI,SAASkE,cAAc,OAG3CmE,EAAYlE,UAAUC,IAAI,6BAC1B8D,EAAQtD,YAAYyD,GAGpBA,EAAY9D,UAAYvB,EACxBhD,SAAS0E,KAAKE,YAAYsD,GAG1B,MAAMI,EAAYtI,SAASC,iBAAiB,gBAC5CqI,EAAUrF,QAAQ,SAAUC,GACxB,GAAIA,EAAK9C,cAAc,8BAA+B,CAClD,MAAMmI,EAAcvI,SAASkE,cAAc,OAC3CqE,EAAYpE,UAAUC,IAAI,6BAC1BlB,EAAK0B,YAAY2D,GACjBA,EAAYhE,UAAYvB,KAKhC,MAAMwF,EAAgBxI,SAASC,iBAAiB,oDAC1CwI,EAAezI,SAASC,iBAAiB,mDACzCyI,EAAe1I,SAASC,iBAAiB,0BA6B/C,SAAS0I,IACLL,EAAUrF,QAAQ,SAAUC,EAAMC,GAG9B,GAAID,EAAK9C,cAAc,+BAAiC8C,EAAK9C,cAAc,sCAAuC,CAC9G,MAAMwI,EAAoB1F,EAAK9C,cAAc,0BACvCuF,EAAiBzC,EAAK9C,cAAc,sCAAsCQ,aAAa,oCAEvFiI,EADgB7I,SAASI,cAAcuF,GACd5B,UAAU+E,WAAW9E,QAAQ,YAAa,IAEnE+E,EAASC,cAAcH,EAAU,CACnCI,YAAaC,IACbC,sBAAsB,IAG1BP,EAAkBnC,YAAcsC,EAChCK,KAAKC,iBAAiBT,GAEgB,KAAlCA,EAAkBnC,aAClBmC,EAAkBtC,QAAQ,yBAAyBnC,UAAUC,IAAI,6BAKzE,GAAIlB,EAAK9C,cAAc,8BAA+B,CAClD,MAAMkJ,EAAsBpG,EAAK9C,cAAc,4BACzCmJ,EAAWP,cAAclG,EAAYK,GAAQ,CAC/C8F,YAAaC,IACbC,sBAAsB,IAG1BG,EAAoB7C,YAAc8C,EAClCH,KAAKC,iBAAiBC,MAsoBlC,WAGI,MAAME,EAAaxJ,SAASI,cAAc,qBACpC6D,EAAWjE,SAASC,iBAAiB,2BAQ3C,GANA8C,EAAWkB,EAAStB,OAEpBsB,EAAShB,QAAQ,SAAUC,EAAMC,GAC7BD,EAAKb,aAAa,6BAA8Bc,KAGhDJ,EAAW,EAAG,CAGd,MAAM0G,EAAevB,EAAQ9H,cAAc,0BAGrCsJ,EAAexB,EAAQ9H,cAAc,0BAG3CqJ,EAAanH,iBAAiB,QAAS,WACnCqH,EAAcvH,KAAM,UAIxBsH,EAAapH,iBAAiB,QAAS,WACnCqH,EAAcvH,KAAM,eAKxBoH,EAAWI,SAGQ,OAAnBvJ,EAAMC,UAGNkJ,EAAWI,SAvqBfC,GAGA7J,SAAS8J,gBAAgB3F,UAAUC,IAAI,wBAEvC,MAAM2F,EAAe,IAAI/I,MAAM,mBAC/BE,OAAOY,cAAciI,GAtEzBvB,EAAcvF,QAAQ,SAAUC,EAAMC,GAClCsF,EAAatF,GAAOyG,SACpBlB,EAAavF,GAAOyG,SAEpB,MAAMI,EAAQ9G,EAAKjD,iBAAiB,QAC9BgK,EAAS/G,EAAKjD,iBAAiB,SAC/BiK,EAAoBhH,EAAKjD,iBAAiB,qBAGhD,IAAK,IAAIkK,EAAI,EAAGA,EAAIH,EAAMrH,OAAQwH,IAC9BH,EAAMG,GAAGrC,GAAKkC,EAAMG,GAAGrC,GAAK,IAAM3E,EAItC,IAAK,IAAIiH,EAAI,EAAGA,EAAIH,EAAOtH,OAAQyH,IAAK,CACpC,IAAIC,EAAaJ,EAAOG,GAAGxJ,aAAa,OACxCqJ,EAAOG,GAAG/H,aAAa,MAAOgI,EAAa,IAAMlH,GAIrD,IAAK,IAAImH,EAAI,EAAGA,EAAIJ,EAAkBvH,OAAQ2H,IAAK,CAC/C,IAAIC,EAAwBL,EAAkBI,GAAG1J,aAAa,mBAC9DsJ,EAAkBI,GAAGjI,aAAa,kBAAmBkI,EAAwB,IAAMpH,MA0D3F,MAAMqH,EAAexK,SAASC,iBAAiB,yBACzCwK,EAAgBzK,SAASC,iBAAiB,2BAC1CyK,EAAU1K,SAASC,iBAAiB,0BACpC0K,EAAc3K,SAASC,iBAAiB,8BACxC2K,EAAmB5K,SAASC,iBAAiB,mCAC7C4K,EAAW7K,SAASC,iBAAiB,iCACrC6K,EAAQ9K,SAASC,iBAAiB,qBAClC8K,EAAa/K,SAASC,iBAAiB,4BACvC+K,EAAWhL,SAASC,iBAAiB,0BACrCgL,EAAejL,SAASC,iBAAiB,0BACzCiL,EAAelL,SAASC,iBAAiB,0BACzCkL,EAAYnL,SAASC,iBAAiB,4BACtCmL,EAAapL,SAASC,iBAAiB,6BACvCoL,EAAWrL,SAASC,iBAAiB,2BACrCqL,EAAUtL,SAASC,iBAAiB,mCACpCsL,EAAQvL,SAASC,iBAAiB,iCAGlCuL,EAAkBxL,SAASI,cAAc,+CACzCqL,EAAiBzL,SAASI,cAAc,4CACxCsL,EAAe1L,SAASI,cAAc,0CACtCuL,EAAkB3L,SAASC,iBAAiB,6BAC5C2L,GAAiB5L,SAASC,iBAAiB,4BAC3C4L,GAAgB7L,SAASC,iBAAiB,6CAiDhD,GAtCgD,OAA5CgH,aAAaC,QAAQ,oBAA2E,MAA5CD,aAAaC,QAAQ,mBACzEgE,EAAajI,QAAQ,SAAUC,GAC3BA,EAAK4I,SAAU,IAGnBb,EAAahI,QAAQ,SAAUC,GAC3BA,EAAK4I,SAAU,IAM2B,OAA9C7E,aAAaC,QAAQ,sBAA+E,SAA9CD,aAAaC,QAAQ,qBAC3EiE,EAAUlI,QAAQ,SAAUC,GACxBA,EAAK4I,SAAU,KAGnBV,EAAWnI,QAAQ,SAAUC,GACzBA,EAAK4I,SAAU,IAEnB9L,SAAS8J,gBAAgB3F,UAAUC,IAAI,+BAKM,OAA7C6C,aAAaC,QAAQ,qBAA6E,WAA7CD,aAAaC,QAAQ,oBAC1EyE,EAAgB1I,QAAQ,SAAUC,GAC9BA,EAAK4I,SAAU,KAGnBF,GAAe3I,QAAQ,SAAUC,GAC7BA,EAAK4I,SAAU,IAEnB9L,SAAS0E,KAAKP,UAAUC,IAAI,8BAKc,OAA1C6C,aAAaC,QAAQ,iBACrBmE,EAASpI,QAAQ,SAAUC,GACvBA,EAAK6I,MAAQ,WAEd,CACH,MAAMC,EAAe/E,aAAaC,QAAQ,iBAE1CmE,EAASpI,QAAQ,SAAUC,GACvBA,EAAK6I,MAAQ9E,aAAaC,QAAQ,mBAGtC4D,EAAM7H,QAAQ,SAAUC,EAAMC,GAC1BD,EAAK8C,MAAMqF,SAAWW,EAAe,OAM7CX,EAASpI,QAAQ,SAAUC,EAAMC,GAC7BD,EAAKZ,iBAAiB,SAAU,WAC5B,MAAM0J,EAAe9I,EAAK6I,MAE1B9E,aAAagF,QAAQ,gBAAiBD,GAEtCX,EAASpI,QAAQ,SAAUC,EAAMC,GAC7BD,EAAK6I,MAAQC,IAGjBlB,EAAM7H,QAAQ,SAAUC,EAAMC,GAC1BD,EAAK8C,MAAMqF,SAAWW,EAAe,WAajDtB,EAAQzH,QAAQ,SAAUC,EAAMC,GAC5BD,EAAKZ,iBAAiB,QAAS,WAC3B,IAAI4J,EACJ,MACMC,EADiBjJ,EAAKoD,QAAQ,yBACDrG,iBAAiB,sBAEpD,IAAK,MAAMmM,EAAI,EAAGA,EAAID,EAAYxJ,OAAQyJ,IAClCD,EAAYC,GAAGC,YAAc,GAAKF,EAAYC,GAAGE,aAAe,IAChEJ,EAAqBC,EAAYC,KAoUjD,SAAiCG,EAAMC,EAAerJ,GAClD,MAAMsJ,EAAWzD,cAAcuD,EAAM,CAAEtD,YAAauD,EAAerD,sBAAsB,IACzF0B,EAAS1H,GAAOsD,YAAcgG,EAlU1BC,CAAwBR,EAAmBzF,YAAayC,IAAqB/F,GAE7EwJ,EAAkB,YAElBC,UAAUC,UAAUC,UAAUjC,EAAS1H,GAAO4I,WAKtDd,EAAahI,QAAQ,SAAUC,EAAMC,GACjCD,EAAKZ,iBAAiB,SAAU,YACP,IAAjBF,KAAK0J,UAGL7E,aAAagF,QAAQ,kBAAmB,GAExCf,EAAajI,QAAQ,SAAUC,EAAMC,GACjCD,EAAK4I,SAAU,IAGnBb,EAAahI,QAAQ,SAAUC,EAAMC,GACjCD,EAAK4I,SAAU,IAInBf,EAAW9H,QAAQ,SAAUC,GACzB6J,EAAe7J,EAAKuD,YAAa,EAAG,KAAMvD,KAI9C8J,EAAa,EAAG,MAAM,EAAMhC,GAG5B2B,EAAkB,WAElBvK,KAAK6K,aAMjB/B,EAAajI,QAAQ,SAAUC,EAAMC,GACjCD,EAAKZ,iBAAiB,SAAU,YACP,IAAjBF,KAAK0J,UAGL7E,aAAagF,QAAQ,kBAAmB,GAExChB,EAAahI,QAAQ,SAAUC,EAAMC,GACjCD,EAAK4I,SAAU,IAGnBZ,EAAajI,QAAQ,SAAUC,EAAMC,GACjCD,EAAK4I,SAAU,IAInBf,EAAW9H,QAAQ,SAAUC,GACzB6J,EAAe7J,EAAKuD,YAAa,EAAG,KAAMvD,KAI9C8J,EAAa,EAAG,MAAM,EAAMhC,GAG5B2B,EAAkB,WAElBvK,KAAK6K,aAOjB9B,EAAUlI,QAAQ,SAAUC,GACxBA,EAAKZ,iBAAiB,SAAU,YACP,IAAjBF,KAAK0J,UAELV,EAAWnI,QAAQ,SAAUC,EAAMC,GAC/BD,EAAK4I,SAAU,IAGnBX,EAAUlI,QAAQ,SAAUC,EAAMC,GAC9BD,EAAK4I,SAAU,IAInB7E,aAAagF,QAAQ,oBAAqB,QAC1CjM,SAAS8J,gBAAgB3F,UAAUyF,OAAO,8BAC1C5J,SAASG,eAAe,kBAAkBsB,KAAOqF,OAM7DsE,EAAWnI,QAAQ,SAAUC,GACzBA,EAAKZ,iBAAiB,SAAU,YACP,IAAjBF,KAAK0J,UAELX,EAAUlI,QAAQ,SAAUC,EAAMC,GAC9BD,EAAK4I,SAAU,IAGnBV,EAAWnI,QAAQ,SAAUC,EAAMC,GAC/BD,EAAK4I,SAAU,IAInB7E,aAAagF,QAAQ,oBAAqB,SAC1CjM,SAAS8J,gBAAgB3F,UAAUC,IAAI,8BACvCpE,SAASG,eAAe,kBAAkBsB,KAAOsF,OAM7D4E,EAAgB1I,QAAQ,SAAUC,GAC9BA,EAAKZ,iBAAiB,SAAU,YACP,IAAjBF,KAAK0J,UAELF,GAAe3I,QAAQ,SAAUC,GAC7BA,EAAK4I,SAAU,IAGnBH,EAAgB1I,QAAQ,SAAUC,GAC9BA,EAAK4I,SAAU,IAInB7E,aAAagF,QAAQ,mBAAoB,UACzCjM,SAAS0E,KAAKP,UAAUyF,OAAO,kCAM3CgC,GAAe3I,QAAQ,SAAUC,GAC7BA,EAAKZ,iBAAiB,SAAU,YACP,IAAjBF,KAAK0J,UAELH,EAAgB1I,QAAQ,SAAUC,GAC9BA,EAAK4I,SAAU,IAGnBF,GAAe3I,QAAQ,SAAUC,GAC7BA,EAAK4I,SAAU,IAInB7E,aAAagF,QAAQ,mBAAoB,SACzCjM,SAAS0E,KAAKP,UAAUC,IAAI,kCAaxCkH,EAAQrI,QAAQ,SAAUC,GACtBA,EAAKZ,iBAAiB,QAAS,WAC3BqK,EAAkB,WAClBvK,KAAKkE,QAAQ,yBAAyBnC,UAAUyF,OAAO,mCAI/D2B,EAAMtI,QAAQ,SAAUC,GACpBA,EAAKZ,iBAAiB,QAAS,WAC3BqK,EAAkB,WAClBvK,KAAKkE,QAAQ,yBAAyBnC,UAAUC,IAAI,mCAe5D8D,EAAQ5F,iBAAiB,YAAa,SAAU4K,GAC5C,IAAIC,GAAgB,EAEpB3C,EAAavH,QAAQ,SAAUC,GACtBA,EAAKkK,SAASF,EAAMG,UACrBF,GAAgB,MAInBA,GAAiB/K,KAAK+B,UAAUiJ,SAAS,+BAC1CE,MAKR7C,EAAcxH,QAAQ,SAAUC,GAC5BA,EAAKZ,iBAAiB,QAAS,WAC3BgL,QAKRpF,EAAQ5F,iBAAiB,UAAW,SAAU4K,GACxB,WAAdA,EAAM/K,KAAoBnC,SAAS8J,gBAAgB3F,UAAUiJ,SAAS,iCACtEE,MAYR,MAAMC,GAAsB,0CAqC5B,SAAStF,IACLnF,EAAYG,QAAQ,SAAUC,EAAMC,GAGhC,MACMqK,GADczN,EAAaoD,GAAOmD,QAAQ,iBAAmBvG,EAAaoD,IACjD/C,cAAc,2BA8DrD,IAAsBqN,EAAMC,EAAQC,EAAdF,EA3DDvK,EA2DOwK,EA3DD,GA2DSC,EA3DNH,GA4DpBlL,iBAAiB,QAAS,WA4B5B,GAzBAsL,GAAyBxL,KAAKxB,aAAa,8BAK3CmM,EAAeU,EAAMC,EAAQtL,KAAMoJ,GAGnCwB,EAAaU,EAAQtL,KAAM,KAAMyJ,IAEjCJ,EAAetH,UAAUyF,OAAO,+BAEhCoB,EAAS/H,QAAQ,SAAUC,GACE,KAArBA,EAAKuD,YACLgF,EAAetH,UAAUC,IAAI,6BAE7BqH,EAAetH,UAAUyF,OAAO,+BAiDhD,WACI5J,SAAS8J,gBAAgB3F,UAAUC,IAAI,gCACvC8D,EAAQ/D,UAAUC,IAAI,8BAGtByJ,GAA4B7N,SAAS8N,cAGrC5F,EAAQ5F,iBAAiB,UA6BzB,SAAoB4K,GAGM,IAAlBA,EAAMa,UAGFb,EAAMc,SACFhO,SAAS8N,gBAAkBG,IAC3Bf,EAAMgB,iBACNC,EAAYlB,SAKZjN,SAAS8N,gBAAkBK,IAC3BjB,EAAMgB,iBACND,EAAahB,YA1C7B,IAeImB,EAAoBlG,EAAQjI,iBAfH,ucAoB7B,MAAMgO,GAFNG,EAAoBC,MAAMrM,UAAUsM,MAAMC,KAAKH,IAER,GACjCD,EAAcC,EAAkBA,EAAkBzL,OAAS,GAGjEuF,EAAQ+E,QAhFJuB,GAEA7B,EAAkB,WAGdgB,EAAMc,aAAa,0BAA2B,CAC9C,MAAMC,EAAaf,EAAM/M,aAAa,0BAA0BoD,QAAQ,WAAY,MACpF0H,EAAajF,YAAciI,OAE3BhD,EAAajF,YAAc,iBAI3BkH,EAAMc,aAAa,iCACnBvG,EAAQlC,MAAMI,gBAAkB,QAAUxD,EAAQgD,YAAc,QAEhEsC,EAAQlC,MAAMI,gBAAkB,OAhGxCuC,IAIJ,SAASoE,EAAeU,EAAMC,EAAQC,EAAOgB,GACzC,MAAMpF,EAAWP,cAAcyE,EAAM,CAAExE,YAAaC,IAAqBC,sBAAsB,IAE/FwF,EAAOlI,YAAc8C,EAErBH,KAAKC,iBAAiBsF,GAI1B,SAAS3B,EAAaU,EAAQC,EAAOiB,EAAc5D,GAC/C,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAASrI,OAAQyJ,IACjC,QAAoByC,IAAhB7D,EAASoB,GAAkB,CAC3B,IAAIvD,EAEJ,GAAI+F,EACA/F,EAAWmC,EAASoB,GAAG3F,iBACpB,GAAc,OAAVkH,GAAkBA,EAAMc,aAAa,oCAAqC,CAEjF5F,EADoB7I,SAASI,cAAcuN,EAAM/M,aAAa,qCACrCmD,UAAU+E,WAAW9E,QAAQ,YAAa,IAGvEgH,EAASoB,GAAG3F,YAAc,GAE1B,MAAMqI,EAAS9F,cAAcH,EAAU,CAAEI,YAAaC,IAAqBC,sBAAsB,IAEjG6B,EAASoB,GAAG3F,YAAcqI,EAE1B1F,KAAKC,iBAAiB2B,EAASoB,KAM3C,SAASlD,IACL,IAAI6F,EAMJ,OAJIA,EAD4C,OAA5C9H,aAAaC,QAAQ,oBAC6B,IAA5B+D,EAAa,GAAGa,QAAoB,EAAI,EAEzC7E,aAAaC,QAAQ,mBAalD,IAAI0G,GAqEAC,GAtBJ,SAASlB,EAAkBqC,GACvB,MAAMC,EAAgBjP,SAASC,iBAAiB,gCAClC,aAAV+O,EACAC,EAAchM,QAAQ,SAAUC,GAC5BA,EAAKuD,YAAc,SACnBvD,EAAKb,aAAa,WAAY,cAEjB,YAAV2M,GACPtE,EAAQzH,QAAQ,SAAUC,GACtBA,EAAKuD,YAAc,OACnBvD,EAAKK,gBAAgB,cA0EjC,SAAS+J,IACLtN,SAAS8J,gBAAgB3F,UAAUyF,OAAO,gCAC1C1B,EAAQ/D,UAAUyF,OAAO,8BACzB+C,EAAkB,WAClBkB,GAA0BZ,QAI9B,SAAStD,EAAcnG,EAAI0L,GACvB,IAAIC,EAEc,SAAdD,EACAC,EAA2D,IAArCC,SAASxB,IAAiCwB,SAASrM,GAAY,EAAIqM,SAASxB,IAA0B,EACvG,SAAdsB,IACPC,EAAsBC,SAASxB,MAA4BwB,SAASrM,GAAY,EAAK,EAAIqM,SAASxB,IAA0B,GAGhI,MAAMyB,EAAwB,gCAAkCF,EAAqB,KAC/EG,EAAgBtP,SAASI,cAAciP,EAAsBvG,YAQnE,GANA9I,SAAS8J,gBAAgB3F,UAAUC,IAAI,4CAEvCkL,EAAcC,QACdD,EAAcrC,QAGVqC,EAAchJ,QAAQ,4BAA6B,CACnD,MAAMkJ,EAAYF,EAAchJ,QAAQ,2BAClCmJ,EAAiBH,EAAchJ,QAAQ,4BAA4BwB,GAEzE0H,EACKpP,iCAAiCqP,OACjCF,QAGTG,WAAW,WACP1P,SAAS8J,gBAAgB3F,UAAUyF,OAAO,6CAC3C,KA5QPe,EAAY1H,QAAQ,SAAUC,EAAMC,GAChCD,EAAKZ,iBAAiB,QAAS,WAC3B,MAAMqN,EAAmBvN,KAAKxB,aAAa,iBAE3CwB,KAAKC,aAAa,gBAAuC,SAArBsN,EAA+B,QAAU,QAC7E/E,EAAiBzH,GAAOgB,UAAUyL,OAAOrC,QAKjDvN,SAASsC,iBAAiB,YAAa,SAAU4K,GAC7CtC,EAAiB3H,QAAQ,SAAUC,EAAMC,GACrC,MAAMgK,EAAgBjK,EAAKkK,SAASF,EAAMG,QAGrCH,EAAMG,OAAOlJ,UAAUiJ,SAAS,+BACjClK,EAAKiB,UAAUiJ,SAASG,KACvBJ,IAEDxC,EAAYxH,GAAOd,aAAa,iBAAiB,GACjDa,EAAKiB,UAAUyF,OAAO2D,SAyST,OAArBlN,EAAME,YACNW,OAAOoB,iBAAiB,kBAAmB,KAGvC,MAAMuN,EAAuB7P,SAASkE,cAAc,OACpD2L,EAAqB1L,UAAUC,IAAI,2BAEJ,OAA3B/D,EAAMG,mBACNqP,EAAqB7J,MAAME,OAAS7F,EAAMG,iBAAiBsI,YAG/D9I,SAAS0E,KAAKE,YAAYiL,GAG1B,MAAMC,EAAc9P,SAASC,iBAAiB,6DAGxC8P,EAAmB/P,SAASC,iBAAiB,2BAGnD,SAAS+P,EAAkBC,GAGvBH,EAAY7M,QAAS,CAACC,EAAMkJ,KACxB,MAAM8D,EAAaH,EAAiB3D,GAEpC8D,EAAWlK,MAAMmK,IAAOjN,EAAKkN,wBAAwBD,IAAMjP,OAAOmP,QAAW,KAC7EH,EAAWlK,MAAMsK,KAAOpN,EAAKkN,wBAAwBE,KAAO,KAE/C,SAATL,GACAJ,EAAqBjL,YAAYsL,KAMpBlQ,SAASC,iBAAiB,2BAClCgD,QAAUC,IACvBA,EAAK0G,WAITtB,EAAUrF,QAAUC,KA+C5B,SAAgB4B,GACZ,MAAMyL,EAAUvQ,SAASwQ,yBAEzB,KAAO1L,EAAQ2L,YAAY,CACvB,MAAMC,EAAQ5L,EAAQ6L,YAAY7L,EAAQ2L,YAC1CF,EAAQ3L,YAAY8L,GAGxB5L,EAAQC,WAAW6L,aAAaL,EAASzL,GAtDjC+L,CAAO3N,KAIX8M,EAAkB,QAGlB9O,OAAOoB,iBAAiB,SAmDhC,SAAkBwO,GACd,IAAIC,EAEJ,OAAQ7D,IACA6D,GACAC,aAAaD,GAEjBA,EAAQrB,WAAWoB,EAAM,IAAM5D,IA1DG+D,CAAU,KACxCjB,SAEL,GAKPhQ,SAASC,iBAAiB,sBAAsBgD,QAASC,IACrDA,EAAKZ,iBAAiB,UAAW,SAAU4K,GACrB,UAAdA,EAAM/K,KAAkC,UAAf+K,EAAMX,OAC/BW,EAAMgB,iBACN9L,KAAKmN,aA2DYvP,SAASC,iBAAiB,2BAElCgD,QAASiO,IAC1BA,EAAO/M,UAAUC,IAAI,oBAGrB,MAAM+M,EAASnR,SAASkE,cAAc,OACtCiN,EAAOhN,UAAUC,IAAI,yBACrB+M,EAAOlP,cAAc,CACjBoC,KAAQ,UACR+M,aAAc,qBAElBF,EAAOvM,QAAQwM,GAGf,MAAME,EAAWrR,SAASkE,cAAc,OACxCmN,EAASlN,UAAUC,IAAI,8BAA+B,gCACtD+M,EAAOxM,QAAQ0M,GAGf,MAAMC,EAAYtR,SAASkE,cAAc,OACzCoN,EAAUnN,UAAUC,IAAI,gCAGR8M,EAAOjR,iBAAiB,sBAGhCgD,QAAQ,CAACsO,EAAOpO,KACpB,MAAMqO,EAAiBF,EAAUG,YAC3BC,EAAiBhO,EAAqB6N,EAAM3Q,aAAa,qBAAqBE,IAAI,SAClF6Q,EAAiC,OAAnBD,EAA2BA,EAAiB,aAAevO,EAAQ,GACjFyO,EA6Md,SAAkBrP,GACd,OARJ,SAAkBA,GACd,OAAOA,EAAIyB,QAAQ,0BAA2B,SAAS6N,EAAO1O,GAC9D,OAAe,IAAV0O,EAAoB,GACJ,IAAV1O,EAAc0O,EAAM/N,cAAgB+N,EAAMC,gBAK9CC,CAASxP,EAAIyB,QAAQ,cAAe,MA9MtBgO,CAASL,GAE1BH,EAAevP,cAAc,CACzBgQ,gBAA4B,IAAV9O,EAAe,OAAS,QAC1CkB,KAAQ,MACRC,SAAuB,IAAVnB,EAAe,IAAM,KAClC+O,gBAAiBN,EACjB9J,GAAM8J,EAAW,YAGrBJ,EAAejN,UAAYoN,EAC3BN,EAASzM,YAAY4M,KAIzB,MAAMW,EAAUjB,EAAOjR,iBAAiB,gBAClCmS,EAAmBlB,EAAOjR,iBAAiB,iCAEjDkS,EAAQlP,QAAQ,CAACoP,EAAOlP,KACpBkP,EAAMlO,UAAUC,IAAI,2BACpBiO,EAAMpQ,cAAc,CAChBoC,KAAQ,WACRC,SAAY,IACZ6D,kBAAmBiK,EAAiBjP,GAAOvC,aAAa,MACxDkH,GAAMsK,EAAiBjP,GAAOvC,aAAa,mBAG3CuC,EAAQ,GACRkP,EAAMhQ,aAAa,SAAU,UAIrC,MAAMiQ,EAAOpB,EAAOjR,iBAAiB,gBAC/BsS,EAAUrB,EAAO9Q,cAAc,oBAGrCkS,EAAKrP,QAASuP,IACVA,EAAIlQ,iBAAiB,QAASmQ,KAIlC,IAAIC,EAAW,EAEfH,EAAQjQ,iBAAiB,UAAY4K,IAGf,eAAdA,EAAM/K,KAAsC,cAAd+K,EAAM/K,MACpCmQ,EAAKI,GAAUrQ,aAAa,WAAY,MAEtB,eAAd6K,EAAM/K,MACNuQ,GAGgBJ,EAAK3P,SACjB+P,EAAW,GAIM,cAAdxF,EAAM/K,OACbuQ,EAGe,IACXA,EAAWJ,EAAK3P,OAAS,GAIjC2P,EAAKI,GAAUrQ,aAAa,WAAY,KACxCiQ,EAAKI,GAAUzF,SAGD,UAAdC,EAAM/K,KAAkC,UAAf+K,EAAMX,OAC/BW,EAAMgB,iBACNhB,EAAMG,OAAOkC,WAKrB,MAAMoD,EAAgBjP,EAAqBwN,EAAOtQ,aAAa,0BACzDgS,EAAa,CACfzN,MAAOwN,EAAc7R,IAAI,SACzB+R,SAAUF,EAAc7R,IAAI,aAC5BgS,WAAYH,EAAc7R,IAAI,cAC9BiS,SAAUJ,EAAc7R,IAAI,aAC5BkS,SAAUL,EAAc7R,IAAI,aAC5BmS,MAAON,EAAc7R,IAAI,SACzBmD,SAAU0O,EAAc7R,IAAI,cAGhC,GAAyB,OAArB8R,EAAWzN,MAAgB,CAC3B,MAAM+N,EAAYlT,SAASkE,cAAc,OACzCgP,EAAU/O,UAAUC,IAAI,2BACxB8O,EAAU3O,UAAYqO,EAAWzN,MACjCgM,EAAOxM,QAAQuO,GA0BnB,GAvB4B,OAAxBN,EAAWC,UACXM,OAAOC,OAAOjC,EAAOnL,MAAM,CACvB6M,SAAUD,EAAWC,SACrBQ,WAAY,OACZC,YAAa,SAIO,OAAxBV,EAAWI,UACXG,OAAOC,OAAOjC,EAAOnL,MAAM,CACvBuN,YAAaX,EAAWI,SACxBQ,aAAcZ,EAAWI,WAIH,UAA1BJ,EAAWE,YACX5B,EAAO/M,UAAUC,IAAI,6BAGG,OAAxBwO,EAAWG,UACX7B,EAAO/M,UAAUC,IAAI,+BAGA,OAArBwO,EAAWK,MAAgB,CACXL,EAAWK,MAAMjP,QAAQ,SAAU,KAAKnD,MAAM,KACtDoC,QAASwQ,IACbtC,EAAOhN,UAAUC,IAAIqP,KAI7B,GAA4B,OAAxBb,EAAW3O,SAAmB,CAC9BiN,EAAO/M,UAAUC,IAAI,oCAGrB,MAAMsP,EAAqB1T,SAASkE,cAAc,QAClDwP,EAAmBvP,UAAUC,IAAI,yBACjC+M,EAAOvM,YAAY8O,GAEnB,MAAMC,EAAkB3T,SAASkE,cAAc,OAC/CyP,EAAgBxP,UAAUC,IAAI,+BAC9BuP,EAAgBpP,UAAY,+DAC5BoP,EAAgB1R,cAAc,CAC1BoC,KAAQ,SACRC,SAAY,MAEhB6M,EAAOvM,YAAY+O,GAEnBA,EAAgBrR,iBAAiB,QAAS,WACtC4O,EAAO9Q,cAAc,kEAAkEmP,UAG3FoE,EAAgBrR,iBAAiB,UAAW,SAAU4K,GAChC,UAAdA,EAAM/K,KAAkC,UAAf+K,EAAMX,MAC/B2E,EAAO9Q,cAAc,kEAAkEmP,aAOvG,MAAMqE,GAAU1S,OAAOM,SAASqS,KAChC,GAAgB,KAAZD,GAAgB,CAChB,MAAME,EAAe9T,SAASI,iBAAiBwT,MAC/C,GAAIE,GAAgBA,EAAaxN,QAAQ,2BAA4B,CACjE,MAAMyN,EAAgB/T,SAASI,cAAc,mBAAqBwT,GAAQ5P,QAAQ,IAAK,IAAK,MAG5F+P,EAAcxE,QAGdwE,EAAcC,eAAe,CACzBC,SAAU,YAKtB,SAASxB,EAAWvF,GAChB,MAAMG,EAASH,EAAMG,OACf6D,EAAS7D,EAAO/G,QAAQ,0BACxB4N,EAAchD,EAAO5K,QAAQ,qBAGnC4K,EACKjR,iBAAiB,0BACjBgD,QAASuP,GAAQA,EAAInQ,aAAa,gBAAiB,UAGxDgL,EAAOhL,aAAa,gBAAiB,QAGrC6R,EACKjU,iBAAiB,qBACjBgD,QAASoP,GAAUA,EAAMhQ,aAAa,UAAU,IAGrD6R,EACK9T,kBAAkBiN,EAAOzM,aAAa,oBACtC2C,gBAAgB,UAErB2J,EAAMG,OAAOJ,QAcjB,SAASvJ,EAAqBnB,GAC1B,IAAI4R,EAAgB5R,EAAIyB,QAAQ,SAAU,KAAKA,QAAQ,SAAU,KAEjE,OADkB,IAAIrD,gBAAgBwT,QAOtDjT,OAAOoB,iBAAiB,mBAAoBxC","sourcesContent":["/*!\n    * View markup v1.6.2\n    * Plugin that makes it easy for developers to view and copy the html needed for a component.\n    *\n    * Copyright 2021-2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\nconst viewMarkup = function() {\n    \n    // Cache elements\n    const viewMarkupEl = document.querySelectorAll('[data-view-markup]');\n    \n    // Get query params if any\n    const scriptLinkage = document.getElementById('view-markup-js') || document.querySelector('script[src*=view-markup]');\n    const param = {\n        modalNav: null,\n        dynamicPos: null,\n        dynamicPosZIndex: null,\n        excludeAttribute: null\n    }\n\n    if (scriptLinkage) {\n        const urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n        param.modalNav = urlParam.get('modal-nav');\n        param.dynamicPos = urlParam.get('dynamic-pos');\n        param.dynamicPosZIndex = urlParam.get('z-index');\n        param.excludeAttribute = urlParam.get('exclude-attribute');\n    }\n\n    const srcReady = new Event('ViewMarkupSrcIsReady');\n    const request = makeHttpObject();\n    let pageSrc = null;\n    \n    request.open('GET', window.location.href, true);\n    request.send(null);\n    request.onreadystatechange = function() {\n        if (request.readyState === 4) {\n            pageSrc = request.responseText;\n            document.dispatchEvent(srcReady);\n        }\n    }\n\n    // Get original page src\n    function makeHttpObject() {\n        if ('XMLHttpRequest' in window) {\n            return new XMLHttpRequest();\n        } else if ('ActiveXObject' in window) {\n            return new ActiveXObject('Msxml2.XMLHTTP');\n        }\n    }\n    \n    // Convert src string to HTML\n    function stringToHTML(str) {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(str, 'text/html');\n        return doc;\n    }\n\n    // Remove multiple attributes\n    function removeAttributes(element, attributes) {\n        attributes.forEach(function (attribute) {\n            element.removeAttribute(attribute);\n        });\n    }\n\n    Element.prototype.setAttributes = function (attrs) {\n        for(let key in attrs) {\n            this.setAttribute(key, attrs[key]);\n        }\n    };\n\n    document.addEventListener('ViewMarkupSrcIsReady', function () {\n        const srcPageHTML = stringToHTML(pageSrc);\n        const srcViewMarkupEl = srcPageHTML.querySelectorAll('[data-view-markup]');\n                    \n        if (viewMarkupEl.length > 0) {\n            let elHtmlInitial = [];\n            let elHtmlClean = [];\n            let elAmount = 0;\n            let options;\n            const markupContentHtmlString = `//=inject _view-markup-modal.html`;\n\n            viewMarkupEl.forEach(function (item, index) {\n\n                // Globally remove specified param attribute(s) from url param\n                if (param.excludeAttribute !== null) {\n                    const excludeAttributeArr = param.excludeAttribute.split(',');\n                    removeAttributes(srcViewMarkupEl[index], excludeAttributeArr);\n                }\n                \n                // Remove specific attribute(s) based on option\n                excludeAttr(srcViewMarkupEl[index]);\n                \n                // Cache all viewable markup elements               \n                elHtmlInitial[index] = (index === 0 && viewMarkupEl[0].tagName.toLowerCase() === 'html') ?\n                    pageSrc :\n                    srcViewMarkupEl[index].outerHTML;\n\n                // Remove the view markup specific data attributes\n                if (!preserveViewMarkupAttr(viewMarkupEl[index])) {\n                    elHtmlClean[index] = elHtmlInitial[index].replace(/data-view-markup=\"[^\\\"]*\"/g, '').replace(/^data-view-markup$/g, '');\n                } else {\n                    elHtmlClean[index] = elHtmlInitial[index];\n                }\n                \n                // Create modal button\n                let modalBtn = document.createElement('div');\n                modalBtn.classList.add('view-markup__modal-btn');\n                modalBtn.setAttributes({\n                    'role': 'button',\n                    'tabindex': '0'\n                })\n                modalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                    \n                // if <html> or <body> do things a bit differently\n                if (viewMarkupEl[index].nodeName.toLowerCase()  === 'body' || viewMarkupEl[index].nodeName.toLowerCase()  === 'html') {\n                    const wrapperDivBody = document.createElement('div');\n                    wrapperDivBody.classList.add('view-markup', 'view-markup--body');\n                    document.body.prepend(wrapperDivBody);\n                    wrapperDivBody.appendChild(modalBtn);\n                } else {\n                    \n                    // Wrap in div\n                    const markupWrapperDiv = document.createElement('div');\n                    markupWrapperDiv.classList.add('view-markup');\n                    markupWrapperDiv.innerHTML = '<div class=\"view-markup__highlight\"></div>';\n                    wrapElement(viewMarkupEl[index], markupWrapperDiv);\n                    markupWrapperDiv.prepend(modalBtn);\n                }\n\n                // Apply some options to toggle if available\n                const optionsParams = convertToParamString(viewMarkupEl[index].getAttribute('data-view-markup'));\n                \n                options = {\n                    title: optionsParams.get('title'),\n                    btnX: optionsParams.get('btn-x'),\n                    btnY: optionsParams.get('btn-y'),\n                    btnZ: optionsParams.get('btn-z'),\n                    btnPos: optionsParams.get('btn-pos'),\n                    btnAppendTo: optionsParams.get('btn-append-to'),\n                    btnPrependTo: optionsParams.get('btn-prepend-to'),\n                    btnColor: optionsParams.get('btn-color'),\n                    scriptSelector: optionsParams.get('script-selector'),\n                    backdropRgb: optionsParams.get('backdrop-rgb'),\n                    renderInPage: optionsParams.get('render-in-page'),\n                    marginBottom: optionsParams.get('margin-bottom'),\n                    marginTop: optionsParams.get('margin-top')\n                };\n                                        \n                // Setup title attribute to be used later\n                if (options.title) {\n                    modalBtn.setAttribute('data-view-markup-title', options.title);\n                }\n\n                // Btn x postion set\n                if (options.btnX) {\n                    modalBtn.style.transform = 'translateX(' + options.btnX + ')';\n                }\n\n                // Btn y postion set\n                if (options.btnY) {\n                    modalBtn.style.transform = 'translateY(' + options.btnY + ')';\n                }\n\n                // Btn both positions\n                if (options.btnX && options.btnY) {\n                    modalBtn.style.transform = 'translateX(' + options.btnX + ') translateY(' + options.btnY + ')';\n                }\n\n                // Btn z-index\n                if (options.btnZ) {\n                    modalBtn.style.zIndex = options.btnZ;\n                }\n\n                // Btn position\n                if (options.btnPos) {\n                    modalBtn.style.position = options.btnPos;\n                }\n                \n                // TODO: Btn color\n                if (options.btnColor) {\n                    modalBtn.style.backgroundColor = options.btnColor;\n                }\n\n                // Append to selector\n                if (options.btnAppendTo) {\n                    elBtnParent = document.querySelector(options.btnAppendTo);\n                    elBtnParent.appendChild(modalBtn);\n                }\n\n                // Prepend to selector\n                if (options.btnPrependTo) {\n                    elBtnParent = document.querySelector(options.btnPrependTo);\n                    elBtnParent.prepend(modalBtn);\n                }\n                \n                // Script selector\n                if (options.scriptSelector) {\n                    modalBtn.setAttribute('data-view-markup-script-selector', options.scriptSelector);\n                }\n                \n                // Backdrop rgba\n                if (options.backdropRgb) {\n                    modalBtn.setAttribute('data-view-markup-backdrop-rgb', options.backdropRgb);\n                }\n                \n                // In page rendering\n                if (options.renderInPage) {\n                    modalBtn.setAttribute('data-view-markup-in-page', 'true');\n                    item.setAttribute('data-view-markup-render-in-page', '');\n                }\n                                        \n                // Bottom margin for in page view\n                if (options.marginBottom) {\n                    item.closest('.view-markup').style.marginBottom = options.marginBottom;\n                }\n                \n                // Top margin for in page view\n                if (options.marginTop) {\n                    item.closest('.view-markup').style.marginTop = options.marginTop;\n                }\n            });\n\n\n            // Check for preserve-attribute option\n            function preserveViewMarkupAttr(el) {                   \n                const optionsParams = convertToParamString(el.getAttribute('data-view-markup'));\n                const optionPreserveAttr = optionsParams.get('preserve-attribute');\n                \n                if (optionPreserveAttr !== null) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n            \n            // Remove attributes on a specific element\n            function excludeAttr(el) {                   \n                const optionExclude = convertToParamString(el.getAttribute('data-view-markup')).get('exclude-attribute');\n                \n                if (optionExclude !== null) {\n                    const optionExlcudeArr = optionExclude.split(/,\\s|,/);\n                    \n                    optionExlcudeArr.forEach(function (attribute) {\n                        el.removeAttribute(attribute);\n                    });\n                    \n                    return el;\n                }\n            }\n            \n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Custom styles added via js\n            // -----------------------------------------------------------------------------\n\n            // Create style tag to dump styles into for the markup modal\n            const textStyle = document.createElement('style');\n            textStyle.setAttribute('id', 'viewMarkupStyle');\n\n            // Import compressed styles as a string\n            const textStyleString = `//=inject view-markup.css`;\n\n            // Apply in page styles to style tag\n            textStyle.textContent = textStyleString;\n\n            // Add in page styles to head\n            document.head.appendChild(textStyle);\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Load external libraries\n            // -----------------------------------------------------------------------------\n\n            // TODO: import these through npm packages\n\n            // Highlight css and js CDN. Project repo: https://github.com/highlightjs/highlight.js/\n            const highlightVersionNumb = {\n                css: '10.7.2',\n                js: '11.3.1'\n            }\n            const themeCssDarkUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/atom-one-dark.min.css';\n            const themeCssLightUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/github.min.css';\n\n            const highlightCssUrl = (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') ? themeCssDarkUrl : themeCssLightUrl;\n            const highlightScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.js + '/highlight.min.js';\n\n            // Beautify HTML CDN. Project repo: https://github.com/beautifier/beautifier.io\n            const beautifyVersionNumb = '1.14.0';\n            const beautifyScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/' + beautifyVersionNumb + '/beautify-html.min.js';\n\n            // Load highlight js/css external assets\n            loadExternalCss(highlightCssUrl);\n\n            // Initalize everything after getting beautify-html script\n            loadExternalJs(beautifyScriptUrl, loadFinalJS);\n            \n            function loadFinalJS() {\n                loadExternalJs(highlightScriptUrl, viewMarkupInitialize);\n            }\n\n            function loadExternalJs(scriptSrc, callback) {\n                const head = document.getElementsByTagName('head')[0];\n                const script = document.createElement('script');\n                \n                script.src = scriptSrc;\n                \n                head.appendChild(script);\n                script.onload = callback;\n            }\n\n            // Run after getting beautify-html/highlight.io external assets\n            function loadExternalCss(url, callback) {\n                const head = document.getElementsByTagName('head')[0];\n                const link = document.createElement('link');\n                    \n                link.id = 'highlightJsCss';\n                link.rel = 'stylesheet';\n                link.href = url;\n                \n                link.onreadystatechange = callback;\n                link.onload = callback;\n                head.appendChild(link);\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Render modal\n            // -----------------------------------------------------------------------------\n                \n            // Setup modal outer div and attributes\n            const modalEl = document.createElement('div');\n            modalEl.classList.add('view-markup-modal');\n            \n            modalEl.setAttributes({\n                'id': 'viewMarkupModal',\n                'aria-labelledby': 'viewMarkupModalTitle',\n                'aria-modal': 'true',\n                'role': 'dialog',\n                'tabindex': '-1',\n            });\n\n            // Create modal dialog div\n            const modalDialog = document.createElement('div');\n\n            // Insert modal dialog element into outer modal element\n            modalDialog.classList.add('view-markup-modal__dialog');\n            modalEl.appendChild(modalDialog);\n\n            // Add the rest of the html string into modal dialog\n            modalDialog.innerHTML = markupContentHtmlString;\n            document.body.appendChild(modalEl);\n\n            // Set in page element\n            const wrapperEl = document.querySelectorAll('.view-markup');\n            wrapperEl.forEach(function (item) {\n                if (item.querySelector('[data-view-markup-in-page]')) {\n                    const inPageBlock = document.createElement('div');\n                    inPageBlock.classList.add('view-markup__in-page-view');\n                    item.appendChild(inPageBlock);\n                    inPageBlock.innerHTML = markupContentHtmlString;\n                }\n            });\n\n            // Assign in page unique ids and adjust aria-lablledby to match\n            const inPageContent = document.querySelectorAll('.view-markup__in-page-view .view-markup__content');\n            const inPageHeader = document.querySelectorAll('.view-markup__in-page-view .view-markup__header');\n            const modalSetSize = document.querySelectorAll('.view-markup__size-set');\n\n            inPageContent.forEach(function (item, index) {\n                inPageHeader[index].remove();\n                modalSetSize[index].remove();\n                \n                const allID = item.querySelectorAll('[id]');\n                const allFor = item.querySelectorAll('[for]');\n                const allAriaLabelledBy = item.querySelectorAll('[aria-labelledby]');\n\n                // Unique id\n                for (let x = 0; x < allID.length; x++) {\n                    allID[x].id = allID[x].id + '-' + index;\n                }\n                \n                // Unique for\n                for (let y = 0; y < allFor.length; y++) {\n                    let currentFor = allFor[y].getAttribute('for');\n                    allFor[y].setAttribute('for', currentFor + '-' + index);\n                }\n\n                // Unique aria-labelledby\n                for (let z = 0; z < allAriaLabelledBy.length; z++) {\n                    let currentAriaLabelledBy = allAriaLabelledBy[z].getAttribute('aria-labelledby');\n                    allAriaLabelledBy[z].setAttribute('aria-labelledby', currentAriaLabelledBy + '-' + index);\n                }\n            });\n\n            // When external assets are loaded run this\n            function readyAdjustments() {\n                wrapperEl.forEach(function (item, index) {\n                    \n                    // Tidy js\n                    if (item.querySelector('[data-view-markup-in-page]') && item.querySelector('[data-view-markup-script-selector]')) {\n                        const inPageCodeJsBlock = item.querySelector('.view-markup__code--js');\n                        const scriptSelector = item.querySelector('[data-view-markup-script-selector]').getAttribute('data-view-markup-script-selector');\n                        const scriptElement = document.querySelector(scriptSelector);\n                        const jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        \n                        const tidyJS = html_beautify(jsToTidy, {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeJsBlock.textContent = tidyJS;\n                        hljs.highlightElement(inPageCodeJsBlock);\n                        \n                        if (inPageCodeJsBlock.textContent !== '') {\n                            inPageCodeJsBlock.closest('.view-markup__content').classList.add('view-markup-modal--has-js');\n                        }\n                    }\n                    \n                    // Tidy html\n                    if (item.querySelector('[data-view-markup-in-page]')) {\n                        const inPageCodeHtmlBlock = item.querySelector('.view-markup__code--html');\n                        const tidyHTML = html_beautify(elHtmlClean[index], {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeHtmlBlock.textContent = tidyHTML;\n                        hljs.highlightElement(inPageCodeHtmlBlock);\n                    }\n                });\n                \n                // Ready to initialize modal navigation\n                modalNavigation();\n                \n                // Add ready class on body\n                document.documentElement.classList.add('js-view-markup-ready');\n\n                const vmReadyEvent = new Event('ViewMarkupReady');\n                window.dispatchEvent(vmReadyEvent);\n            }\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Cache rendered elements\n            // -----------------------------------------------------------------------------\n\n            const modalContent = document.querySelectorAll('.view-markup__content');\n            const modalCloseBtn = document.querySelectorAll('.view-markup__close-btn');\n            const copyBtn = document.querySelectorAll('.view-markup__copy-btn');\n            const settingsBtn = document.querySelectorAll('.view-markup__settings-btn');\n            const settingsDropdown = document.querySelectorAll('.view-markup__settings-dropdown');\n            const textArea = document.querySelectorAll('.view-markup__hidden-textarea');\n            const preEl = document.querySelectorAll('.view-markup__pre');\n            const htmlCodeEl = document.querySelectorAll('.view-markup__code--html');\n            const jsCodeEl = document.querySelectorAll('.view-markup__code--js');\n            const radio2Spaces = document.querySelectorAll('.view-markup__indent-2');\n            const radio4Spaces = document.querySelectorAll('.view-markup__indent-4');\n            const themeDark = document.querySelectorAll('.view-markup__theme-dark');\n            const themeLight = document.querySelectorAll('.view-markup__theme-light');\n            const fontSize = document.querySelectorAll('.view-markup__font-size');\n            const htmlTab = document.querySelectorAll('.view-markup__tabs-button--html');\n            const jsTab = document.querySelectorAll('.view-markup__tabs-button--js');\n\n            // Modal specific elements\n            const modalCodeHtmlEL = document.querySelector('.view-markup-modal .view-markup__code--html');\n            const modalContentEl = document.querySelector('.view-markup-modal .view-markup__content');\n            const modalTitleEl = document.querySelector('.view-markup-modal .view-markup__title');\n            const modalSizeMedium = document.querySelectorAll('.view-markup__size-medium');\n            const modalSizeLarge = document.querySelectorAll('.view-markup__size-large');\n            const modalCodeJsEL = document.querySelectorAll('.view-markup-modal .view-markup__code--js');\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Setup cached settings\n            // -----------------------------------------------------------------------------\n\n            // Select cached tabspaces radio\n            if (localStorage.getItem('checkedSpaceTab') === null || localStorage.getItem('checkedSpaceTab') === '4' ) {\n                radio4Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                radio2Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            }\n\n\n            // Select cached theme radio\n            if (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') {\n                themeDark.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                themeLight.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.documentElement.classList.add('js-view-markup-theme-light');\n            }\n\n\n            // Select cached modal size radio\n            if (localStorage.getItem('checkedModalSize') === null || localStorage.getItem('checkedModalSize') === 'medium' ) {\n                modalSizeMedium.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                modalSizeLarge.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.body.classList.add('js-view-markup-size-large');\n            } \n\n\n            // Get cached font-size\n            if (localStorage.getItem('fontSizevalue') === null ) {\n                fontSize.forEach(function (item) {\n                    item.value = '13';\n                });\n            } else {\n                const currentValue = localStorage.getItem('fontSizevalue');\n                \n                fontSize.forEach(function (item) {\n                    item.value = localStorage.getItem('fontSizevalue');\n                });\n\n                preEl.forEach(function (item, index) {\n                    item.style.fontSize = currentValue + 'px';\n                });\n            }\n\n            \n            // Font code font size\n            fontSize.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    const currentValue = item.value;\n                    \n                    localStorage.setItem('fontSizevalue', currentValue);\n\n                    fontSize.forEach(function (item, index) {\n                        item.value = currentValue\n                    });\n\n                    preEl.forEach(function (item, index) {\n                        item.style.fontSize = currentValue + 'px';\n                    });\n                });\n            });\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Modal and code controls\n            // -----------------------------------------------------------------------------\n\n            // Copy button\n            copyBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    let currentShowingCode;\n                    const closestElement = item.closest('.view-markup__content');\n                    const currentCode = closestElement.querySelectorAll('.view-markup__code');\n                            \n                    for (const i = 0; i < currentCode.length; i++) {\n                        if (currentCode[i].offsetWidth > 0 && currentCode[i].offsetHeight > 0) {\n                            currentShowingCode = currentCode[i];\n                        }\n                    }\n                            \n                    applyTidyCodeToTextArea(currentShowingCode.textContent, getCachedSpaceTab(), index);\n                    \n                    applyCopyBtnState('disabled');\n\n                    navigator.clipboard.writeText(textArea[index].value);\n                });\n            });\n\n            // Tabspaces (2) radio change event listeners\n            radio2Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 2);\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 2 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(2, null, true, jsCodeEl);\n                                                \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n            // Tabspaces (4) radio change event listeners\n            radio4Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 4);\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 4 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(4, null, true, jsCodeEl);\n                        \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n\n            // Dark theme radio change event listeners\n            themeDark.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'dark');\n                        document.documentElement.classList.remove('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssDarkUrl;\n                    }\n                });\n            });\n\n            // Light theme radio change event listeners\n            themeLight.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'light');\n                        document.documentElement.classList.add('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssLightUrl;\n                    }\n                });\n            });\n\n            // Medium modal size radio change event listeners\n            modalSizeMedium.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeLarge.forEach(function (item) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeMedium.forEach(function (item) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'medium');\n                        document.body.classList.remove('js-view-markup-size-large');\n                    }\n                });\n            });\n\n            // Large modal size radio change event listeners\n            modalSizeLarge.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeMedium.forEach(function (item) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeLarge.forEach(function (item) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'large');\n                        document.body.classList.add('js-view-markup-size-large');\n                    }\n                });\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // HTML/JS tab toggling\n            // -----------------------------------------------------------------------------\n\n            htmlTab.forEach(function (item) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.remove('view-markup--js-tab-showing');\n                });\n            });\n\n            jsTab.forEach(function (item) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.add('view-markup--js-tab-showing');\n                });\n            });\n\n\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Exiting the modal\n            // -----------------------------------------------------------------------------\n\n            // Hide modal by clicking outside of it\n            modalEl.addEventListener('mousedown', function (event) {\n                let isClickInside = false;\n                \n                modalContent.forEach(function (item) {\n                    if ( item.contains(event.target) ) {\n                        isClickInside = true;\n                    }\n                });\n                \n                if (!isClickInside && this.classList.contains('view-markup-modal--showing')) {\n                    modalHide();\n                }\n            });\n\n            // Hide modal with close and cancel button click\n            modalCloseBtn.forEach(function (item) {\n                item.addEventListener('click', function () {\n                    modalHide();\n                });\n            });\n\n            // Hide modal with esc key\n            modalEl.addEventListener('keydown', function (event) {\n                if (event.key === 'Escape' && document.documentElement.classList.contains('js-view-markup-modal-showing')) {\n                    modalHide();\n                }\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Settings dropdown functionality\n            // -----------------------------------------------------------------------------\n\n            const optionDropdownClass = 'view-markup__settings-dropdown--showing';\n\n            // Settings dropdown\n            settingsBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    const ariaExpandedAttr = this.getAttribute('aria-expanded');\n\n                    this.setAttribute('aria-expanded', (ariaExpandedAttr === 'true') ? 'false' : 'true');\n                    settingsDropdown[index].classList.toggle(optionDropdownClass);\n                });\n            });\n\n            // Hide settings dropdown by clicking outside of it\n            document.addEventListener('mousedown', function (event) {\n                settingsDropdown.forEach(function (item, index) {\n                    const isClickInside = item.contains(event.target);\n\n                    if (\n                        !event.target.classList.contains('view-markup__settings-btn') &&\n                        item.classList.contains(optionDropdownClass) &&\n                        !isClickInside\n                    ) {\n                        settingsBtn[index].setAttribute('aria-expanded', false);\n                        item.classList.remove(optionDropdownClass);\n                    }\n                });\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Functions\n            // -----------------------------------------------------------------------------\n\n            // Function properly assigns untouched DOM html modal\n            function viewMarkupInitialize() {\n                elHtmlClean.forEach(function (item, index) {\n                    \n                    // Assign modal button to correct html to view\n                    const modalParent = viewMarkupEl[index].closest('.view-markup') || viewMarkupEl[index];\n                    const modalBtnEL = modalParent.querySelector('.view-markup__modal-btn');\n\n                    // Crack open the modal with the correct html in view\n                    modalMapping(item, 2, modalBtnEL, null);\n                });\n                \n                readyAdjustments();\n            }\n\n            // Cleanup and highlight markup\n            function applyCleanHtml(html, spaces, btnEl, codeEl) {\n                const tidyHTML = html_beautify(html, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                    \n                codeEl.textContent = tidyHTML;\n                \n                hljs.highlightElement(codeEl);\n            }\n\n            // Cleanup and highlight associated js\n            function applyCleanJs(spaces, btnEl, setTabSpaces, jsCodeEl) {    \n                for (let i = 0; i < jsCodeEl.length; i++) {\n                    if (jsCodeEl[i] !== undefined) {\n                        let jsToTidy;\n                                \n                        if (setTabSpaces) {\n                            jsToTidy = jsCodeEl[i].textContent;\n                        } else if (btnEl !== null && btnEl.hasAttribute('data-view-markup-script-selector')) {\n                            let scriptElement = document.querySelector(btnEl.getAttribute('data-view-markup-script-selector'));\n                            jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        }\n                                \n                        jsCodeEl[i].textContent = '';\n                        \n                        const tidyJs = html_beautify(jsToTidy, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                        \n                        jsCodeEl[i].textContent = tidyJs;\n                        \n                        hljs.highlightElement(jsCodeEl[i]);\n                    }\n                }\n            }\n\n            // Return cached space/tab amount\n            function getCachedSpaceTab() {\n                let checkedSpacesRadio;\n                if (localStorage.getItem('checkedSpaceTab') === null) {\n                    checkedSpacesRadio = (radio2Spaces[0].checked === true) ? 2 : 4;\n                } else {\n                    checkedSpacesRadio = localStorage.getItem('checkedSpaceTab');\n                }\n                return checkedSpacesRadio;\n            }\n\n            // Populate hidden textarea with tidy html/js for copy button\n            function applyTidyCodeToTextArea(code, spaceTabRadio, index) {\n                const tidyCode = html_beautify(code, { indent_size: spaceTabRadio, space_in_empty_paren: true });\n                textArea[index].textContent = tidyCode;\n                return;\n            }\n\n            // Function that gets html, beautifies it, and displays it in a modal\n            let currentViewMarkupIndex;\n            function modalMapping(html, spaces, btnEl) {    \n                btnEl.addEventListener('click', function () {        \n                    \n                    // Current modal button index (used for modal navigation)\n                    currentViewMarkupIndex = this.getAttribute('data-view-markup-nav-index');\n                    \n                    // screenShotDomElement(viewMarkupEl[currentViewMarkupIndex]);\n\n                    // Clean html\n                    applyCleanHtml(html, spaces, this, modalCodeHtmlEL);\n                    \n                    // Clean js\n                    applyCleanJs(spaces, this, null, modalCodeJsEL);\n\n                    modalContentEl.classList.remove('view-markup--js-tab-showing');\n                    \n                    jsCodeEl.forEach(function (item) {\n                        if (item.textContent !== '') {\n                            modalContentEl.classList.add('view-markup-modal--has-js');\n                        } else {\n                            modalContentEl.classList.remove('view-markup-modal--has-js');\n                        }\n                    });\n                    \n                    modalShow();\n                    \n                    applyCopyBtnState('enabled');\n\n                    // Add option title to modal title if there is one\n                    if (btnEl.hasAttribute('data-view-markup-title')) {\n                        const cleanTitle = btnEl.getAttribute('data-view-markup-title').replace(/^'(.*)'$/, '$1');\n                        modalTitleEl.textContent = cleanTitle;\n                    } else {\n                        modalTitleEl.textContent = 'Viewing markup';\n                    }\n                    \n                    // Add option backdrop rgb to modal back\n                    if (btnEl.hasAttribute('data-view-markup-backdrop-rgb')) {\n                        modalEl.style.backgroundColor = 'rgba(' + options.backdropRgb + ', .7)';\n                    } else {\n                        modalEl.style.backgroundColor = '';\n                    }\n                });\n            }\n\n            // Apply copy button state\n            function applyCopyBtnState(state) {\n                const clickedButton = document.querySelectorAll('.view-markup__copy-btn:focus');\n                if (state === 'disabled') {\n                    clickedButton.forEach(function (item) {\n                        item.textContent = 'Copied';\n                        item.setAttribute('disabled', 'disabled');\n                    });\n                } else if (state === 'enabled') {\n                    copyBtn.forEach(function (item) {\n                        item.textContent = 'Copy';\n                        item.removeAttribute('disabled');\n                    });\n                }\n            }\n\n            // Wrap in tag\n            function wrapElement(el, wrapper) {\n                el.parentNode.insertBefore(wrapper, el);\n                wrapper.appendChild(el);\n            }\n\n            // Show modal\n            let focusedElementBeforeModal;\n            function modalShow() {\n                document.documentElement.classList.add('js-view-markup-modal-showing');\n                modalEl.classList.add('view-markup-modal--showing');\n                \n                // Save current focus\n                focusedElementBeforeModal = document.activeElement;\n\n                // Listen for and trap the keyboard\n                modalEl.addEventListener('keydown', trapTabKey);\n                \n                // Find all focusable children\n                let focusableElementsString =`\n                    a[href],\n                    area[href],\n                    input,\n                    select:not([disabled]),\n                    textarea:not([tabindex=\"-1\"]),\n                    button:not([disabled]),\n                    iframe,\n                    object,\n                    embed,\n                    [tabindex=\"0\"],\n                    [contenteditable],\n                    [role=\"button\"]\n                `;\n                    \n                let focusableElements = modalEl.querySelectorAll(focusableElementsString);\n                \n                // Convert NodeList to Array\n                focusableElements = Array.prototype.slice.call(focusableElements);\n\n                const firstTabStop = focusableElements[0];\n                const lastTabStop = focusableElements[focusableElements.length - 1];\n                \n                // Set initial focus on the modal\n                modalEl.focus();\n                \n                function trapTabKey(event) {\n                    \n                    // Check for TAB key press\n                    if (event.keyCode === 9) {\n\n                        // SHIFT + TAB\n                        if (event.shiftKey) {\n                            if (document.activeElement === firstTabStop) {\n                                event.preventDefault();\n                                lastTabStop.focus();\n                            }\n\n                        // TAB\n                        } else {\n                            if (document.activeElement === lastTabStop) {\n                                event.preventDefault();\n                                firstTabStop.focus();\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Hide modal\n            function modalHide() {\n                document.documentElement.classList.remove('js-view-markup-modal-showing');\n                modalEl.classList.remove('view-markup-modal--showing');\n                applyCopyBtnState('enabled');\n                focusedElementBeforeModal.focus();\n            }\n\n            // Go to previous/next view markup element\n            function modalNavigate(el, direction) {\n                let mapToModalBtnIndex;\n                \n                if (direction === 'prev') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === 0) ? parseInt(elAmount) - 1 : parseInt(currentViewMarkupIndex) - 1;\n                } else if (direction === 'next') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === parseInt(elAmount) - 1) ? 0 : parseInt(currentViewMarkupIndex) + 1;\n                }\n                    \n                const mapToModalBtnSelector = '[data-view-markup-nav-index=\"' + mapToModalBtnIndex + '\"]';\n                const mapToModalBtn = document.querySelector(mapToModalBtnSelector.toString());\n                \n                document.documentElement.classList.add('js-view-markup-modal-showing--navigating');\n                \n                mapToModalBtn.click();\n                mapToModalBtn.focus();\n                \n                // Show corresponding tab if contained in one\n                if (mapToModalBtn.closest('.view-markup-tabs__panel')) {\n                    const tabParent = mapToModalBtn.closest('[data-view-markup-tabs]');\n                    const tablistPanelId = mapToModalBtn.closest('.view-markup-tabs__panel').id;\n                    \n                    tabParent\n                        .querySelector(`[aria-controls=\"${tablistPanelId}\"]`)\n                        .click();\n                }\n                \n                setTimeout(function () {\n                    document.documentElement.classList.remove('js-view-markup-modal-showing--navigating');\n                }, 300);\n            }\n\n            // Modal navigation arrows\n            function modalNavigation() {    \n                \n                // Add index to modal buttons for navigation\n                const modalNavEl = document.querySelector('.view-markup__nav');\n                const modalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                \n                elAmount = modalBtn.length;\n                \n                modalBtn.forEach(function (item, index) {\n                    item.setAttribute('data-view-markup-nav-index', index);\n                });\n                \n                if (elAmount > 1) {\n\n                    // Modal previous button\n                    const modalPrevBtn = modalEl.querySelector('.view-markup__prev-btn');\n\n                    // Modal next button\n                    const modalNextBtn = modalEl.querySelector('.view-markup__next-btn');\n                    \n                    // Modal previous button click\n                    modalPrevBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'prev');\n                    });\n\n                    // Modal next button click\n                    modalNextBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'next');\n                    });  \n                } else {\n\n                    // Remove modal nav if only 1 item\n                    modalNavEl.remove();\n                }\n                \n                if (param.modalNav === null) {\n                \n                    // Remove modal nav if no setting is found\n                    modalNavEl.remove();\n                }\n            }\n\n\n\n            // If dynamic position query param is set, do some stuff\n            if (param.dynamicPos !== null) {\n                window.addEventListener('ViewMarkupReady', () => {\n                \n                    // Create new div that will contain all modal buttons\n                    const floatingButtonHolder = document.createElement('div');\n                    floatingButtonHolder.classList.add('view-markup-dynamic-nav');\n                    \n                    if (param.dynamicPosZIndex !== null) {\n                        floatingButtonHolder.style.zIndex = param.dynamicPosZIndex.toString();\n                    }\n                    \n                    document.body.appendChild(floatingButtonHolder);\n            \n                    // Cache elements with modals\n                    const withmodalEl = document.querySelectorAll('[data-view-markup]:not([data-view-markup-render-in-page])');\n                    \n                    // Re-cache remaining buttons\n                    const floatingModalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                    \n                    // Dynamically position modal button next to associated element\n                    function positionModalBtns(load) {\n                        \n                        // Add inline css to position button at the top left of the element\n                        withmodalEl.forEach( (item, i) => {\n                            const btnElement = floatingModalBtn[i];\n            \n                            btnElement.style.top = (item.getBoundingClientRect().top + window.scrollY) + 'px';\n                            btnElement.style.left = item.getBoundingClientRect().left + 'px';\n            \n                            if (load === 'load') {\n                                floatingButtonHolder.appendChild(btnElement);\n                            }\n                        });\n                    }\n                    \n                    // Remove un-needed highlight divs\n                    const highlightElement = document.querySelectorAll('.view-markup__highlight');\n                    highlightElement.forEach( (item) => {\n                        item.remove();\n                    });\n            \n                    // Unwrap view-markup div\n                    wrapperEl.forEach( (item) => {\n                        unwrap(item);\n                    });\n                    \n                    // Position buttons on load\n                    positionModalBtns('load');\n                    \n                    // Position buttons after resize\n                    window.addEventListener('resize', debounce( () => {\n                        positionModalBtns();\n                    }));\n                }, false);\n            }\n\n\n            // Make div with role=button act like an actual button for a11y reasons\n            document.querySelectorAll('div[role=\"button\"]').forEach((item) => {\n                item.addEventListener('keydown', function (event) {\n                    if (event.key === 'Enter' || event.code === 'Space') {\n                        event.preventDefault();\n                        this.click();\n                    }\n                });\n            });\n                \n\n\n\n\n            \n            /* -----------------------------------------------------------------------------\n                EXPIREMENTAL WIP: prototype floating the buttons over the page instead of\n                wrapping each element in a div and then positioning it inside that div. Not\n                a fan of how much it currently modifies the DOM to get the modal button next\n                to the associated element correctly\n\n                TODOS:\n                ✓ Allow for dynamic button positioning\n                • Add \"Skip to view markup modal navigation\" skip link\n                • Add visual focus indicator to modal button when focus in the background\n                when using modal navigation.\n                ✓ Set smooth scrolling on the html,body when modal is active\n                • Enhance preserve attribute functionality a bit. (allow for top and inner)\n                • Add tab view\n            ----------------------------------------------------------------------------- */\n\n            // Unwrap function\n            function unwrap(wrapper) {\n                const docFrag = document.createDocumentFragment();\n                \n                while (wrapper.firstChild) {\n                    const child = wrapper.removeChild(wrapper.firstChild);\n                    docFrag.appendChild(child);\n                }\n\n                wrapper.parentNode.replaceChild(docFrag, wrapper);\n            }\n\n            // Debounce function (throttle window resize)\n            function debounce(func) {\n                let timer;\n\n                return (event) => {\n                    if (timer) {\n                        clearTimeout(timer);\n                    }\n                    timer = setTimeout(func, 1000, event);\n                };\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Create tabs view of view markup elements inside a container\n            // Based off https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role\n            // -----------------------------------------------------------------------------\n\n            const viewMarkupTabsParent = document.querySelectorAll('[data-view-markup-tabs]');\n    \n            viewMarkupTabsParent.forEach((parent) => {\n                parent.classList.add('view-markup-tabs');\n                \n                // Create tab nav element\n                const tabNav = document.createElement('div');\n                tabNav.classList.add('view-markup-tabs__nav');\n                tabNav.setAttributes({\n                    'role': 'tablist',\n                    'aria-label': 'View markup tabs'\n                });\n                parent.prepend(tabNav);\n\n                // Create tabs list element\n                const tabsList = document.createElement('div');\n                tabsList.classList.add('view-markup-tabs__tabs-list', 'view-markup-styled-scrollbar');\n                tabNav.prepend(tabsList);\n                \n                // Create tab nav item element(s)\n                const tabButton = document.createElement('div');\n                tabButton.classList.add('view-markup-tabs__tab-button');\n                \n                // Get title(s) if any\n                const vmEntry = parent.querySelectorAll('[data-view-markup]');\n                \n                // Setup tab list entry\n                vmEntry.forEach((entry, index) => {\n                    const tabButtonEntry = tabButton.cloneNode();\n                    const entryTitleText = convertToParamString(entry.getAttribute('data-view-markup')).get('title');\n                    const entryTitle = (entryTitleText !== null) ? entryTitleText : 'Tab Item ' + (index + 1);\n                    const uniqueID = renderID(entryTitle);\n                    \n                    tabButtonEntry.setAttributes({\n                        'aria-selected': (index === 0) ? 'true' : 'false',\n                        'role': 'tab',\n                        'tabindex': (index === 0) ? '0' : '-1',\n                        'aria-controls': uniqueID,\n                        'id': uniqueID + 'TabItem'\n                    });\n\n                    tabButtonEntry.innerHTML = entryTitle;\n                    tabsList.appendChild(tabButtonEntry);\n                });\n\n                // Setup tab panel areas\n                const vmPanel = parent.querySelectorAll('.view-markup');\n                const tabButtonElement = parent.querySelectorAll('.view-markup-tabs__tab-button');\n                \n                vmPanel.forEach((panel, index) => {\n                    panel.classList.add('view-markup-tabs__panel');\n                    panel.setAttributes({\n                        'role': 'tabpanel',\n                        'tabindex': '0',\n                        'aria-labelledby': tabButtonElement[index].getAttribute('id'),\n                        'id': tabButtonElement[index].getAttribute('aria-controls')\n                    });\n\n                    if (index > 0) {\n                        panel.setAttribute('hidden', 'true');\n                    }\n                });\n\n                const tabs = parent.querySelectorAll('[role=\"tab\"]');\n                const tabList = parent.querySelector('[role=\"tablist\"]');\n\n                // Add a click event handler to each tab\n                tabs.forEach((tab) => {\n                    tab.addEventListener('click', changeTabs);\n                });\n                \n                // Enable arrow navigation between tabs in the tab list\n                let tabFocus = 0;\n                \n                tabList.addEventListener('keydown', (event) => {\n                    \n                    // Move right\n                    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n                        tabs[tabFocus].setAttribute('tabindex', '-1');\n                        \n                        if (event.key === 'ArrowRight') {\n                            tabFocus++;\n                            \n                            // If we're at the end, go to the start\n                            if (tabFocus >= tabs.length) {\n                                tabFocus = 0;\n                            }\n                        \n                        // Move left\n                        } else if (event.key === 'ArrowLeft') {\n                            tabFocus--;\n                            \n                            // If we're at the start, move to the end\n                            if (tabFocus < 0) {\n                                tabFocus = tabs.length - 1;\n                            }\n                        }\n\n                        tabs[tabFocus].setAttribute('tabindex', '0');\n                        tabs[tabFocus].focus();\n                    }\n\n                    if (event.key === 'Enter' || event.code === 'Space') {\n                        event.preventDefault();\n                        event.target.click();\n                    }\n                });\n\n                // Create tab title and max-width option\n                const tabslistParam = convertToParamString(parent.getAttribute('data-view-markup-tabs'));\n                const tabsParams = {\n                    title: tabslistParam.get('title'),\n                    maxWidth: tabslistParam.get('max-width'),\n                    background: tabslistParam.get('background'),\n                    pillView: tabslistParam.get('pill-view'),\n                    paddingX: tabslistParam.get('padding-x'),\n                    class: tabslistParam.get('class'),\n                    modalBtn: tabslistParam.get('modal-btn')\n                }\n\n                if (tabsParams.title !== null) {\n                    const tabsTitle = document.createElement('div');\n                    tabsTitle.classList.add('view-markup-tabs__title');\n                    tabsTitle.innerHTML = tabsParams.title;\n                    tabNav.prepend(tabsTitle);\n                }\n\n                if (tabsParams.maxWidth !== null) {\n                    Object.assign(tabNav.style,{\n                        maxWidth: tabsParams.maxWidth,\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                    });\n                }\n                \n                if (tabsParams.paddingX !== null) {\n                    Object.assign(tabNav.style,{\n                        paddingLeft: tabsParams.paddingX,\n                        paddingRight: tabsParams.paddingX,\n                    });\n                }\n\n                if (tabsParams.background === 'false') {\n                    parent.classList.add('view-markup-tabs--bg-none');\n                }\n                \n                if (tabsParams.pillView !== null) {\n                    parent.classList.add('view-markup-tabs--pill-view');\n                }\n\n                if (tabsParams.class !== null) {\n                    const classes = tabsParams.class.replace(/,\\s|,/g, ' ').split(' ');\n                    classes.forEach((classItem) => {\n                        tabNav.classList.add(classItem);\n                    });\n                }\n\n                if (tabsParams.modalBtn !== null) {\n                    parent.classList.add('view-markup-tabs--show-modal-btn');\n\n                    // Create view markup button which controls the visible tab panel element\n                    const tabViewModalBtnSep = document.createElement('span');\n                    tabViewModalBtnSep.classList.add('view-markup-tabs__sep');\n                    tabNav.appendChild(tabViewModalBtnSep);\n\n                    const tabViewModalBtn = document.createElement('div');\n                    tabViewModalBtn.classList.add('view-markup-tabs__modal-btn');\n                    tabViewModalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                    tabViewModalBtn.setAttributes({\n                        'role': 'button',\n                        'tabindex': '0'\n                    });\n                    tabNav.appendChild(tabViewModalBtn);\n    \n                    tabViewModalBtn.addEventListener('click', function () {\n                        parent.querySelector('.view-markup-tabs__panel:not([hidden]) .view-markup__modal-btn').click();\n                    });\n    \n                    tabViewModalBtn.addEventListener('keydown', function (event) {\n                        if (event.key === 'Enter' || event.code === 'Space') {\n                            parent.querySelector('.view-markup-tabs__panel:not([hidden]) .view-markup__modal-btn').click();\n                        }\n                    });\n                }\n            });\n\n            // Display and scrollto tablist item if hash is available\n            const urlHash = window.location.hash;\n            if (urlHash !== '') {\n                const urlIDElement = document.querySelector(`${urlHash}`);\n                if (urlIDElement && urlIDElement.closest('[data-view-markup-tabs]')) {\n                    const associatedTab = document.querySelector('[aria-controls=\"' + urlHash.replace('#', '') +'\"]')\n                    \n                    // Click associated tab\n                    associatedTab.click();\n\n                    // Scroll into view\n                    associatedTab.scrollIntoView({\n                        behavior: 'smooth'\n                    });\n                }\n            }\n\n            function changeTabs(event) {\n                const target = event.target;\n                const parent = target.closest('.view-markup-tabs__nav');\n                const grandparent = parent.closest('.view-markup-tabs');\n\n                // Remove all current selected tabs\n                parent\n                    .querySelectorAll('[aria-selected=\"true\"]')\n                    .forEach((tab) => tab.setAttribute('aria-selected', 'false'));\n\n                // Set this tab as selected\n                target.setAttribute('aria-selected', 'true');\n\n                // Hide all tab panels\n                grandparent\n                    .querySelectorAll('[role=\"tabpanel\"]')\n                    .forEach((panel) => panel.setAttribute('hidden', true));\n\n                // Show the selected panel\n                grandparent\n                    .querySelector(`#${target.getAttribute('aria-controls')}`)\n                    .removeAttribute('hidden');\n\n                event.target.focus();\n            }\n\n            function camelize(str) {\n                return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n                if (+match === 0) return \"\";\n                    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n                });\n            }\n\n            function renderID(str) {\n                return camelize(str.replace(/[^a-z0-9]/gi, ' '));\n            }\n\n            function convertToParamString(str) {\n                let stringCleanup = str.replace(/;\\s|;/g, '&').replace(/:\\s|:/g, '=');\n                let optionParam = new URLSearchParams(stringCleanup);\n                return optionParam;\n            }\n        }\n    });\n}\n\nwindow.addEventListener('DOMContentLoaded', viewMarkup);"]}