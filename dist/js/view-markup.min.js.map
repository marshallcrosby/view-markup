{"version":3,"sources":["view-markup.js"],"names":["window","addEventListener","viewMarkupEl","document","querySelectorAll","scriptLinkage","getElementById","querySelector","modalNav","dynamicPos","dynamicPosZIndex","excludeAttribute","urlParam","URLSearchParams","getAttribute","split","get","srcready","Event","pageSrc","request","XMLHttpRequest","ActiveXObject","makeHttpObject","open","location","href","send","onreadystatechange","readyState","responseText","dispatchEvent","str","copiedViewMarkupEl","DOMParser","parseFromString","length","options","elHtmlInitial","elHtmlClean","elAmount","modalEl","createElement","markupContentHtmlString","forEach","item","index","excludeAttributeArr","element","attribute","removeAttribute","tagName","toLowerCase","outerHTML","el","optionPreserveAttr","semiColonSplit","undefined","trim","leaveAttr","replace","modalBtn","classList","add","setAttribute","innerHTML","nodeName","wrapperDivBody","body","prepend","appendChild","markupWrapperDiv","wrapper","parentNode","insertBefore","title","btnX","btnY","btnZ","btnPos","btnAppendTo","btnPrependTo","btnColor","scriptSelector","backdropRgb","renderInPage","marginBottom","marginTop","currentElement","parseOption","style","transform","zIndex","position","backgroundColor","elBtnParent","closest","textStyle","textStyleString","textContent","head","highlightVersionNumb","css","js","themeCssDarkUrl","themeCssLightUrl","highlightCssUrl","localStorage","getItem","highlightScriptUrl","beautifyScriptUrl","loadExternalJs","scriptSrc","callback","getElementsByTagName","script","src","onload","url","link","id","rel","loadExternalCss","viewMarkupInitialize","modalDialog","wrapperEl","inPageBlock","inPageContent","inPageHeader","modalSetSize","readyAdjustments","inPageCodeJsBlock","jsToTidy","toString","tidyJS","html_beautify","indent_size","getCachedSpaceTab","space_in_empty_paren","hljs","highlightElement","inPageCodeHtmlBlock","tidyHTML","remove","modalNavEl","modalPrevBtn","modalNextBtn","modalNavigate","this","modalNavigation","documentElement","vmReadyEvent","createEvent","initEvent","allID","allFor","allAriaLabelledBy","x","y","currentFor","z","currentAriaLabelledBy","modalContent","modalCloseBtn","copyBtn","settingsBtn","settingsDropdown","textArea","preEl","htmlCodeEl","jsCodeEl","radio2Spaces","radio4Spaces","themeDark","themeLight","fontSize","htmlTab","jsTab","modalCodeHtmlEL","modalContentEl","modalTitleEl","modalSizeMedium","modalSizeLarge","modalCodeJsEL","checked","value","currentValue","setItem","currentShowingCode","currentCode","i","offsetWidth","offsetHeight","code","spaceTabRadio","tidyCode","applyTidyCodeToTextArea","applyCopyBtnState","navigator","clipboard","writeText","applyCleanHtml","applyCleanJs","focus","event","isClickInside","contains","target","modalHide","e","key","currentViewMarkupIndex","focusedElementBeforeModal","optionDropdownClass","modalBtnEL","html","spaces","btnEl","activeElement","keyCode","shiftKey","firstTabStop","preventDefault","lastTabStop","focusableElements","Array","prototype","slice","call","modalShow","hasAttribute","cleanTitle","codeEl","setTabSpaces","tidyJs","checkedSpacesRadio","state","clickedButton","direction","mapToModalBtnIndex","parseInt","mapToModalBtnSelector","mapToModalBtn","click","setTimeout","ariaExpandedAttr","toggle","floatingButtonHolder","withmodalEl","floatingModalBtn","positionModalBtns","load","btnElement","top","getBoundingClientRect","scrollY","left","docFrag","createDocumentFragment","firstChild","child","removeChild","replaceChild","unwrap","func","timer","clearTimeout","debounce","changeTabs","parent","grandparent","tab","panel","setAttributes","attrs","splitOn","optionString","tabNav","role","aria-label","tabsList","tabButton","entry","tabButtonEntry","cloneNode","uniqueString","match","toUpperCase","camelize","aria-selected","tabindex","aria-controls","vmPanel","tabButtonElement","aria-labelledby","tabs","tabList","tabFocus","tabTitle","tabsTitle"],"mappings":"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","sourcesContent":["/*!\n    * View markup v1.4.0\n    * Plugin that makes it easy for developers to view and copy the html needed for a component.\n    *\n    * Copyright 2021-2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n(function () {\n    \"use strict\"\n\n    window.addEventListener('DOMContentLoaded', function () {\n    \n        // Cache elements\n        const viewMarkupEl = document.querySelectorAll('[data-view-markup]');\n        \n        // Get query params if any\n        let scriptLinkage = document.getElementById('view-markup-js') || document.querySelector('script[src*=view-markup]');\n        let modalNav = null;\n        let dynamicPos = null;\n        let dynamicPosZIndex = null;\n        let excludeAttribute = null;\n\n        if (scriptLinkage) {\n            let urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n            modalNav = urlParam.get('modal-nav');\n            dynamicPos = urlParam.get('dynamic-pos');\n            dynamicPosZIndex = urlParam.get('z-index');\n            excludeAttribute = urlParam.get('exclude-attribute');\n        }\n    \n        let srcready = new Event('src-is-ready');\n        let pageSrc = null;\n        let request = makeHttpObject();\n        \n        request.open('GET', window.location.href, true);\n        request.send(null);\n        request.onreadystatechange = function() {\n            if (request.readyState === 4) {\n                pageSrc = request.responseText;\n                document.dispatchEvent(srcready);\n            }\n        }\n\n        // Get original page src\n        function makeHttpObject() {\n            if ('XMLHttpRequest' in window) {\n                return new XMLHttpRequest();\n            } else if ('ActiveXObject' in window) {\n                return new ActiveXObject('Msxml2.XMLHTTP');\n            }\n        }\n        \n        // Convert src string to HTML\n        function stringToHTML(str) {\n            let parser = new DOMParser();\n            let doc = parser.parseFromString(str, 'text/html');\n            return doc;\n        }\n\n        // Remove multiple attributes\n        function removeAttributes(element, attributes) {\n            attributes.forEach(function (attribute) {\n                element.removeAttribute(attribute);\n            });\n        }\n\n        document.addEventListener('src-is-ready', function () {\n            const copiedPageHTML = stringToHTML(pageSrc);\n            const copiedViewMarkupEl = copiedPageHTML.querySelectorAll('[data-view-markup]');\n            \n            // copiedViewMarkupEl.forEach((item) => {\n            //     item.removeAttribute('data-view-markup');\n            // });\n            \n            if (viewMarkupEl.length > 0) {\n                let elHtmlInitial = [];\n                let elHtmlClean = [];\n                let elAmount = 0;\n                let options;\n\n                // Declare base modal element right away to add some data attributes to\n                let modalEl = document.createElement('div');\n\n                let markupContentHtmlString = `//import _view-markup-modal.html`;\n\n                viewMarkupEl.forEach(function (item, index) {\n\n                    // Remove specified param attrbute(s)\n                    if (excludeAttribute !== null) {\n                        let excludeAttributeArr = excludeAttribute.split(',');\n                        removeAttributes(copiedViewMarkupEl[index], excludeAttributeArr);\n                    }\n                    \n                    // Cache all viewable markup elements               \n                    elHtmlInitial[index] = (index === 0 && viewMarkupEl[0].tagName.toLowerCase() === 'html') ?\n                        pageSrc :\n                        copiedViewMarkupEl[index].outerHTML;\n                    \n                    // Remove the view markup specific data attributes\n                    if (!leaveAttr(viewMarkupEl[index])) {\n                        elHtmlClean[index] = elHtmlInitial[index].replace(/data-view-markup=\"[^\\\"]*\"/g, '').replace(/data-view-markup/g, '');\n                        // elHtmlClean[index] = elHtmlInitial[index];\n                    }\n                    \n                    // Create modal button\n                    let modalBtn = document.createElement('button');\n                    modalBtn.classList.add('view-markup__modal-btn');\n                    modalBtn.setAttribute('type', 'button');\n                    modalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                        \n                    // if <html> or <body> do things a bit differently\n                    if (viewMarkupEl[index].nodeName.toLowerCase()  === 'body' || viewMarkupEl[index].nodeName.toLowerCase()  === 'html') {\n                        let wrapperDivBody = document.createElement('div');\n                        wrapperDivBody.classList.add('view-markup');\n                        wrapperDivBody.classList.add('view-markup--body');\n                        document.body.prepend(wrapperDivBody);\n                        wrapperDivBody.appendChild(modalBtn);\n                    } else {\n                        \n                        // Wrap in div\n                        let markupWrapperDiv = document.createElement('div');\n                        markupWrapperDiv.classList.add('view-markup');\n                        markupWrapperDiv.innerHTML = '<div class=\"view-markup__highlight\"></div>';\n                        wrapElement(viewMarkupEl[index], markupWrapperDiv);\n                        markupWrapperDiv.prepend(modalBtn);\n                    }\n                    \n                    options = {\n                        title: null,\n                        btnX: null,\n                        btnY: null,\n                        btnZ: null,\n                        btnPos: null,\n                        btnAppendTo: null,\n                        btnPrependTo: null,\n                        btnColor: null,\n                        scriptSelector: null,\n                        backdropRgb: null,\n                        renderInPage: null,\n                        marginBottom: null,\n                        marginTop: null,\n                        modalNav: null\n                    };\n                        \n                    // Apply some options to toggle if available\n                    let currentElement = viewMarkupEl[index];\n                    if (currentElement.getAttribute('data-view-markup') !== '') {\n                        let semiColonSplit = viewMarkupEl[index].getAttribute('data-view-markup').split(';');\n                        \n                        // Assign option values if any\n                        semiColonSplit.forEach(function (item, index) {\n                            if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                                options.title = parseOption(semiColonSplit[index], 'title');\n                            }\n\n                            if (semiColonSplit[index].split('btn-x:')[1] !== undefined) {\n                                options.btnX = parseOption(semiColonSplit[index], 'btn-x');\n                            }\n                            \n                            if (semiColonSplit[index].split('btn-y:')[1] !== undefined) {\n                                options.btnY = parseOption(semiColonSplit[index], 'btn-y');\n                            }\n                            \n                            if (semiColonSplit[index].split('btn-z:')[1] !== undefined) {\n                                options.btnZ = parseOption(semiColonSplit[index], 'btn-z');\n                            }\n                            \n                            if (semiColonSplit[index].split('btn-pos:')[1] !== undefined) {\n                                options.btnPos = parseOption(semiColonSplit[index], 'btn-pos');\n                            }\n                            \n                            if (semiColonSplit[index].split('btn-append-to:')[1] !== undefined) {\n                                options.btnAppendTo = parseOption(semiColonSplit[index], 'btn-append-to');\n                            }\n                            \n                            if (semiColonSplit[index].split('btn-prepend-to:')[1] !== undefined) {\n                                options.btnPrependTo = parseOption(semiColonSplit[index], 'btn-prepend-to');\n                            }\n                            \n                            if (semiColonSplit[index].split('btn-color:')[1] !== undefined) {\n                                options.btnColor = parseOption(semiColonSplit[index], 'btn-color');\n                            }\n                            \n                            if (semiColonSplit[index].split('associated-script:')[1] !== undefined) {\n                                options.scriptSelector = parseOption(semiColonSplit[index], 'associated-script');\n                            }\n                            \n                            if (semiColonSplit[index].split('backdrop-rgb:')[1] !== undefined) {\n                                options.backdropRgb = parseOption(semiColonSplit[index], 'backdrop-rgb');\n                            }\n                            \n                            if (semiColonSplit[index].split('render-in-page:')[1] !== undefined) {\n                                options.renderInPage = parseOption(semiColonSplit[index], 'render-in-page');\n                                currentElement.setAttribute('data-view-markup-render-in-page', '');\n                            }\n                            \n                            if (semiColonSplit[index].split('margin-bottom:')[1] !== undefined) {\n                                options.marginBottom = parseOption(semiColonSplit[index], 'margin-bottom');\n                            }\n                            \n                            if (semiColonSplit[index].split('margin-top:')[1] !== undefined) {\n                                options.marginTop = parseOption(semiColonSplit[index], 'margin-top');\n                            }\n                            \n                            if (semiColonSplit[index].split('modal-nav:')[1] !== undefined) {\n                                options.modalNav = parseOption(semiColonSplit[index], 'modal-nav');\n                            }\n                        });          \n                                            \n                        // Setup title attribute to be used later\n                        if (options.title) {\n                            modalBtn.setAttribute('data-view-markup-title', options.title);\n                        }\n\n                        // Btn x postion set\n                        if (options.btnX) {\n                            modalBtn.style.transform = 'translateX(' + options.btnX + ')';\n                        }\n\n                        // Btn y postion set\n                        if (options.btnY) {\n                            modalBtn.style.transform = 'translateY(' + options.btnY + ')';\n                        }\n\n                        // Btn both positions\n                        if (options.btnX && options.btnY) {\n                            modalBtn.style.transform = 'translateX(' + options.btnX + ') translateY(' + options.btnY + ')';\n                        }\n\n                        // Btn z-index\n                        if (options.btnZ) {\n                            modalBtn.style.zIndex = options.btnZ;\n                        }\n\n                        // Btn position\n                        if (options.btnPos) {\n                            modalBtn.style.position = options.btnPos;\n                        }\n                        \n                        // TODO: Btn color\n                        if (options.btnColor) {\n                            modalBtn.style.backgroundColor = options.btnColor;\n                        }\n\n                        // Append to selector\n                        if (options.btnAppendTo) {\n                            elBtnParent = document.querySelector(options.btnAppendTo);\n                            elBtnParent.appendChild(modalBtn);\n                        }\n\n                        // Prepend to selector\n                        if (options.btnPrependTo) {\n                            elBtnParent = document.querySelector(options.btnPrependTo);\n                            elBtnParent.prepend(modalBtn);\n                        }\n                        \n                        // Script selector\n                        if (options.scriptSelector) {\n                            modalBtn.setAttribute('data-view-markup-script-selector', options.scriptSelector);\n                        }\n                        \n                        // Backdrop rgba\n                        if (options.backdropRgb) {\n                            modalBtn.setAttribute('data-view-markup-backdrop-rgb', options.backdropRgb);\n                        }\n                        \n                        // In page rendering\n                        if (options.renderInPage) {\n                            modalBtn.setAttribute('data-view-markup-in-page', 'true');\n                        }\n                        \n                        // Modal navigation\n                        if (options.modalNav === 'true') {\n                            modalBtn.setAttribute('data-view-markup-modal-nav', 'true');\n                        }\n                        \n                        // Bottom margin for in page view\n                        if (options.marginBottom) {\n                            item.closest('.view-markup').style.marginBottom = options.marginBottom;\n                        }\n                        \n                        // Top margin for in page view\n                        if (options.marginTop) {\n                            item.closest('.view-markup').style.marginTop = options.marginTop;\n                        }\n                    }   \n                });\n\n\n                // Check for preserve-attribute option\n                function leaveAttr(el) {\n                    let optionPreserveAttr = null;\n                    \n                    if (el.getAttribute('data-view-markup').split(';')) {\n                        let semiColonSplit = el.getAttribute('data-view-markup').split(';');\n                        \n                        if (semiColonSplit[0].split('preserve-attribute:')[1] !== undefined) {\n                            optionPreserveAttr = semiColonSplit[0].split('preserve-attribute:')[1].trim();\n                        }\n                                \n                        if (optionPreserveAttr === 'true') {\n                            return true;\n                        } else {\n                            return false;\n                        }    \n                    }\n                }\n                \n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Custom styles added via js\n                // -----------------------------------------------------------------------------\n\n                // Create style tag to dump styles into for the markup modal\n                let textStyle = document.createElement('style');\n                textStyle.setAttribute('id', 'viewMarkupStyle');\n\n                // Import compressed styles as a string\n                let textStyleString = `//import view-markup.css`;\n\n                // Apply in page styles to style tag\n                textStyle.textContent = textStyleString;\n\n                // Add in page styles to head\n                document.head.appendChild(textStyle);\n\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Load external libraries\n                // -----------------------------------------------------------------------------\n\n                // TODO: import these through npm packages\n\n                // Highlight css and js CDN. Project repo: https://github.com/highlightjs/highlight.js/\n                let highlightVersionNumb = {\n                    css: '10.7.2',\n                    js: '11.3.1'\n                }\n                let themeCssDarkUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/atom-one-dark.min.css';\n                let themeCssLightUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/github.min.css';\n\n                let highlightCssUrl = (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') ? themeCssDarkUrl : themeCssLightUrl;\n                let highlightScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.js + '/highlight.min.js';\n\n                // Beautify HTML CDN. Project repo: https://github.com/beautifier/beautifier.io\n                let beautifyVersionNumb = '1.14.0';\n                let beautifyScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/' + beautifyVersionNumb + '/beautify-html.min.js';\n\n                // HTML2Canvas CDN\n                let html2CanvasVersionNumb = '1.4.1';\n                let html2CanvasScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/html2canvas/' + html2CanvasVersionNumb + '/html2canvas.min.js';\n\n                // Load highlight js/css external assets\n                loadExternalCss(highlightCssUrl);\n\n                // Initalize everything after getting beautify-html script\n                loadExternalJs(beautifyScriptUrl, loadFinalJS);\n                \n                // loadExternalJs(html2CanvasScriptUrl);\n\n                function loadFinalJS() {\n                    loadExternalJs(highlightScriptUrl, viewMarkupInitialize);\n                }\n\n                function loadExternalJs(scriptSrc, callback) {\n                    let head = document.getElementsByTagName('head')[0];\n                    let script = document.createElement('script');\n                    \n                    script.src = scriptSrc;\n                    \n                    head.appendChild(script);\n                    script.onload = callback;\n                }\n\n                // Run after getting beautify-html/highlight.io external assets\n                function loadExternalCss(url, callback) {\n                    let head = document.getElementsByTagName('head')[0];\n                    let link = document.createElement('link');\n                        \n                    link.id = 'highlightJsCss';\n                    link.rel = 'stylesheet';\n                    link.href = url;\n                    \n                    link.onreadystatechange = callback;\n                    link.onload = callback;\n                    head.appendChild(link);\n                }\n\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Render modal\n                // -----------------------------------------------------------------------------\n                    \n                // Setup modal outer div and attributes\n                modalEl.classList.add('view-markup-modal');\n                modalEl.setAttribute('id', 'viewMarkupModal');\n                modalEl.setAttribute('aria-labelledby', 'viewMarkupModalTitle');\n                modalEl.setAttribute('aria-modal', true);\n                modalEl.setAttribute('role', 'dialog');\n                modalEl.setAttribute('tabindex', '-1');\n\n                // Create modal dialog div\n                let modalDialog = document.createElement('div');\n\n                // Insert modal dialog element into outer modal element\n                modalDialog.classList.add('view-markup-modal__dialog');\n                modalEl.appendChild(modalDialog);\n\n                // Add the rest of the html string into modal dialog\n                modalDialog.innerHTML = markupContentHtmlString;\n                document.body.appendChild(modalEl);\n\n                // Set in page element\n                let wrapperEl = document.querySelectorAll('.view-markup');\n                wrapperEl.forEach(function (item) {\n                    if (item.querySelector('[data-view-markup-in-page]')) {\n                        let inPageBlock = document.createElement('div');\n                        inPageBlock.classList.add('view-markup__in-page-view');\n                        item.appendChild(inPageBlock);\n                        inPageBlock.innerHTML = markupContentHtmlString;\n                    }\n                });\n\n                // Assign in page unique ids and adjust aria-lablledby to match\n                let inPageContent = document.querySelectorAll('.view-markup__in-page-view .view-markup__content');\n                let inPageHeader = document.querySelectorAll('.view-markup__in-page-view .view-markup__header');\n                let modalSetSize = document.querySelectorAll('.view-markup__size-set');\n\n                inPageContent.forEach(function (item, index) {\n                    inPageHeader[index].remove();\n                    modalSetSize[index].remove();\n                    \n                    let allID = item.querySelectorAll('[id]');\n                    let allFor = item.querySelectorAll('[for]');\n                    let allAriaLabelledBy = item.querySelectorAll('[aria-labelledby]');\n\n                    // Unique id\n                    for (let x = 0; x < allID.length; x++) {\n                        allID[x].id = allID[x].id + '-' + index;\n                    }\n                    \n                    // Unique for\n                    for (let y = 0; y < allFor.length; y++) {\n                        let currentFor = allFor[y].getAttribute('for');\n                        allFor[y].setAttribute('for', currentFor + '-' + index);\n                    }\n\n                    // Unique aria-labelledby\n                    for (let z = 0; z < allAriaLabelledBy.length; z++) {\n                        let currentAriaLabelledBy = allAriaLabelledBy[z].getAttribute('aria-labelledby');\n                        allAriaLabelledBy[z].setAttribute('aria-labelledby', currentAriaLabelledBy + '-' + index);\n                    }\n                });\n\n                // When external assets are loaded run this\n                function readyAdjustments() {\n                    wrapperEl.forEach(function (item, index) {\n                        \n                        // Tidy js\n                        if (item.querySelector('[data-view-markup-in-page]') && item.querySelector('[data-view-markup-script-selector]')) {\n                            let inPageCodeJsBlock = item.querySelector('.view-markup__code--js');\n                            let scriptSelector = item.querySelector('[data-view-markup-script-selector]').getAttribute('data-view-markup-script-selector');\n                            let scriptElement = document.querySelector(scriptSelector);\n                            let jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                            \n                            let tidyJS = html_beautify(jsToTidy, {\n                                indent_size: getCachedSpaceTab(),\n                                space_in_empty_paren: true\n                            });\n                            \n                            inPageCodeJsBlock.textContent = tidyJS;\n                            hljs.highlightElement(inPageCodeJsBlock);\n                            \n                            if (inPageCodeJsBlock.textContent !== '') {\n                                inPageCodeJsBlock.closest('.view-markup__content').classList.add('view-markup-modal--has-js');\n                            }\n                        }\n                        \n                        // Tidy html\n                        if (item.querySelector('[data-view-markup-in-page]')) {\n                            let inPageCodeHtmlBlock = item.querySelector('.view-markup__code--html');\n                            let tidyHTML = html_beautify(elHtmlClean[index], {\n                                indent_size: getCachedSpaceTab(),\n                                space_in_empty_paren: true\n                            });\n                            \n                            inPageCodeHtmlBlock.textContent = tidyHTML;\n                            hljs.highlightElement(inPageCodeHtmlBlock);\n                            \n                            // Remove uneeded modal button\n                            item.querySelector('[data-view-markup-in-page]').remove();\n                        }\n                    });\n                    \n                    // Ready to initialize modal navigation\n                    modalNavigation();\n                    \n                    // Add ready class on body\n                    document.documentElement.classList.add('js-view-markup-ready');\n\n                    const vmReadyEvent = document.createEvent('Event');\n                    vmReadyEvent.initEvent('ViewMarkupReady', true, true);\n                    window.dispatchEvent(vmReadyEvent);\n                }\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Cache rendered elements\n                // -----------------------------------------------------------------------------\n\n                let modalContent = document.querySelectorAll('.view-markup__content');\n                let modalCloseBtn = document.querySelectorAll('.view-markup__close-btn');\n                let copyBtn = document.querySelectorAll('.view-markup__copy-btn');\n                let settingsBtn = document.querySelectorAll('.view-markup__settings-btn');\n                let settingsDropdown = document.querySelectorAll('.view-markup__settings-dropdown');\n                let textArea = document.querySelectorAll('.view-markup__hidden-textarea');\n                let preEl = document.querySelectorAll('.view-markup__pre');\n                let htmlCodeEl = document.querySelectorAll('.view-markup__code--html');\n                let jsCodeEl = document.querySelectorAll('.view-markup__code--js');\n                let radio2Spaces = document.querySelectorAll('.view-markup__indent-2');\n                let radio4Spaces = document.querySelectorAll('.view-markup__indent-4');\n                let themeDark = document.querySelectorAll('.view-markup__theme-dark');\n                let themeLight = document.querySelectorAll('.view-markup__theme-light');\n                let fontSize = document.querySelectorAll('.view-markup__font-size');\n                let htmlTab = document.querySelectorAll('.view-markup__tabs-button--html');\n                let jsTab = document.querySelectorAll('.view-markup__tabs-button--js');\n                let inPageCodeBlock = document.querySelectorAll('.view-markup-in-page');\n\n                // Modal specific elements\n                let modalCodeHtmlEL = document.querySelector('.view-markup-modal .view-markup__code--html');\n                let modalContentEl = document.querySelector('.view-markup-modal .view-markup__content');\n                let modalTitleEl = document.querySelector('.view-markup-modal .view-markup__title');\n                let modalSizeMedium = document.querySelectorAll('.view-markup__size-medium');\n                let modalSizeLarge = document.querySelectorAll('.view-markup__size-large');\n                let modalCodeJsEL = document.querySelectorAll('.view-markup-modal .view-markup__code--js');\n\n\n\n\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Setup cached settings\n                // -----------------------------------------------------------------------------\n\n                // Select cached tabspaces radio\n                if (localStorage.getItem('checkedSpaceTab') === null || localStorage.getItem('checkedSpaceTab') === '4' ) {\n                    radio4Spaces.forEach(function (item) {\n                        item.checked = true;\n                    });\n                } else {\n                    radio2Spaces.forEach(function (item) {\n                        item.checked = true;\n                    });\n                }\n\n\n                // Select cached theme radio\n                if (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') {\n                    themeDark.forEach(function (item) {\n                        item.checked = true;\n                    });\n                } else {\n                    themeLight.forEach(function (item) {\n                        item.checked = true;\n                    });\n                    document.documentElement.classList.add('js-view-markup-theme-light');\n                }\n\n\n                // Select cached modal size radio\n                if (localStorage.getItem('checkedModalSize') === null || localStorage.getItem('checkedModalSize') === 'medium' ) {\n                    modalSizeMedium.forEach(function (item) {\n                        item.checked = true;\n                    });\n                } else {\n                    modalSizeLarge.forEach(function (item) {\n                        item.checked = true;\n                    });\n                    document.body.classList.add('js-view-markup-size-large');\n                } \n\n\n                // Get cached font-size\n                if (localStorage.getItem('fontSizevalue') === null ) {\n                    fontSize.forEach(function (item) {\n                        item.value = '13';\n                    });\n                } else {\n                    let currentValue = localStorage.getItem('fontSizevalue');\n                    \n                    fontSize.forEach(function (item) {\n                        item.value = localStorage.getItem('fontSizevalue');\n                    });\n\n                    preEl.forEach(function (item, index) {\n                        item.style.fontSize = currentValue + 'px';\n                    });\n                }\n\n                // Font code font size\n                fontSize.forEach(function (item, index) {\n                    item.addEventListener('change', function () {\n                        let currentValue = item.value;\n                        \n                        localStorage.setItem('fontSizevalue', currentValue);\n\n                        fontSize.forEach(function (item, index) {\n                            item.value = currentValue\n                        });\n\n                        preEl.forEach(function (item, index) {\n                            item.style.fontSize = currentValue + 'px';\n                        });\n                    });\n                });\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Modal and code controls\n                // -----------------------------------------------------------------------------\n\n                // Copy button\n                copyBtn.forEach(function (item, index) {\n                    item.addEventListener('click', function () {\n                        let currentShowingCode;\n                        let closestElement = item.closest('.view-markup__content');\n                        let currentCode = closestElement.querySelectorAll('.view-markup__code');\n                                \n                        for (let i = 0; i < currentCode.length; i++) {\n                            if (currentCode[i].offsetWidth > 0 && currentCode[i].offsetHeight > 0) {\n                                currentShowingCode = currentCode[i];\n                            }\n                        }\n                                \n                        applyTidyCodeToTextArea(currentShowingCode.textContent, getCachedSpaceTab(), index);\n                        \n                        applyCopyBtnState('disabled');\n\n                        navigator.clipboard.writeText(textArea[index].value);\n                    });\n                });\n\n                // Tabspaces (2) radio change event listeners\n                radio2Spaces.forEach(function (item, index) {\n                    item.addEventListener('change', function () {\n                        if (this.checked === true) {\n                            \n                            // Remember tab checked radio\n                            localStorage.setItem('checkedSpaceTab', 2);\n                            \n                            radio4Spaces.forEach(function (item, index) {\n                                item.checked = false;\n                            });\n                            \n                            radio2Spaces.forEach(function (item, index) {\n                                item.checked = true;\n                            });\n                            \n                            // Set to 2 tabs\n                            htmlCodeEl.forEach(function (item) {\n                                applyCleanHtml(item.textContent, 4, null, item);\n                            });\n                            \n                            // Apply clean js\n                            applyCleanJs(2, null, true, jsCodeEl);\n                                                    \n                            // Set copy button state\n                            applyCopyBtnState('enabled');\n                            \n                            this.focus();\n                        }\n                    });\n                });\n\n                // Tabspaces (4) radio change event listeners\n                radio4Spaces.forEach(function (item, index) {\n                    item.addEventListener('change', function () {\n                        if (this.checked === true) {\n                            \n                            // Remember tab checked radio\n                            localStorage.setItem('checkedSpaceTab', 4);\n                            \n                            radio2Spaces.forEach(function (item, index) {\n                                item.checked = false;\n                            });\n                            \n                            radio4Spaces.forEach(function (item, index) {\n                                item.checked = true;\n                            });\n                            \n                            // Set to 4 tabs\n                            htmlCodeEl.forEach(function (item) {\n                                applyCleanHtml(item.textContent, 4, null, item);\n                            });\n                            \n                            // Apply clean js\n                            applyCleanJs(4, null, true, jsCodeEl);\n                            \n                            // Set copy button state\n                            applyCopyBtnState('enabled');\n                            \n                            this.focus();\n                        }\n                    });\n                });\n\n\n                // Dark theme radio change event listeners\n                themeDark.forEach(function (item) {\n                    item.addEventListener('change', function () {\n                        if (this.checked === true) {\n                            \n                            themeLight.forEach(function (item, index) {\n                                item.checked = false;\n                            });\n                            \n                            themeDark.forEach(function (item, index) {\n                                item.checked = true;\n                            });\n                            \n                            // Remember tab checked radio\n                            localStorage.setItem('checkedThemeColor', 'dark');\n                            document.documentElement.classList.remove('js-view-markup-theme-light');\n                            document.getElementById('highlightJsCss').href = themeCssDarkUrl;\n                        }\n                    });\n                });\n\n                // Light theme radio change event listeners\n                themeLight.forEach(function (item) {\n                    item.addEventListener('change', function () {\n                        if (this.checked === true) {\n                            \n                            themeDark.forEach(function (item, index) {\n                                item.checked = false;\n                            });\n                            \n                            themeLight.forEach(function (item, index) {\n                                item.checked = true;\n                            });\n                            \n                            // Remember tab checked radio\n                            localStorage.setItem('checkedThemeColor', 'light');\n                            document.documentElement.classList.add('js-view-markup-theme-light');\n                            document.getElementById('highlightJsCss').href = themeCssLightUrl;\n                        }\n                    });\n                });\n\n                // Medium modal size radio change event listeners\n                modalSizeMedium.forEach(function (item) {\n                    item.addEventListener('change', function () {\n                        if (this.checked === true) {\n                            \n                            modalSizeLarge.forEach(function (item, index) {\n                                item.checked = false;\n                            });\n                            \n                            modalSizeMedium.forEach(function (item, index) {\n                                item.checked = true;\n                            });\n                            \n                            // Remember tab checked radio\n                            localStorage.setItem('checkedModalSize', 'medium');\n                            document.body.classList.remove('js-view-markup-size-large');\n                        }\n                    });\n                });\n\n                // Large modal size radio change event listeners\n                modalSizeLarge.forEach(function (item) {\n                    item.addEventListener('change', function () {\n                        if (this.checked === true) {\n                            \n                            modalSizeMedium.forEach(function (item, index) {\n                                item.checked = false;\n                            });\n                            \n                            modalSizeLarge.forEach(function (item, index) {\n                                item.checked = true;\n                            });\n                            \n                            // Remember tab checked radio\n                            localStorage.setItem('checkedModalSize', 'large');\n                            document.body.classList.add('js-view-markup-size-large');\n                        }\n                    });\n                });\n\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // HTML/JS tab toggling\n                // -----------------------------------------------------------------------------\n\n                htmlTab.forEach(function (item, index) {\n                    item.addEventListener('click', function () {\n                        applyCopyBtnState('enabled');\n                        this.closest('.view-markup__content').classList.remove('view-markup--js-tab-showing');\n                    });\n                });\n\n                jsTab.forEach(function (item, index) {\n                    item.addEventListener('click', function () {\n                        applyCopyBtnState('enabled');\n                        this.closest('.view-markup__content').classList.add('view-markup--js-tab-showing');\n                    });\n                });\n\n\n\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Exiting the modal\n                // -----------------------------------------------------------------------------\n\n                // Hide modal by clicking outside of it\n                modalEl.addEventListener('mousedown', function (event) {\n                    let isClickInside = false;\n                    \n                    modalContent.forEach(function (item) {\n                        if ( item.contains(event.target) ) {\n                            isClickInside = true;\n                        }\n                    });\n                    \n                    if (!isClickInside && this.classList.contains('view-markup-modal--showing')) {\n                        modalHide();\n                    }\n                });\n\n                // Hide modal with close and cancel button click\n                modalCloseBtn.forEach(function (item) {\n                    item.addEventListener('click', function () {\n                        modalHide();\n                    });\n                });\n\n                // Hide modal with esc key\n                modalEl.addEventListener('keydown', function (e) {\n                    let key = e.key;\n\n                    if (key === 'Escape' && document.documentElement.classList.contains('js-view-markup-modal-showing')) {\n                        modalHide();\n                    }\n                });\n\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Settings dropdown functionality\n                // -----------------------------------------------------------------------------\n\n                let optionDropdownClass = 'view-markup__settings-dropdown--showing';\n\n                // Settings dropdown\n                settingsBtn.forEach(function (item, index) {\n                    item.addEventListener('click', function () {\n                        let ariaExpandedAttr = this.getAttribute('aria-expanded');\n\n                        this.setAttribute('aria-expanded', (ariaExpandedAttr === 'true') ? 'false' : 'true');\n                        settingsDropdown[index].classList.toggle(optionDropdownClass);\n                    });\n                });\n\n                // Hide settings dropdown by clicking outside of it\n                document.addEventListener('mousedown', function (event) {\n                    settingsDropdown.forEach(function (item, index) {\n                        let isClickInside = item.contains(event.target);\n\n                        if (\n                            !event.target.classList.contains('view-markup__settings-btn') &&\n                            item.classList.contains(optionDropdownClass) &&\n                            !isClickInside\n                        ) {\n                            settingsBtn[index].setAttribute('aria-expanded', false);\n                            item.classList.remove(optionDropdownClass);\n                        }\n                    });\n                });\n\n                // Focus out of dropdown\n                // settingsDropdown.addEventListener('focusout', function (event) {\n                //     settingsBtn.setAttribute('aria-expanded', false);\n                //     settingsDropdown.classList.remove(optionDropdownClass);\n                // });\n\n\n\n\n\n                // -----------------------------------------------------------------------------\n                // Functions\n                // -----------------------------------------------------------------------------\n\n                // Function properly assigns untouched DOM html modal\n                function viewMarkupInitialize() {\n                    elHtmlClean.forEach(function (item, index) {\n                        \n                        // Assign modal button to correct html to view\n                        let modalParent = viewMarkupEl[index].closest('.view-markup') || viewMarkupEl[index];\n                        let modalBtnEL = modalParent.querySelector('.view-markup__modal-btn');\n\n                        // Crack open the modal with the correct html in view\n                        modalMapping(item, 2, modalBtnEL, null);\n                    });\n                    \n                    readyAdjustments();\n                }\n\n                // Cleanup and highlight markup\n                function applyCleanHtml(html, spaces, btnEl, codeEl) {\n                    let tidyHTML = html_beautify(html, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                        \n                    codeEl.textContent = tidyHTML;\n                    \n                    hljs.highlightElement(codeEl);\n                }\n\n                // Cleanup and highlight associated js\n                function applyCleanJs(spaces, btnEl, setTabSpaces, jsCodeEl) {    \n                    for (let i = 0; i < jsCodeEl.length; i++) {\n                        if (jsCodeEl[i] !== undefined) {\n                            let jsToTidy;\n                                    \n                            if (setTabSpaces) {\n                                jsToTidy = jsCodeEl[i].textContent;\n                            } else if (btnEl !== null && btnEl.hasAttribute('data-view-markup-script-selector')) {\n                                let scriptElement = document.querySelector(btnEl.getAttribute('data-view-markup-script-selector'));\n                                jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                            }\n                                    \n                            jsCodeEl[i].textContent = '';\n                            \n                            let tidyJs = html_beautify(jsToTidy, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                            \n                            jsCodeEl[i].textContent = tidyJs;\n                            \n                            hljs.highlightElement(jsCodeEl[i]);\n                        }\n                    }\n                }\n\n                // Return cached space/tab amount\n                function getCachedSpaceTab() {\n                    let checkedSpacesRadio;\n                    if (localStorage.getItem('checkedSpaceTab') === null) {\n                        checkedSpacesRadio = (radio2Spaces[0].checked === true) ? 2 : 4;\n                    } else {\n                        checkedSpacesRadio = localStorage.getItem('checkedSpaceTab');\n                    }\n                    return checkedSpacesRadio;\n                }\n\n                // Populate hidden textarea with tidy html/js for copy button\n                function applyTidyCodeToTextArea(code, spaceTabRadio, index) {\n                    let tidyCode = html_beautify(code, { indent_size: spaceTabRadio, space_in_empty_paren: true });\n                    textArea[index].textContent = tidyCode;\n                    return;\n                }\n\n                // Function that gets html, beautifies it, and displays it in a modal\n                let currentViewMarkupIndex;\n                function modalMapping(html, spaces, btnEl) {    \n                    btnEl.addEventListener('click', function () {        \n                        \n                        // Current modal button index (used for modal navigation)\n                        currentViewMarkupIndex = this.getAttribute('data-view-markup-nav-index');\n                        \n                        // screenShotDomElement(viewMarkupEl[currentViewMarkupIndex]);\n\n                        // Clean html\n                        applyCleanHtml(html, spaces, this, modalCodeHtmlEL);\n                        \n                        // Clean js\n                        applyCleanJs(spaces, this, null, modalCodeJsEL);\n\n                        modalContentEl.classList.remove('view-markup--js-tab-showing');\n                        \n                        jsCodeEl.forEach(function (item) {\n                            if (item.textContent !== '') {\n                                modalContentEl.classList.add('view-markup-modal--has-js');\n                            } else {\n                                modalContentEl.classList.remove('view-markup-modal--has-js');\n                            }\n                        });\n                        \n                        modalShow();\n                        \n                        applyCopyBtnState('enabled');\n\n                        // Add option title to modal title if there is one\n                        if (btnEl.hasAttribute('data-view-markup-title')) {\n                            let cleanTitle = btnEl.getAttribute('data-view-markup-title').replace(/^'(.*)'$/, '$1');\n                            modalTitleEl.textContent = cleanTitle;\n                        } else {\n                            modalTitleEl.textContent = 'Viewing markup';\n                        }\n                        \n                        // Add option backdrop rgb to modal back\n                        if (btnEl.hasAttribute('data-view-markup-backdrop-rgb')) {\n                            modalEl.style.backgroundColor = 'rgba(' + options.backdropRgb + ', .7)';\n                        } else {\n                            modalEl.style.backgroundColor = '';\n                        }\n                    });\n                }\n\n                // Apply copy button state\n                function applyCopyBtnState(state) {\n                    let clickedButton = document.querySelectorAll('.view-markup__copy-btn:focus');\n                    if (state === 'disabled') {\n                        clickedButton.forEach(function (item) {\n                            item.textContent = 'Copied';\n                            item.setAttribute('disabled', 'disabled');\n                        });\n                    } else if (state === 'enabled') {\n                        copyBtn.forEach(function (item) {\n                            item.textContent = 'Copy';\n                            item.removeAttribute('disabled');\n                        });\n                    }\n                }\n\n                // Wrap in tag\n                function wrapElement(el, wrapper) {\n                    el.parentNode.insertBefore(wrapper, el);\n                    wrapper.appendChild(el);\n                }\n\n                // Insert after\n                function insertAfter(newNode, existingNode) {\n                    existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n                }\n\n                // Show modal\n                let focusedElementBeforeModal;\n                function modalShow() {\n                    document.documentElement.classList.add('js-view-markup-modal-showing');\n                    modalEl.classList.add('view-markup-modal--showing');\n                    \n                    // Save current focus\n                    focusedElementBeforeModal = document.activeElement;\n\n                    // Listen for and trap the keyboard\n                    modalEl.addEventListener('keydown', trapTabKey);\n                    \n                    // Find all focusable children\n                    let focusableElementsString =\n                        'a[href],' +\n                        'area[href],' +\n                        'input,' +\n                        'select:not([disabled]),' +\n                        'textarea:not([tabindex=\"-1\"]),' +\n                        'button:not([disabled]),' +\n                        'iframe,' +\n                        'object,' +\n                        'embed,' +\n                        '[tabindex=\"0\"],' +\n                        '[contenteditable]';\n                        \n                    let focusableElements = modalEl.querySelectorAll(focusableElementsString);\n                    \n                    // Convert NodeList to Array\n                    focusableElements = Array.prototype.slice.call(focusableElements);\n\n                    let firstTabStop = focusableElements[0];\n                    let lastTabStop = focusableElements[focusableElements.length - 1];\n                    \n                    // Set initial focus on the modal\n                    modalEl.focus();\n                    \n                    function trapTabKey(e) {\n                        \n                        // Check for TAB key press\n                        if (e.keyCode === 9) {\n\n                            // SHIFT + TAB\n                            if (e.shiftKey) {\n                                if (document.activeElement === firstTabStop) {\n                                    e.preventDefault();\n                                    lastTabStop.focus();\n                                }\n\n                            // TAB\n                            } else {\n                                if (document.activeElement === lastTabStop) {\n                                    e.preventDefault();\n                                    firstTabStop.focus();\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Hide modal\n                function modalHide() {\n                    document.documentElement.classList.remove('js-view-markup-modal-showing');\n                    modalEl.classList.remove('view-markup-modal--showing');\n                    applyCopyBtnState('enabled');\n                    focusedElementBeforeModal.focus();\n                }\n\n                // Go to previous/next view markup element\n                function modalNavigate(el, direction) {\n                    let mapToModalBtnIndex;\n                    \n                    if (direction === 'prev') {\n                        mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === 0) ? parseInt(elAmount) - 1 : parseInt(currentViewMarkupIndex) - 1;\n                    } else if (direction === 'next') {\n                        mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === parseInt(elAmount) - 1) ? 0 : parseInt(currentViewMarkupIndex) + 1;\n                    }\n                        \n                    let mapToModalBtnSelector = '[data-view-markup-nav-index=\"' + mapToModalBtnIndex + '\"]';\n                    let mapToModalBtn = document.querySelector(mapToModalBtnSelector.toString());\n                    \n                    document.documentElement.classList.add('js-view-markup-modal-showing--navigating');\n                    \n                    mapToModalBtn.click();\n                    mapToModalBtn.focus();\n                    \n                    setTimeout(function () {\n                        document.documentElement.classList.remove('js-view-markup-modal-showing--navigating');\n                    }, 300);\n                }\n\n                // Modal navigation arrows\n                function modalNavigation() {    \n                    \n                    // Add index to modal buttons for navigation\n                    let modalNavEl = document.querySelector('.view-markup__nav');\n                    let modalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                    \n                    elAmount = modalBtn.length;\n                    \n                    modalBtn.forEach(function (item, index) {\n                        item.setAttribute('data-view-markup-nav-index', index);\n                    });\n                    \n                    if (elAmount > 1) {\n\n                        // Modal previous button\n                        let modalPrevBtn = modalEl.querySelector('.view-markup__prev-btn');\n\n                        // Modal next button\n                        let modalNextBtn = modalEl.querySelector('.view-markup__next-btn');\n                        \n                        // Modal previous button click\n                        modalPrevBtn.addEventListener('click', function () {\n                            modalNavigate(this, 'prev');\n                        });\n\n                        // Modal next button click\n                        modalNextBtn.addEventListener('click', function () {\n                            modalNavigate(this, 'next');\n                        });  \n                    } else {\n\n                        // Remove modal nav if only 1 item\n                        modalNavEl.remove();\n                    }\n                    \n                    if (modalNav === null) {\n                    \n                        // Remove modal nav if no setting is found\n                        modalNavEl.remove();\n                    }\n                }\n\n\n\n                // If dynamic position query param is set, do some stuff\n                if (dynamicPos !== null) {\n                    window.addEventListener('ViewMarkupReady', () => {\n                    \n                        // Create new div that will contain all modal buttons\n                        let floatingButtonHolder = document.createElement('div');\n                        floatingButtonHolder.classList.add('view-markup-dynamic-nav');\n                        \n                        if (dynamicPosZIndex !== null) {\n                            floatingButtonHolder.style.zIndex = dynamicPosZIndex.toString();\n                        }\n                        \n                        document.body.appendChild(floatingButtonHolder);\n                \n                        // Cache elements with modals\n                        let withmodalEl = document.querySelectorAll('[data-view-markup]:not([data-view-markup-render-in-page])');\n                        \n                        // Re-cache remaining buttons\n                        let floatingModalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                        \n                        // Dynamically position modal button next to associated element\n                        function positionModalBtns(load) {\n                            \n                            // Add inline css to position button at the top left of the element\n                            withmodalEl.forEach( (item, i) => {\n                                let btnElement = floatingModalBtn[i];\n                \n                                btnElement.style.top = (item.getBoundingClientRect().top + window.scrollY) + 'px';\n                                btnElement.style.left = item.getBoundingClientRect().left + 'px';\n                \n                                if (load === 'load') {\n                                    floatingButtonHolder.appendChild(btnElement);\n                                }\n                            });\n                        }\n                        \n                        // Remove un-needed highlight divs\n                        let highlightElement = document.querySelectorAll('.view-markup__highlight');\n                        highlightElement.forEach( (item) => {\n                            item.remove();\n                        });\n                \n                        // Unwrap view-markup div\n                        wrapperEl.forEach( (item) => {\n                            unwrap(item);\n                        });\n                        \n                        // Position buttons on load\n                        positionModalBtns('load');\n                        \n                        // Position buttons after resize\n                        window.addEventListener('resize', debounce( () => {\n                            positionModalBtns();\n                        }));\n                    }, false);\n                }\n\n\n\n\n                \n                /* -----------------------------------------------------------------------------\n                    EXPIREMENTAL WIP: prototype floating the buttons over the page instead of\n                    wrapping each element in a div and then positioning it inside that div. Not\n                    a fan of how much it currently modifies the DOM to get the modal button next\n                    to the associated element correctly\n\n                    TODOS:\n                    ✓ Allow for dynamic button positioning\n                    • Add \"Skip to view markup modal navigation\" skip link\n                    • Add visual focus indicator to modal button when focus in the background\n                    when using modal navigation.\n                    ✓ Set smooth scrolling on the html,body when modal is active\n                    • Enhance preserve attribute functionality a bit. (allow for top and inner)\n                    • Add tab view\n                ----------------------------------------------------------------------------- */\n\n                // Render image of view-markup element\n                function screenShotDomElement(el) {\n                    html2canvas(el).then(function(canvas) {\n                        document.body.appendChild(canvas);\n                    });\n                }\n\n                // Unwrap function\n                function unwrap(wrapper) {\n                    let docFrag = document.createDocumentFragment();\n                    \n                    while (wrapper.firstChild) {\n                        let child = wrapper.removeChild(wrapper.firstChild);\n                        docFrag.appendChild(child);\n                    }\n\n                    wrapper.parentNode.replaceChild(docFrag, wrapper);\n                }\n\n                // Debounce function (throttle window resize)\n                function debounce(func) {\n                    let timer;\n\n                    return (event) => {\n                        if (timer) {\n                            clearTimeout(timer);\n                        }\n                        timer = setTimeout(func, 1000, event);\n                    };\n                }\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // WIP:\n            // Create tabs view of view markup elements inside a container\n            // Based off https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role\n            // -----------------------------------------------------------------------------\n\n            const viewMarkupParent = document.querySelectorAll('[data-view-markup-parent]');\n    \n            viewMarkupParent.forEach((parent) => {\n                parent.classList.add('view-markup-tabs');\n                \n                // Create tab nav\n                const tabNav = document.createElement('div');\n                tabNav.classList.add('view-markup-tabs__nav');\n                setAttributes(tabNav, {\n                    'role': 'tablist',\n                    'aria-label': 'View markup tabs'\n                });\n                parent.prepend(tabNav);\n\n                // Create tabs list element\n                const tabsList = document.createElement('div');\n                tabsList.classList.add('view-markup-tabs__tabs-list');\n                tabNav.prepend(tabsList);\n                \n                // Create tab item element(s)\n                const tabButton = document.createElement('div');\n                tabButton.classList.add('view-markup-tabs__tab-button');\n                \n                // Get title(s) if any\n                const vmEntry = parent.querySelectorAll('[data-view-markup-title]');\n                \n                // Setup tab list entry\n                vmEntry.forEach((entry, index) => {\n                    let tabButtonEntry = tabButton.cloneNode();\n                    let uniqueString = camelize(entry.getAttribute('data-view-markup-title').replace(/[^a-z0-9]/gi, ' '));\n                    setAttributes(tabButtonEntry, {\n                        'aria-selected': (index === 0) ? 'true' : 'false',\n                        'role': 'tab',\n                        'tabindex': (index === 0) ? '0' : '-1',\n                        'aria-controls': uniqueString + 'Panel',\n                        'id': uniqueString\n                    });\n                    tabButtonEntry.innerHTML = entry.getAttribute('data-view-markup-title');\n                    tabsList.appendChild(tabButtonEntry);\n                });\n\n                // Setup tab panel areas\n                const vmPanel = parent.querySelectorAll('.view-markup');\n                const tabButtonElement = parent.querySelectorAll('.view-markup-tabs__tab-button');\n                \n                vmPanel.forEach((panel, index) => {\n                    panel.classList.add('view-markup-tabs__panel');\n                    setAttributes(panel, {\n                        'role': 'tabpanel',\n                        'tabindex': '0',\n                        'aria-labelledby': tabButtonElement[index].getAttribute('id'),\n                        'id': tabButtonElement[index].getAttribute('id') + 'Panel'\n                    });\n\n                    if (index > 0) {\n                        panel.setAttribute('hidden', 'true');\n                    }\n                });\n\n                const tabs = parent.querySelectorAll('[role=\"tab\"]');\n                const tabList = parent.querySelector('[role=\"tablist\"]');\n\n                // Add a click event handler to each tab\n                tabs.forEach((tab) => {\n                    tab.addEventListener('click', changeTabs);\n                });\n                \n                // Enable arrow navigation between tabs in the tab list\n                let tabFocus = 0;\n                \n                tabList.addEventListener('keydown', (event) => {\n                    \n                    // Move right\n                    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n                        tabs[tabFocus].setAttribute('tabindex', '-1');\n                        \n                        if (event.key === 'ArrowRight') {\n                            tabFocus++;\n                            \n                            // If we're at the end, go to the start\n                            if (tabFocus >= tabs.length) {\n                                tabFocus = 0;\n                            }\n                        \n                        // Move left\n                        } else if (event.key === 'ArrowLeft') {\n                            tabFocus--;\n                            \n                            // If we're at the start, move to the end\n                            if (tabFocus < 0) {\n                                tabFocus = tabs.length - 1;\n                            }\n                        }\n\n                        tabs[tabFocus].setAttribute('tabindex', '0');\n                        tabs[tabFocus].focus();\n                    }\n\n                    if (event.key === 'Enter' || event.code === 'Space') {\n                        event.preventDefault();\n                        event.target.click();\n                    }\n                });\n\n                // Create tab title\n                let tabTitle = null;\n                if (parent.getAttribute('data-view-markup-parent') !== '') {\n                    let semiColonSplit = parent.getAttribute('data-view-markup-parent').split(';');\n                    \n                    semiColonSplit.forEach(function (item, index) {\n                        if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                            tabTitle = parseOption(semiColonSplit[index], 'title');\n                        }\n                    });\n                }\n                const tabsTitle = document.createElement('div');\n                tabsTitle.classList.add('view-markup-tabs__title');\n                tabsTitle.innerHTML = tabTitle;\n                tabNav.prepend(tabsTitle);\n            });\n\n            function changeTabs(event) {\n                const target = event.target;\n                const parent = target.closest('.view-markup-tabs__nav');\n                const grandparent = parent.closest('.view-markup-tabs');\n\n                // Remove all current selected tabs\n                parent\n                    .querySelectorAll('[aria-selected=\"true\"]')\n                    .forEach((tab) => tab.setAttribute('aria-selected', 'false'));\n\n                // Set this tab as selected\n                target.setAttribute('aria-selected', 'true');\n\n                // Hide all tab panels\n                grandparent\n                    .querySelectorAll('[role=\"tabpanel\"]')\n                    .forEach((panel) => panel.setAttribute('hidden', 'true'));\n\n                // Show the selected panel\n                grandparent.parentNode\n                    .querySelector(`#${target.getAttribute('aria-controls')}`)\n                    .removeAttribute('hidden');\n\n                event.target.focus();\n            }\n\n            function setAttributes(el, attrs) {\n                for(var key in attrs) {\n                    el.setAttribute(key, attrs[key]);\n                }\n            }\n\n            function camelize(str) {\n                return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n                if (+match === 0) return \"\";\n                    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n                });\n            }\n\n            // Spit out option value\n            function parseOption(splitOn, optionString) {\n                return splitOn.split(optionString + ':')[1].trim();\n            }\n        });\n    });\n})();"]}