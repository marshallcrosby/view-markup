{"version":3,"sources":["view-markup.js"],"names":["viewMarkupEl","document","querySelectorAll","length","options","elHtmlInitial","elHtmlStripped","elAmount","modal","createElement","markupContentHtmlString","parseOption","splitOn","optionString","split","trim","forEach","item","index","outerHTML","toString","el","optionPreserveAttr","getAttribute","semiColonSplit","undefined","leaveAttr","replace","modalBtn","classList","add","setAttribute","innerHTML","nodeName","toLowerCase","wrapperDivBody","body","prepend","appendChild","markupWrapperDiv","wrapper","parentNode","insertBefore","title","btnX","btnY","btnZ","btnPos","btnAppendTo","btnPrependTo","btnColor","scriptSelector","backdropRgb","renderInPage","marginBottom","marginTop","modalNav","currentElement","style","transform","zIndex","position","backgroundColor","elBtnParent","querySelector","closest","textStyle","textStyleString","textContent","head","highlightVersionNumb","css","js","themeCssDarkUrl","themeCssLightUrl","highlightCssUrl","localStorage","getItem","highlightScriptUrl","beautifyScriptUrl","loadExternalJs","scriptSrc","callback","getElementsByTagName","script","src","onload","url","link","id","rel","href","onreadystatechange","loadExternalCss","viewMarkupInitialize","modalDialog","wrapperEl","inPageBlock","inPageContent","inPageHeader","modalSetSize","readyAdjustments","inPageCodeJsBlock","jsToTidy","tidyJS","html_beautify","indent_size","getCachedSpaceTab","space_in_empty_paren","hljs","highlightElement","inPageCodeHtmlBlock","tidyHTML","remove","modalNavEl","modalPrevBtn","modalNextBtn","addEventListener","modalNavigate","this","modalNavigation","documentElement","allID","allFor","allAriaLabelledBy","x","y","currentFor","z","currentAriaLabelledBy","modalContent","modalCloseBtn","copyBtn","settingsBtn","settingsDropdown","textArea","preEl","htmlCodeEl","jsCodeEl","radio2Spaces","radio4Spaces","themeDark","themeLight","fontSize","htmlTab","jsTab","modalCodeHtmlEL","modalContentEl","modalTitleEl","modalSizeMedium","modalSizeLarge","modalCodeJsEL","checked","value","currentValue","setItem","currentShowingCode","currentCode","i","offsetWidth","offsetHeight","code","spaceTabRadio","tidyCode","applyTidyCodeToTextArea","applyCopyBtnState","navigator","clipboard","writeText","applyCleanHtml","applyCleanJs","focus","getElementById","event","isClickInside","contains","target","modalHide","e","key","currentViewMarkupIndex","optionDropdownClass","modalBtnEL","html","spaces","btnEl","activeElement","keyCode","shiftKey","firstTabStop","preventDefault","lastTabStop","focusableElements","Array","prototype","slice","call","modalShow","hasAttribute","cleanTitle","codeEl","setTabSpaces","tidyJs","checkedSpacesRadio","state","clickedButton","removeAttribute","focusedElementBeforeModal","direction","mapToModalBtnIndex","parseInt","mapToModalBtnSelector","mapToModalBtn","click","setTimeout","ariaExpandedAttr","toggle","scriptLinkage","dynamicPos","dynamicPosZIndex","urlParam","URLSearchParams","get","window","floatingButtonHolder","withModalEl","floatingModalBtn","positionModalBtns","load","btnElement","top","getBoundingClientRect","scrollY","left","docFrag","createDocumentFragment","firstChild","child","removeChild","replaceChild","unwrap","func","timer","clearTimeout","debounce"],"mappings":";;;;;;;AASA,MAAMA,aAAeC,SAASC,iBAAiB,uBAE/C,WACI,aAOA,GAAIF,aAAaG,OAAS,EAAG,CAEzB,IAGIC,EAHAC,EAAgB,GAChBC,EAAiB,GACjBC,EAAW,EAIXC,EAAQP,SAASQ,cAAc,OAE/BC,EAA0B,48MAsO9B,SAASC,EAAYC,EAASC,GAC1B,OAAOD,EAAQE,MAAMD,EAAe,KAAK,GAAGE,OAlOhDf,aAAagB,QAAQ,SAAUC,EAAMC,GAGjCb,EAAca,GAASlB,aAAakB,GAAOC,UAAUC,WA2MzD,SAAmBC,GACf,IAAIC,EAAqB,KAEzB,GAAID,EAAGE,aAAa,oBAAoBT,MAAM,KAAM,CAChD,IAAIU,EAAiBH,EAAGE,aAAa,oBAAoBT,MAAM,KAM/D,YAJ0DW,IAAtDD,EAAe,GAAGV,MAAM,uBAAuB,KAC/CQ,EAAqBE,EAAe,GAAGV,MAAM,uBAAuB,GAAGC,QAGhD,SAAvBO,GAlNHI,CAAU1B,aAAakB,MACxBZ,EAAeY,GAASb,EAAca,GAAOS,QAAQ,wBAAyB,KAIlF,IAAIC,EAAW3B,SAASQ,cAAc,UAMtC,GALAmB,EAASC,UAAUC,IAAI,0BACvBF,EAASG,aAAa,OAAQ,UAC9BH,EAASI,UAAY,+DAG+B,SAAhDhC,aAAakB,GAAOe,SAASC,eAA6E,SAAhDlC,aAAakB,GAAOe,SAASC,cAA2B,CAClH,IAAIC,EAAiBlC,SAASQ,cAAc,OAC5C0B,EAAeN,UAAUC,IAAI,eAC7BK,EAAeN,UAAUC,IAAI,qBAC7B7B,SAASmC,KAAKC,QAAQF,GACtBA,EAAeG,YAAYV,OACxB,CAGH,IAAIW,EAAmBtC,SAASQ,cAAc,OAC9C8B,EAAiBV,UAAUC,IAAI,eAC/BS,EAAiBP,UAAY,6CA06BhBX,EAz6BDrB,aAAakB,GAy6BRsB,EAz6BgBD,EA06BrClB,EAAGoB,WAAWC,aAAaF,EAASnB,GACpCmB,EAAQF,YAAYjB,GA16BhBkB,EAAiBF,QAAQT,GAw6BjC,IAAqBP,EAAImB,EAr6BrBpC,EAAU,CACNuC,MAAO,KACPC,KAAM,KACNC,KAAM,KACNC,KAAM,KACNC,OAAQ,KACRC,YAAa,KACbC,aAAc,KACdC,SAAU,KACVC,eAAgB,KAChBC,YAAa,KACbC,aAAc,KACdC,aAAc,KACdC,UAAW,KACXC,SAAU,MAId,IAAIC,EAAiBzD,aAAakB,GAClC,GAAwD,KAApDuC,EAAelC,aAAa,oBAA4B,CACxD,IAAIC,EAAiBxB,aAAakB,GAAOK,aAAa,oBAAoBT,MAAM,KAGhFU,EAAeR,QAAQ,SAAUC,EAAMC,QACcO,IAA7CD,EAAeN,GAAOJ,MAAM,UAAU,KACtCV,EAAQuC,MAAQhC,EAAYa,EAAeN,GAAQ,eAGNO,IAA7CD,EAAeN,GAAOJ,MAAM,UAAU,KACtCV,EAAQwC,KAAOjC,EAAYa,EAAeN,GAAQ,eAGLO,IAA7CD,EAAeN,GAAOJ,MAAM,UAAU,KACtCV,EAAQyC,KAAOlC,EAAYa,EAAeN,GAAQ,eAGLO,IAA7CD,EAAeN,GAAOJ,MAAM,UAAU,KACtCV,EAAQ0C,KAAOnC,EAAYa,EAAeN,GAAQ,eAGHO,IAA/CD,EAAeN,GAAOJ,MAAM,YAAY,KACxCV,EAAQ2C,OAASpC,EAAYa,EAAeN,GAAQ,iBAGCO,IAArDD,EAAeN,GAAOJ,MAAM,kBAAkB,KAC9CV,EAAQ4C,YAAcrC,EAAYa,EAAeN,GAAQ,uBAGHO,IAAtDD,EAAeN,GAAOJ,MAAM,mBAAmB,KAC/CV,EAAQ6C,aAAetC,EAAYa,EAAeN,GAAQ,wBAGTO,IAAjDD,EAAeN,GAAOJ,MAAM,cAAc,KAC1CV,EAAQ8C,SAAWvC,EAAYa,EAAeN,GAAQ,mBAGGO,IAAzDD,EAAeN,GAAOJ,MAAM,sBAAsB,KAClDV,EAAQ+C,eAAiBxC,EAAYa,EAAeN,GAAQ,2BAGRO,IAApDD,EAAeN,GAAOJ,MAAM,iBAAiB,KAC7CV,EAAQgD,YAAczC,EAAYa,EAAeN,GAAQ,sBAGHO,IAAtDD,EAAeN,GAAOJ,MAAM,mBAAmB,KAC/CV,EAAQiD,aAAe1C,EAAYa,EAAeN,GAAQ,kBAC1DuC,EAAe1B,aAAa,kCAAmC,UAGVN,IAArDD,EAAeN,GAAOJ,MAAM,kBAAkB,KAC9CV,EAAQkD,aAAe3C,EAAYa,EAAeN,GAAQ,uBAGRO,IAAlDD,EAAeN,GAAOJ,MAAM,eAAe,KAC3CV,EAAQmD,UAAY5C,EAAYa,EAAeN,GAAQ,oBAGNO,IAAjDD,EAAeN,GAAOJ,MAAM,cAAc,KAC1CV,EAAQoD,SAAW7C,EAAYa,EAAeN,GAAQ,gBAK1Dd,EAAQuC,OACRf,EAASG,aAAa,yBAA0B3B,EAAQuC,OAcxDvC,EAAQwC,OACRhB,EAAS8B,MAAMC,UAAY,cAAgBvD,EAAQwC,KAAO,KAI1DxC,EAAQyC,OACRjB,EAAS8B,MAAMC,UAAY,cAAgBvD,EAAQyC,KAAO,KAI1DzC,EAAQwC,MAAQxC,EAAQyC,OACxBjB,EAAS8B,MAAMC,UAAY,cAAgBvD,EAAQwC,KAAO,gBAAkBxC,EAAQyC,KAAO,KAI3FzC,EAAQ0C,OACRlB,EAAS8B,MAAME,OAASxD,EAAQ0C,MAIhC1C,EAAQ2C,SACRnB,EAAS8B,MAAMG,SAAWzD,EAAQ2C,QAIlC3C,EAAQ8C,WACRtB,EAAS8B,MAAMI,gBAAkB1D,EAAQ8C,UAIzC9C,EAAQ4C,cACRe,YAAc9D,SAAS+D,cAAc5D,EAAQ4C,aAC7Ce,YAAYzB,YAAYV,IAIxBxB,EAAQ6C,eACRc,YAAc9D,SAAS+D,cAAc5D,EAAQ6C,cAC7Cc,YAAY1B,QAAQT,IAIpBxB,EAAQ+C,gBACRvB,EAASG,aAAa,mCAAoC3B,EAAQ+C,gBAIlE/C,EAAQgD,aACRxB,EAASG,aAAa,gCAAiC3B,EAAQgD,aAI/DhD,EAAQiD,cACRzB,EAASG,aAAa,2BAA4B,QAI7B,SAArB3B,EAAQoD,UACR5B,EAASG,aAAa,6BAA8B,QAIpD3B,EAAQkD,eACRrC,EAAKgD,QAAQ,gBAAgBP,MAAMJ,aAAelD,EAAQkD,cAI1DlD,EAAQmD,YACRtC,EAAKgD,QAAQ,gBAAgBP,MAAMH,UAAYnD,EAAQmD,cAuCnE,IAAIW,EAAYjE,SAASQ,cAAc,SACvCyD,EAAUnC,aAAa,KAAM,cAG7B,IAAIoC,EAAkB,0jjBAItBD,EAAUE,YAAcD,EAGxBlE,SAASoE,KAAK/B,YAAY4B,GAa1B,IAAII,EAAuB,CACvBC,IAAK,SACLC,GAAI,UAEJC,EAAkB,uDAAyDH,EAAqBC,IAAM,gCACtGG,EAAmB,uDAAyDJ,EAAqBC,IAAM,yBAEvGI,EAAiE,OAA9CC,aAAaC,QAAQ,sBAA+E,SAA9CD,aAAaC,QAAQ,qBAAmCJ,EAAkBC,EACnJI,EAAqB,uDAAyDR,EAAqBE,GAAK,oBAIxGO,EAAoB,sDADE,SAC4E,wBAkBtG,SAASC,EAAeC,EAAWC,GAC/B,IAAIb,EAAOpE,SAASkF,qBAAqB,QAAQ,GAC7CC,EAASnF,SAASQ,cAAc,UAEpC2E,EAAOC,IAAMJ,EAEbZ,EAAK/B,YAAY8C,GACjBA,EAAOE,OAASJ,GAIpB,SAAyBK,EAAKL,GAC1B,IAAIb,EAAOpE,SAASkF,qBAAqB,QAAQ,GAC7CK,EAAOvF,SAASQ,cAAc,QAElC+E,EAAKC,GAAK,iBACVD,EAAKE,IAAM,aACXF,EAAKG,KAAOJ,EAEZC,EAAKI,mBAAqBV,EAC1BM,EAAKF,OAASJ,EACdb,EAAK/B,YAAYkD,GAhCrBK,CAAgBlB,GAGhBK,EAAeD,EAIf,WACIC,EAAeF,EAAoBgB,KAoCvCtF,EAAMqB,UAAUC,IAAI,qBACpBtB,EAAMuB,aAAa,KAAM,SACzBvB,EAAMuB,aAAa,kBAAmB,cACtCvB,EAAMuB,aAAa,cAAc,GACjCvB,EAAMuB,aAAa,OAAQ,UAC3BvB,EAAMuB,aAAa,WAAY,MAG/B,IAAIgE,EAAc9F,SAASQ,cAAc,OAGzCsF,EAAYlE,UAAUC,IAAI,6BAC1BtB,EAAM8B,YAAYyD,GAGlBA,EAAY/D,UAAYtB,EACxBT,SAASmC,KAAKE,YAAY9B,GAG1B,IAAIwF,EAAY/F,SAASC,iBAAiB,gBAC1C8F,EAAUhF,QAAQ,SAAUC,GACxB,GAAIA,EAAK+C,cAAc,8BAA+B,CAClD,IAAIiC,EAAchG,SAASQ,cAAc,OACzCwF,EAAYpE,UAAUC,IAAI,6BAC1Bb,EAAKqB,YAAY2D,GACjBA,EAAYjE,UAAYtB,KAKhC,IAAIwF,EAAgBjG,SAASC,iBAAiB,oDAC1CiG,EAAelG,SAASC,iBAAiB,mDACzCkG,EAAenG,SAASC,iBAAiB,0BA6B7C,SAASmG,IACLL,EAAUhF,QAAQ,SAAUC,EAAMC,GAG9B,GAAID,EAAK+C,cAAc,+BAAiC/C,EAAK+C,cAAc,sCAAuC,CAC9G,IAAIsC,EAAoBrF,EAAK+C,cAAc,0BACvCb,EAAiBlC,EAAK+C,cAAc,sCAAsCzC,aAAa,oCAEvFgF,EADgBtG,SAAS+D,cAAcb,GACdhC,UAAUC,WAAWO,QAAQ,YAAa,IAEnE6E,EAASC,cAAcF,EAAU,CACjCG,YAAaC,IACbC,sBAAsB,IAG1BN,EAAkBlC,YAAcoC,EAChCK,KAAKC,iBAAiBR,GAEgB,KAAlCA,EAAkBlC,aAClBkC,EAAkBrC,QAAQ,yBAAyBpC,UAAUC,IAAI,6BAKzE,GAAIb,EAAK+C,cAAc,8BAA+B,CAClD,IAAI+C,EAAsB9F,EAAK+C,cAAc,4BACzCgD,EAAWP,cAAcnG,EAAeY,GAAQ,CAChDwF,YAAaC,IACbC,sBAAsB,IAG1BG,EAAoB3C,YAAc4C,EAClCH,KAAKC,iBAAiBC,GAGtB9F,EAAK+C,cAAc,8BAA8BiD,YAsoB7D,WAGI,IAAIC,EAAajH,SAAS+D,cAAc,qBACpCpC,EAAW3B,SAASC,iBAAiB,2BAQzC,GANAK,EAAWqB,EAASzB,OAEpByB,EAASZ,QAAQ,SAAUC,EAAMC,GAC7BD,EAAKc,aAAa,6BAA8Bb,KAGhDX,EAAW,EAAG,CAGd,IAAI4G,EAAe3G,EAAMwD,cAAc,0BAGnCoD,EAAe5G,EAAMwD,cAAc,0BAGvCmD,EAAaE,iBAAiB,QAAS,WACnCC,EAAcC,KAAM,UAIxBH,EAAaC,iBAAiB,QAAS,WACnCC,EAAcC,KAAM,eAKxBL,EAAWD,SAGE,OAAbzD,IAGA0D,EAAWD,SAvqBfO,GAGAvH,SAASwH,gBAAgB5F,UAAUC,IAAI,wBAtE3CoE,EAAclF,QAAQ,SAAUC,EAAMC,GAClCiF,EAAajF,GAAO+F,SACpBb,EAAalF,GAAO+F,SAEpB,IAAIS,EAAQzG,EAAKf,iBAAiB,QAC9ByH,EAAS1G,EAAKf,iBAAiB,SAC/B0H,EAAoB3G,EAAKf,iBAAiB,qBAG9C,IAAK,IAAI2H,EAAI,EAAGA,EAAIH,EAAMvH,OAAQ0H,IAC9BH,EAAMG,GAAGpC,GAAKiC,EAAMG,GAAGpC,GAAK,IAAMvE,EAItC,IAAK,IAAI4G,EAAI,EAAGA,EAAIH,EAAOxH,OAAQ2H,IAAK,CACpC,IAAIC,EAAaJ,EAAOG,GAAGvG,aAAa,OACxCoG,EAAOG,GAAG/F,aAAa,MAAOgG,EAAa,IAAM7G,GAIrD,IAAK,IAAI8G,EAAI,EAAGA,EAAIJ,EAAkBzH,OAAQ6H,IAAK,CAC/C,IAAIC,EAAwBL,EAAkBI,GAAGzG,aAAa,mBAC9DqG,EAAkBI,GAAGjG,aAAa,kBAAmBkG,EAAwB,IAAM/G,MA0D3F,IAAIgH,EAAejI,SAASC,iBAAiB,yBACzCiI,EAAgBlI,SAASC,iBAAiB,2BAC1CkI,EAAUnI,SAASC,iBAAiB,0BACpCmI,EAAcpI,SAASC,iBAAiB,8BACxCoI,EAAmBrI,SAASC,iBAAiB,mCAC7CqI,EAAWtI,SAASC,iBAAiB,iCACrCsI,EAAQvI,SAASC,iBAAiB,qBAClCuI,EAAaxI,SAASC,iBAAiB,4BACvCwI,EAAWzI,SAASC,iBAAiB,0BACrCyI,EAAe1I,SAASC,iBAAiB,0BACzC0I,EAAe3I,SAASC,iBAAiB,0BACzC2I,EAAY5I,SAASC,iBAAiB,4BACtC4I,EAAa7I,SAASC,iBAAiB,6BACvC6I,EAAW9I,SAASC,iBAAiB,2BACrC8I,EAAU/I,SAASC,iBAAiB,mCACpC+I,EAAQhJ,SAASC,iBAAiB,iCAIlCgJ,GAHkBjJ,SAASC,iBAAiB,wBAG1BD,SAAS+D,cAAc,gDACzCmF,EAAiBlJ,SAAS+D,cAAc,4CACxCoF,EAAenJ,SAAS+D,cAAc,0CACtCqF,EAAkBpJ,SAASC,iBAAiB,6BAC5CoJ,EAAiBrJ,SAASC,iBAAiB,4BAC3CqJ,EAAgBtJ,SAASC,iBAAiB,6CAoD9C,GAtCgD,OAA5C0E,aAAaC,QAAQ,oBAA2E,MAA5CD,aAAaC,QAAQ,mBACzE+D,EAAa5H,QAAQ,SAAUC,GAC3BA,EAAKuI,SAAU,IAGnBb,EAAa3H,QAAQ,SAAUC,GAC3BA,EAAKuI,SAAU,IAM2B,OAA9C5E,aAAaC,QAAQ,sBAA+E,SAA9CD,aAAaC,QAAQ,qBAC3EgE,EAAU7H,QAAQ,SAAUC,GACxBA,EAAKuI,SAAU,KAGnBV,EAAW9H,QAAQ,SAAUC,GACzBA,EAAKuI,SAAU,IAEnBvJ,SAASwH,gBAAgB5F,UAAUC,IAAI,+BAKM,OAA7C8C,aAAaC,QAAQ,qBAA6E,WAA7CD,aAAaC,QAAQ,oBAC1EwE,EAAgBrI,QAAQ,SAAUC,GAC9BA,EAAKuI,SAAU,KAGnBF,EAAetI,QAAQ,SAAUC,GAC7BA,EAAKuI,SAAU,IAEnBvJ,SAASmC,KAAKP,UAAUC,IAAI,8BAKc,OAA1C8C,aAAaC,QAAQ,iBACrBkE,EAAS/H,QAAQ,SAAUC,GACvBA,EAAKwI,MAAQ,WAEd,CACH,IAAIC,EAAe9E,aAAaC,QAAQ,iBAExCkE,EAAS/H,QAAQ,SAAUC,GACvBA,EAAKwI,MAAQ7E,aAAaC,QAAQ,mBAGtC2D,EAAMxH,QAAQ,SAAUC,EAAMC,GAC1BD,EAAKyC,MAAMqF,SAAWW,EAAe,OAK7CX,EAAS/H,QAAQ,SAAUC,EAAMC,GAC7BD,EAAKoG,iBAAiB,SAAU,WAC5B,IAAIqC,EAAezI,EAAKwI,MAExB7E,aAAa+E,QAAQ,gBAAiBD,GAEtCX,EAAS/H,QAAQ,SAAUC,EAAMC,GAC7BD,EAAKwI,MAAQC,IAGjBlB,EAAMxH,QAAQ,SAAUC,EAAMC,GAC1BD,EAAKyC,MAAMqF,SAAWW,EAAe,WAajDtB,EAAQpH,QAAQ,SAAUC,EAAMC,GAC5BD,EAAKoG,iBAAiB,QAAS,WAC3B,IAAIuC,EAEAC,EADiB5I,EAAKgD,QAAQ,yBACD/D,iBAAiB,sBAElD,IAAK,IAAI4J,EAAI,EAAGA,EAAID,EAAY1J,OAAQ2J,IAChCD,EAAYC,GAAGC,YAAc,GAAKF,EAAYC,GAAGE,aAAe,IAChEJ,EAAqBC,EAAYC,KA4UjD,SAAiCG,EAAMC,EAAehJ,GAClD,IAAIiJ,EAAW1D,cAAcwD,EAAM,CAAEvD,YAAawD,EAAetD,sBAAsB,IACvF2B,EAASrH,GAAOkD,YAAc+F,EA1U1BC,CAAwBR,EAAmBxF,YAAauC,IAAqBzF,GAE7EmJ,EAAkB,YAElBC,UAAUC,UAAUC,UAAUjC,EAASrH,GAAOuI,WAKtDd,EAAa3H,QAAQ,SAAUC,EAAMC,GACjCD,EAAKoG,iBAAiB,SAAU,YACP,IAAjBE,KAAKiC,UAGL5E,aAAa+E,QAAQ,kBAAmB,GAExCf,EAAa5H,QAAQ,SAAUC,EAAMC,GACjCD,EAAKuI,SAAU,IAGnBb,EAAa3H,QAAQ,SAAUC,EAAMC,GACjCD,EAAKuI,SAAU,IAInBf,EAAWzH,QAAQ,SAAUC,GACzBwJ,EAAexJ,EAAKmD,YAAa,EAAG,KAAMnD,KAI9CyJ,EAAa,EAAG,MAAM,EAAMhC,GAG5B2B,EAAkB,WAElB9C,KAAKoD,aAMjB/B,EAAa5H,QAAQ,SAAUC,EAAMC,GACjCD,EAAKoG,iBAAiB,SAAU,YACP,IAAjBE,KAAKiC,UAGL5E,aAAa+E,QAAQ,kBAAmB,GAExChB,EAAa3H,QAAQ,SAAUC,EAAMC,GACjCD,EAAKuI,SAAU,IAGnBZ,EAAa5H,QAAQ,SAAUC,EAAMC,GACjCD,EAAKuI,SAAU,IAInBf,EAAWzH,QAAQ,SAAUC,GACzBwJ,EAAexJ,EAAKmD,YAAa,EAAG,KAAMnD,KAI9CyJ,EAAa,EAAG,MAAM,EAAMhC,GAG5B2B,EAAkB,WAElB9C,KAAKoD,aAOjB9B,EAAU7H,QAAQ,SAAUC,GACxBA,EAAKoG,iBAAiB,SAAU,YACP,IAAjBE,KAAKiC,UAELV,EAAW9H,QAAQ,SAAUC,EAAMC,GAC/BD,EAAKuI,SAAU,IAGnBX,EAAU7H,QAAQ,SAAUC,EAAMC,GAC9BD,EAAKuI,SAAU,IAInB5E,aAAa+E,QAAQ,oBAAqB,QAC1C1J,SAASwH,gBAAgB5F,UAAUoF,OAAO,8BAC1ChH,SAAS2K,eAAe,kBAAkBjF,KAAOlB,OAM7DqE,EAAW9H,QAAQ,SAAUC,GACzBA,EAAKoG,iBAAiB,SAAU,YACP,IAAjBE,KAAKiC,UAELX,EAAU7H,QAAQ,SAAUC,EAAMC,GAC9BD,EAAKuI,SAAU,IAGnBV,EAAW9H,QAAQ,SAAUC,EAAMC,GAC/BD,EAAKuI,SAAU,IAInB5E,aAAa+E,QAAQ,oBAAqB,SAC1C1J,SAASwH,gBAAgB5F,UAAUC,IAAI,8BACvC7B,SAAS2K,eAAe,kBAAkBjF,KAAOjB,OAM7D2E,EAAgBrI,QAAQ,SAAUC,GAC9BA,EAAKoG,iBAAiB,SAAU,YACP,IAAjBE,KAAKiC,UAELF,EAAetI,QAAQ,SAAUC,EAAMC,GACnCD,EAAKuI,SAAU,IAGnBH,EAAgBrI,QAAQ,SAAUC,EAAMC,GACpCD,EAAKuI,SAAU,IAInB5E,aAAa+E,QAAQ,mBAAoB,UACzC1J,SAASmC,KAAKP,UAAUoF,OAAO,kCAM3CqC,EAAetI,QAAQ,SAAUC,GAC7BA,EAAKoG,iBAAiB,SAAU,YACP,IAAjBE,KAAKiC,UAELH,EAAgBrI,QAAQ,SAAUC,EAAMC,GACpCD,EAAKuI,SAAU,IAGnBF,EAAetI,QAAQ,SAAUC,EAAMC,GACnCD,EAAKuI,SAAU,IAInB5E,aAAa+E,QAAQ,mBAAoB,SACzC1J,SAASmC,KAAKP,UAAUC,IAAI,kCAaxCkH,EAAQhI,QAAQ,SAAUC,EAAMC,GAC5BD,EAAKoG,iBAAiB,QAAS,WAC3BgD,EAAkB,WAClB9C,KAAKtD,QAAQ,yBAAyBpC,UAAUoF,OAAO,mCAI/DgC,EAAMjI,QAAQ,SAAUC,EAAMC,GAC1BD,EAAKoG,iBAAiB,QAAS,WAC3BgD,EAAkB,WAClB9C,KAAKtD,QAAQ,yBAAyBpC,UAAUC,IAAI,mCAe5DtB,EAAM6G,iBAAiB,YAAa,SAAUwD,GAC1C,IAAIC,GAAgB,EAEpB5C,EAAalH,QAAQ,SAAUC,GACtBA,EAAK8J,SAASF,EAAMG,UACrBF,GAAgB,MAInBA,GAAiBvD,KAAK1F,UAAUkJ,SAAS,+BAC1CE,MAKR9C,EAAcnH,QAAQ,SAAUC,GAC5BA,EAAKoG,iBAAiB,QAAS,WAC3B4D,QAKRzK,EAAM6G,iBAAiB,UAAW,SAAU6D,GAG5B,WAFFA,EAAEC,KAEYlL,SAASwH,gBAAgB5F,UAAUkJ,SAAS,iCAChEE,MAYR,IA6GIG,EA7GAC,EAAsB,0CA2C1B,SAASvF,IACLxF,EAAeU,QAAQ,SAAUC,EAAMC,GAGnC,IACIoK,GADctL,aAAakB,GAAO+C,QAAQ,iBAAmBjE,aAAakB,IACjD8C,cAAc,2BA8DnD,IAAsBuH,EAAMC,EAAQC,EAAdF,EA3DDtK,EA2DOuK,EA3DD,GA2DSC,EA3DNH,GA4DpBjE,iBAAiB,QAAS,WA4B5B,GAzBA+D,EAAyB7D,KAAKhG,aAAa,8BAK3CkJ,EAAec,EAAMC,EAAQjE,KAAM2B,GAGnCwB,EAAac,EAAQjE,KAAM,KAAMgC,GAEjCJ,EAAetH,UAAUoF,OAAO,+BAEhCyB,EAAS1H,QAAQ,SAAUC,GACE,KAArBA,EAAKmD,YACL+E,EAAetH,UAAUC,IAAI,6BAE7BqH,EAAetH,UAAUoF,OAAO,+BAqDhD,WACIhH,SAASwH,gBAAgB5F,UAAUC,IAAI,gCACvCtB,EAAMqB,UAAUC,IAAI,8BAGY7B,SAASyL,cAGzClL,EAAM6G,iBAAiB,UA2BvB,SAAoB6D,GAGE,IAAdA,EAAES,UAGET,EAAEU,SACE3L,SAASyL,gBAAkBG,IAC3BX,EAAEY,iBACFC,EAAYpB,SAKZ1K,SAASyL,gBAAkBK,IAC3Bb,EAAEY,iBACFD,EAAalB,YAxC7B,IAaIqB,EAAoBxL,EAAMN,iBAZ1B,6JAiBA2L,GAFJG,EAAoBC,MAAMC,UAAUC,MAAMC,KAAKJ,IAEV,GACjCD,EAAcC,EAAkBA,EAAkB7L,OAAS,GAG/DK,EAAMmK,QAlFF0B,GAEAhC,EAAkB,WAGdoB,EAAMa,aAAa,0BAA2B,CAC9C,IAAIC,EAAad,EAAMlK,aAAa,0BAA0BI,QAAQ,WAAY,MAClFyH,EAAahF,YAAcmI,OAE3BnD,EAAahF,YAAc,iBAI3BqH,EAAMa,aAAa,iCACnB9L,EAAMkD,MAAMI,gBAAkB,QAAU1D,EAAQgD,YAAc,QAE9D5C,EAAMkD,MAAMI,gBAAkB,OAhGtCuC,IAIJ,SAASoE,EAAec,EAAMC,EAAQC,EAAOe,GACzC,IAAIxF,EAAWP,cAAc8E,EAAM,CAAE7E,YAAaC,IAAqBC,sBAAsB,IAE7F4F,EAAOpI,YAAc4C,EAErBH,KAAKC,iBAAiB0F,GAI1B,SAAS9B,EAAac,EAAQC,EAAOgB,EAAc/D,GAC/C,IAAK,IAAIoB,EAAI,EAAGA,EAAIpB,EAASvI,OAAQ2J,IACjC,QAAoBrI,IAAhBiH,EAASoB,GAAkB,CAC3B,IAAIvD,EAEJ,GAAIkG,EACAlG,EAAWmC,EAASoB,GAAG1F,iBACpB,GAAc,OAAVqH,GAAkBA,EAAMa,aAAa,oCAAqC,CAEjF/F,EADoBtG,SAAS+D,cAAcyH,EAAMlK,aAAa,qCACrCJ,UAAUC,WAAWO,QAAQ,YAAa,IAGvE+G,EAASoB,GAAG1F,YAAc,GAE1B,IAAIsI,EAASjG,cAAcF,EAAU,CAAEG,YAAaC,IAAqBC,sBAAsB,IAE/F8B,EAASoB,GAAG1F,YAAcsI,EAE1B7F,KAAKC,iBAAiB4B,EAASoB,KAM3C,SAASnD,IACL,IAAIgG,EAMJ,OAJIA,EAD4C,OAA5C/H,aAAaC,QAAQ,oBAC6B,IAA5B8D,EAAa,GAAGa,QAAoB,EAAI,EAEzC5E,aAAaC,QAAQ,mBA4DlD,SAASwF,EAAkBuC,GACvB,IAAIC,EAAgB5M,SAASC,iBAAiB,gCAChC,aAAV0M,EACAC,EAAc7L,QAAQ,SAAUC,GAC5BA,EAAKmD,YAAc,SACnBnD,EAAKc,aAAa,WAAY,cAEjB,YAAV6K,GACPxE,EAAQpH,QAAQ,SAAUC,GACtBA,EAAKmD,YAAc,OACnBnD,EAAK6L,gBAAgB,cA4EjC,SAAS7B,IACLhL,SAASwH,gBAAgB5F,UAAUoF,OAAO,gCAC1CzG,EAAMqB,UAAUoF,OAAO,8BACvBoD,EAAkB,WAClB0C,0BAA0BpC,QAI9B,SAASrD,EAAcjG,EAAI2L,GACvB,IAAIC,EAEc,SAAdD,EACAC,EAA2D,IAArCC,SAAS9B,GAAiC8B,SAAS3M,GAAY,EAAI2M,SAAS9B,GAA0B,EACvG,SAAd4B,IACPC,EAAsBC,SAAS9B,KAA4B8B,SAAS3M,GAAY,EAAK,EAAI2M,SAAS9B,GAA0B,GAGhI,IAAI+B,EAAwB,gCAAkCF,EAAqB,KAC/EG,EAAgBnN,SAAS+D,cAAcmJ,EAAsB/L,YAEjEnB,SAASwH,gBAAgB5F,UAAUC,IAAI,4CAEvCsL,EAAcC,QACdD,EAAczC,QAEd2C,WAAW,WACPrN,SAASwH,gBAAgB5F,UAAUoF,OAAO,6CAC3C,KA1QPoB,EAAYrH,QAAQ,SAAUC,EAAMC,GAChCD,EAAKoG,iBAAiB,QAAS,WAC3B,IAAIkG,EAAmBhG,KAAKhG,aAAa,iBAEzCgG,KAAKxF,aAAa,gBAAuC,SAArBwL,EAA+B,QAAU,QAC7EjF,EAAiBpH,GAAOW,UAAU2L,OAAOnC,OAKjDpL,SAASoH,iBAAiB,YAAa,SAAUwD,GAC7CvC,EAAiBtH,QAAQ,SAAUC,EAAMC,GACrC,IAAI4J,EAAgB7J,EAAK8J,SAASF,EAAMG,QAGnCH,EAAMG,OAAOnJ,UAAUkJ,SAAS,+BACjC9J,EAAKY,UAAUkJ,SAASM,IACvBP,IAEDzC,EAAYnH,GAAOa,aAAa,iBAAiB,GACjDd,EAAKY,UAAUoF,OAAOoE,QAuVlC,IAAIoC,EAAgBxN,SAAS2K,eAAe,kBACxCpH,GAAW,KACXkK,GAAa,KACbC,GAAmB,KAEvB,GAAIF,EAAe,CACf,IAAIG,EAAW,IAAIC,gBAAgBJ,EAAclM,aAAa,OAAOT,MAAM,KAAK,IAChF0C,GAAWoK,EAASE,IAAI,aACxBJ,GAAaE,EAASE,IAAI,eAC1BH,GAAmBC,EAASE,IAAI,WAGb,OAAfJ,IACAK,OAAO1G,iBAAiB,OAAQ,KAG5B,IAAI2G,EAAuB/N,SAASQ,cAAc,OAClDuN,EAAqBnM,UAAUC,IAAI,2BAEV,OAArB6L,KACAK,EAAqBtK,MAAME,OAAS+J,GAAiBvM,YAGzDnB,SAASmC,KAAKE,YAAY0L,GAG1B,IAAIC,EAAchO,SAASC,iBAAiB,6DAGxCgO,EAAmBjO,SAASC,iBAAiB,2BAGjD,SAASiO,EAAkBC,GAGvBH,EAAYjN,QAAS,CAACC,EAAM6I,KACxB,IAAIuE,EAAaH,EAAiBpE,GAElCuE,EAAW3K,MAAM4K,IAAOrN,EAAKsN,wBAAwBD,IAAMP,OAAOS,QAAW,KAC7EH,EAAW3K,MAAM+K,KAAOxN,EAAKsN,wBAAwBE,KAAO,KAE/C,SAATL,GACAJ,EAAqB1L,YAAY+L,KAMtBpO,SAASC,iBAAiB,2BAChCc,QAAUC,IACvBA,EAAKgG,WAITjB,EAAUhF,QAAUC,KA9EhC,SAAgBuB,GACZ,IAAIkM,EAAUzO,SAAS0O,yBAEvB,KAAOnM,EAAQoM,YAAY,CACvB,IAAIC,EAAQrM,EAAQsM,YAAYtM,EAAQoM,YACxCF,EAAQpM,YAAYuM,GAGxBrM,EAAQC,WAAWsM,aAAaL,EAASlM,GAuE7BwM,CAAO/N,KAIXkN,EAAkB,QAGlBJ,OAAO1G,iBAAiB,SA1EpC,SAAkB4H,GACd,IAAIC,EAEJ,OAAQrE,IACAqE,GACAC,aAAaD,GAEjBA,EAAQ5B,WAAW2B,EAAM,IAAMpE,IAmEOuE,CAAU,KACxCjB,WA9tCxB","sourcesContent":["/*!\n    * View markup v1.1.4\n    * Plugin that makes it easy for developers to view and copy the html needed for a component.\n    *\n    * Copyright 2021-2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\n// Cache view markup elements immediately.\nconst viewMarkupEl = document.querySelectorAll('[data-view-markup]');\n\n(function () {\n    \"use strict\"\n\n    // -----------------------------------------------------------------------------\n    // Setup outer div and modal btn (with options)\n    // -----------------------------------------------------------------------------\n\n\n    if (viewMarkupEl.length > 0) {\n        \n        let elHtmlInitial = [];\n        let elHtmlStripped = [];\n        let elAmount = 0;\n        let options;\n\n        // Declare base modal element right away to add some data attributes to\n        let modal = document.createElement('div');\n\n        let markupContentHtmlString = `//import _view-markup-modal.html`;\n\n        viewMarkupEl.forEach(function (item, index) {\n            \n            // Cache all viewable markup elements\n            elHtmlInitial[index] = viewMarkupEl[index].outerHTML.toString();\n\n            // Remove the view markup specific data attributes\n            if (!leaveAttr(viewMarkupEl[index])) {\n                elHtmlStripped[index] = elHtmlInitial[index].replace(/data-view-markup=\".*\"/, '');\n            }\n            \n            // Create modal button\n            let modalBtn = document.createElement('button');\n            modalBtn.classList.add('view-markup__modal-btn');\n            modalBtn.setAttribute('type', 'button');\n            modalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                \n            // if <html> or <body> do things a bit differently\n            if (viewMarkupEl[index].nodeName.toLowerCase()  === 'body' || viewMarkupEl[index].nodeName.toLowerCase()  === 'html') {\n                let wrapperDivBody = document.createElement('div');\n                wrapperDivBody.classList.add('view-markup');\n                wrapperDivBody.classList.add('view-markup--body');\n                document.body.prepend(wrapperDivBody);\n                wrapperDivBody.appendChild(modalBtn);\n            } else {\n                \n                // Wrap in div\n                let markupWrapperDiv = document.createElement('div');\n                markupWrapperDiv.classList.add('view-markup');\n                markupWrapperDiv.innerHTML = '<div class=\"view-markup__highlight\"></div>';\n                wrapElement(viewMarkupEl[index], markupWrapperDiv);\n                markupWrapperDiv.prepend(modalBtn);\n            }\n            \n            options = {\n                title: null,\n                btnX: null,\n                btnY: null,\n                btnZ: null,\n                btnPos: null,\n                btnAppendTo: null,\n                btnPrependTo: null,\n                btnColor: null,\n                scriptSelector: null,\n                backdropRgb: null,\n                renderInPage: null,\n                marginBottom: null,\n                marginTop: null,\n                modalNav: null\n            };\n                \n            // Apply some options to toggle if available\n            let currentElement = viewMarkupEl[index];\n            if (currentElement.getAttribute('data-view-markup') !== '') {\n                let semiColonSplit = viewMarkupEl[index].getAttribute('data-view-markup').split(';');\n                \n                // Assign option values if any\n                semiColonSplit.forEach(function (item, index) {\n                    if (semiColonSplit[index].split('title:')[1] !== undefined) {\n                        options.title = parseOption(semiColonSplit[index], 'title');\n                    }\n\n                    if (semiColonSplit[index].split('btn-x:')[1] !== undefined) {\n                        options.btnX = parseOption(semiColonSplit[index], 'btn-x');\n                    }\n                    \n                    if (semiColonSplit[index].split('btn-y:')[1] !== undefined) {\n                        options.btnY = parseOption(semiColonSplit[index], 'btn-y');\n                    }\n                    \n                    if (semiColonSplit[index].split('btn-z:')[1] !== undefined) {\n                        options.btnZ = parseOption(semiColonSplit[index], 'btn-z');\n                    }\n                    \n                    if (semiColonSplit[index].split('btn-pos:')[1] !== undefined) {\n                        options.btnPos = parseOption(semiColonSplit[index], 'btn-pos');\n                    }\n                    \n                    if (semiColonSplit[index].split('btn-append-to:')[1] !== undefined) {\n                        options.btnAppendTo = parseOption(semiColonSplit[index], 'btn-append-to');\n                    }\n                    \n                    if (semiColonSplit[index].split('btn-prepend-to:')[1] !== undefined) {\n                        options.btnPrependTo = parseOption(semiColonSplit[index], 'btn-prepend-to');\n                    }\n                    \n                    if (semiColonSplit[index].split('btn-color:')[1] !== undefined) {\n                        options.btnColor = parseOption(semiColonSplit[index], 'btn-color');\n                    }\n                    \n                    if (semiColonSplit[index].split('associated-script:')[1] !== undefined) {\n                        options.scriptSelector = parseOption(semiColonSplit[index], 'associated-script');\n                    }\n                    \n                    if (semiColonSplit[index].split('backdrop-rgb:')[1] !== undefined) {\n                        options.backdropRgb = parseOption(semiColonSplit[index], 'backdrop-rgb');\n                    }\n                    \n                    if (semiColonSplit[index].split('render-in-page:')[1] !== undefined) {\n                        options.renderInPage = parseOption(semiColonSplit[index], 'render-in-page');\n                        currentElement.setAttribute('data-view-markup-render-in-page', '');\n                    }\n                    \n                    if (semiColonSplit[index].split('margin-bottom:')[1] !== undefined) {\n                        options.marginBottom = parseOption(semiColonSplit[index], 'margin-bottom');\n                    }\n                    \n                    if (semiColonSplit[index].split('margin-top:')[1] !== undefined) {\n                        options.marginTop = parseOption(semiColonSplit[index], 'margin-top');\n                    }\n                    \n                    if (semiColonSplit[index].split('modal-nav:')[1] !== undefined) {\n                        options.modalNav = parseOption(semiColonSplit[index], 'modal-nav');\n                    }\n                });          \n                                    \n                // Setup title attribute to be used later\n                if (options.title) {\n                    modalBtn.setAttribute('data-view-markup-title', options.title);\n                }\n\n                // Btn x postion set\n                // if (options.btnX && options.btnX === 'right') {\n                //     modalBtn.style.left = 'auto';\n                //     modalBtn.style.right = '0';\n                // } else if (options.btnX && options.btnX === 'center') {\n                //     modalBtn.style.left = 'calc(50% - ' + (modalBtn.offsetWidth / 2) + 'px)';\n                // } else if (options.btnX) {\n                //     modalBtn.style.left = options.btnX;\n                // }\n\n                // Btn x postion set\n                if (options.btnX) {\n                    modalBtn.style.transform = 'translateX(' + options.btnX + ')';\n                }\n\n                // Btn y postion set\n                if (options.btnY) {\n                    modalBtn.style.transform = 'translateY(' + options.btnY + ')';\n                }\n\n                // Btn both positions\n                if (options.btnX && options.btnY) {\n                    modalBtn.style.transform = 'translateX(' + options.btnX + ') translateY(' + options.btnY + ')';\n                }\n\n                // Btn z-index\n                if (options.btnZ) {\n                    modalBtn.style.zIndex = options.btnZ;\n                }\n\n                // Btn position\n                if (options.btnPos) {\n                    modalBtn.style.position = options.btnPos;\n                }\n                \n                // TODO: Btn color\n                if (options.btnColor) {\n                    modalBtn.style.backgroundColor = options.btnColor;\n                }\n\n                // Append to selector\n                if (options.btnAppendTo) {\n                    elBtnParent = document.querySelector(options.btnAppendTo);\n                    elBtnParent.appendChild(modalBtn);\n                }\n\n                // Prepend to selector\n                if (options.btnPrependTo) {\n                    elBtnParent = document.querySelector(options.btnPrependTo);\n                    elBtnParent.prepend(modalBtn);\n                }\n                \n                // Script selector\n                if (options.scriptSelector) {\n                    modalBtn.setAttribute('data-view-markup-script-selector', options.scriptSelector);\n                }\n                \n                // Backdrop rgba\n                if (options.backdropRgb) {\n                    modalBtn.setAttribute('data-view-markup-backdrop-rgb', options.backdropRgb);\n                }\n                \n                // In page rendering\n                if (options.renderInPage) {\n                    modalBtn.setAttribute('data-view-markup-in-page', 'true');\n                }\n                \n                // Modal navigation\n                if (options.modalNav === 'true') {\n                    modalBtn.setAttribute('data-view-markup-modal-nav', 'true');\n                }\n                \n                // Bottom margin for in page view\n                if (options.marginBottom) {\n                    item.closest('.view-markup').style.marginBottom = options.marginBottom;\n                }\n                \n                // Top margin for in page view\n                if (options.marginTop) {\n                    item.closest('.view-markup').style.marginTop = options.marginTop;\n                }\n            }   \n        });\n\n\n        // Check for preserve-attribute option\n        function leaveAttr(el) {\n            let optionPreserveAttr = null;\n            \n            if (el.getAttribute('data-view-markup').split(';')) {\n                let semiColonSplit = el.getAttribute('data-view-markup').split(';');\n                \n                if (semiColonSplit[0].split('preserve-attribute:')[1] !== undefined) {\n                    optionPreserveAttr = semiColonSplit[0].split('preserve-attribute:')[1].trim();\n                }\n                        \n                if (optionPreserveAttr === 'true') {\n                    return true;\n                } else {\n                    return false;\n                }    \n            }\n        }\n\n        // Spit out option value\n        function parseOption(splitOn, optionString) {\n            return splitOn.split(optionString + ':')[1].trim();\n        }\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Custom styles added via js\n        // -----------------------------------------------------------------------------\n\n        // Create style tag to dump styles into for the markup modal\n        let textStyle = document.createElement('style');\n        textStyle.setAttribute('id', 'modalStyle');\n\n        // Import compressed styles as a string\n        let textStyleString = `//import view-markup.css`;\n\n        // Apply in page styles to style tag\n        textStyle.textContent = textStyleString;\n\n        // Add in page styles to head\n        document.head.appendChild(textStyle);\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Load external libraries\n        // -----------------------------------------------------------------------------\n\n        // TODO: import these through npm packages\n\n        // Highlight css and js CDN. Project repo: https://github.com/highlightjs/highlight.js/\n        let highlightVersionNumb = {\n            css: '10.7.2',\n            js: '11.3.1'\n        }\n        let themeCssDarkUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/atom-one-dark.min.css';\n        let themeCssLightUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/github.min.css';\n\n        let highlightCssUrl = (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') ? themeCssDarkUrl : themeCssLightUrl;\n        let highlightScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.js + '/highlight.min.js';\n\n        // Beautify HTML CDN. Project repo: https://github.com/beautifier/beautifier.io\n        let beautifyVersionNumb = '1.14.0';\n        let beautifyScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/' + beautifyVersionNumb + '/beautify-html.min.js';\n\n        // HTML2Canvas CDN\n        let html2CanvasVersionNumb = '1.4.1';\n        let html2CanvasScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/html2canvas/' + html2CanvasVersionNumb + '/html2canvas.min.js';\n\n        // Load highlight js/css external assets\n        loadExternalCss(highlightCssUrl);\n\n        // Initalize everything after getting beautify-html script\n        loadExternalJs(beautifyScriptUrl, loadFinalJS);\n        \n        // loadExternalJs(html2CanvasScriptUrl);\n\n        function loadFinalJS() {\n            loadExternalJs(highlightScriptUrl, viewMarkupInitialize);\n        }\n\n        function loadExternalJs(scriptSrc, callback) {\n            let head = document.getElementsByTagName('head')[0];\n            let script = document.createElement('script');\n            \n            script.src = scriptSrc;\n            \n            head.appendChild(script);\n            script.onload = callback;\n        }\n\n        // Run after getting beautify-html/highlight.io external assets\n        function loadExternalCss(url, callback) {\n            let head = document.getElementsByTagName('head')[0];\n            let link = document.createElement('link');\n                \n            link.id = 'highlightJsCss';\n            link.rel = 'stylesheet';\n            link.href = url;\n            \n            link.onreadystatechange = callback;\n            link.onload = callback;\n            head.appendChild(link);\n        }\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Render modal\n        // -----------------------------------------------------------------------------\n            \n        // Setup modal outer div and attributes\n        modal.classList.add('view-markup-modal');\n        modal.setAttribute('id', 'modal');\n        modal.setAttribute('aria-labelledby', 'modalTitle');\n        modal.setAttribute('aria-modal', true);\n        modal.setAttribute('role', 'dialog');\n        modal.setAttribute('tabindex', '-1');\n\n        // Create modal dialog div\n        let modalDialog = document.createElement('div');\n\n        // Insert modal dialog element into outer modal element\n        modalDialog.classList.add('view-markup-modal__dialog');\n        modal.appendChild(modalDialog);\n\n        // Add the rest of the html string into modal dialog\n        modalDialog.innerHTML = markupContentHtmlString;\n        document.body.appendChild(modal);\n\n        // Set in page element\n        let wrapperEl = document.querySelectorAll('.view-markup');\n        wrapperEl.forEach(function (item) {\n            if (item.querySelector('[data-view-markup-in-page]')) {\n                let inPageBlock = document.createElement('div');\n                inPageBlock.classList.add('view-markup__in-page-view');\n                item.appendChild(inPageBlock);\n                inPageBlock.innerHTML = markupContentHtmlString;\n            }\n        });\n\n        // Assign in page unique ids and adjust aria-lablledby to match\n        let inPageContent = document.querySelectorAll('.view-markup__in-page-view .view-markup__content');\n        let inPageHeader = document.querySelectorAll('.view-markup__in-page-view .view-markup__header');\n        let modalSetSize = document.querySelectorAll('.view-markup__size-set');\n\n        inPageContent.forEach(function (item, index) {\n            inPageHeader[index].remove();\n            modalSetSize[index].remove();\n            \n            let allID = item.querySelectorAll('[id]');\n            let allFor = item.querySelectorAll('[for]');\n            let allAriaLabelledBy = item.querySelectorAll('[aria-labelledby]');\n\n            // Unique id\n            for (let x = 0; x < allID.length; x++) {\n                allID[x].id = allID[x].id + '-' + index;\n            }\n            \n            // Unique for\n            for (let y = 0; y < allFor.length; y++) {\n                let currentFor = allFor[y].getAttribute('for');\n                allFor[y].setAttribute('for', currentFor + '-' + index);\n            }\n\n            // Unique aria-labelledby\n            for (let z = 0; z < allAriaLabelledBy.length; z++) {\n                let currentAriaLabelledBy = allAriaLabelledBy[z].getAttribute('aria-labelledby');\n                allAriaLabelledBy[z].setAttribute('aria-labelledby', currentAriaLabelledBy + '-' + index);\n            }\n        });\n\n        // When external assets are loaded run this\n        function readyAdjustments() {\n            wrapperEl.forEach(function (item, index) {\n                \n                // Tidy js\n                if (item.querySelector('[data-view-markup-in-page]') && item.querySelector('[data-view-markup-script-selector]')) {\n                    let inPageCodeJsBlock = item.querySelector('.view-markup__code--js');\n                    let scriptSelector = item.querySelector('[data-view-markup-script-selector]').getAttribute('data-view-markup-script-selector');\n                    let scriptElement = document.querySelector(scriptSelector);\n                    let jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                    \n                    let tidyJS = html_beautify(jsToTidy, {\n                        indent_size: getCachedSpaceTab(),\n                        space_in_empty_paren: true\n                    });\n                    \n                    inPageCodeJsBlock.textContent = tidyJS;\n                    hljs.highlightElement(inPageCodeJsBlock);\n                    \n                    if (inPageCodeJsBlock.textContent !== '') {\n                        inPageCodeJsBlock.closest('.view-markup__content').classList.add('view-markup-modal--has-js');\n                    }\n                }\n                \n                // Tidy html\n                if (item.querySelector('[data-view-markup-in-page]')) {\n                    let inPageCodeHtmlBlock = item.querySelector('.view-markup__code--html');\n                    let tidyHTML = html_beautify(elHtmlStripped[index], {\n                        indent_size: getCachedSpaceTab(),\n                        space_in_empty_paren: true\n                    });\n                    \n                    inPageCodeHtmlBlock.textContent = tidyHTML;\n                    hljs.highlightElement(inPageCodeHtmlBlock);\n                    \n                    // Remove uneeded modal button\n                    item.querySelector('[data-view-markup-in-page]').remove();\n                }\n            });\n            \n            // Ready to initialize modal navigation\n            modalNavigation();\n            \n            // Add ready class on body\n            document.documentElement.classList.add('js-view-markup-ready');\n        }\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Cache rendered elements\n        // -----------------------------------------------------------------------------\n\n        let modalContent = document.querySelectorAll('.view-markup__content');\n        let modalCloseBtn = document.querySelectorAll('.view-markup__close-btn');\n        let copyBtn = document.querySelectorAll('.view-markup__copy-btn');\n        let settingsBtn = document.querySelectorAll('.view-markup__settings-btn');\n        let settingsDropdown = document.querySelectorAll('.view-markup__settings-dropdown');\n        let textArea = document.querySelectorAll('.view-markup__hidden-textarea');\n        let preEl = document.querySelectorAll('.view-markup__pre');\n        let htmlCodeEl = document.querySelectorAll('.view-markup__code--html');\n        let jsCodeEl = document.querySelectorAll('.view-markup__code--js');\n        let radio2Spaces = document.querySelectorAll('.view-markup__indent-2');\n        let radio4Spaces = document.querySelectorAll('.view-markup__indent-4');\n        let themeDark = document.querySelectorAll('.view-markup__theme-dark');\n        let themeLight = document.querySelectorAll('.view-markup__theme-light');\n        let fontSize = document.querySelectorAll('.view-markup__font-size');\n        let htmlTab = document.querySelectorAll('.view-markup__tabs-button--html');\n        let jsTab = document.querySelectorAll('.view-markup__tabs-button--js');\n        let inPageCodeBlock = document.querySelectorAll('.view-markup-in-page');\n\n        // Modal specific elements\n        let modalCodeHtmlEL = document.querySelector('.view-markup-modal .view-markup__code--html');\n        let modalContentEl = document.querySelector('.view-markup-modal .view-markup__content');\n        let modalTitleEl = document.querySelector('.view-markup-modal .view-markup__title');\n        let modalSizeMedium = document.querySelectorAll('.view-markup__size-medium');\n        let modalSizeLarge = document.querySelectorAll('.view-markup__size-large');\n        let modalCodeJsEL = document.querySelectorAll('.view-markup-modal .view-markup__code--js');\n\n\n\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Setup cached settings\n        // -----------------------------------------------------------------------------\n\n        // Select cached tabspaces radio\n        if (localStorage.getItem('checkedSpaceTab') === null || localStorage.getItem('checkedSpaceTab') === '4' ) {\n            radio4Spaces.forEach(function (item) {\n                item.checked = true;\n            });\n        } else {\n            radio2Spaces.forEach(function (item) {\n                item.checked = true;\n            });\n        }\n\n\n        // Select cached theme radio\n        if (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') {\n            themeDark.forEach(function (item) {\n                item.checked = true;\n            });\n        } else {\n            themeLight.forEach(function (item) {\n                item.checked = true;\n            });\n            document.documentElement.classList.add('js-view-markup-theme-light');\n        }\n\n\n        // Select cached modal size radio\n        if (localStorage.getItem('checkedModalSize') === null || localStorage.getItem('checkedModalSize') === 'medium' ) {\n            modalSizeMedium.forEach(function (item) {\n                item.checked = true;\n            });\n        } else {\n            modalSizeLarge.forEach(function (item) {\n                item.checked = true;\n            });\n            document.body.classList.add('js-view-markup-size-large');\n        } \n\n\n        // Get cached font-size\n        if (localStorage.getItem('fontSizevalue') === null ) {\n            fontSize.forEach(function (item) {\n                item.value = '13';\n            });\n        } else {\n            let currentValue = localStorage.getItem('fontSizevalue');\n            \n            fontSize.forEach(function (item) {\n                item.value = localStorage.getItem('fontSizevalue');\n            });\n\n            preEl.forEach(function (item, index) {\n                item.style.fontSize = currentValue + 'px';\n            });\n        }\n\n        // Font code font size\n        fontSize.forEach(function (item, index) {\n            item.addEventListener('change', function () {\n                let currentValue = item.value;\n                \n                localStorage.setItem('fontSizevalue', currentValue);\n\n                fontSize.forEach(function (item, index) {\n                    item.value = currentValue\n                });\n\n                preEl.forEach(function (item, index) {\n                    item.style.fontSize = currentValue + 'px';\n                });\n            });\n        });\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Modal and code controls\n        // -----------------------------------------------------------------------------\n\n        // Copy button\n        copyBtn.forEach(function (item, index) {\n            item.addEventListener('click', function () {\n                let currentShowingCode;\n                let closestElement = item.closest('.view-markup__content');\n                let currentCode = closestElement.querySelectorAll('.view-markup__code');\n                        \n                for (let i = 0; i < currentCode.length; i++) {\n                    if (currentCode[i].offsetWidth > 0 && currentCode[i].offsetHeight > 0) {\n                        currentShowingCode = currentCode[i];\n                    }\n                }\n                        \n                applyTidyCodeToTextArea(currentShowingCode.textContent, getCachedSpaceTab(), index);\n                \n                applyCopyBtnState('disabled');\n\n                navigator.clipboard.writeText(textArea[index].value);\n            });\n        });\n\n        // Tabspaces (2) radio change event listeners\n        radio2Spaces.forEach(function (item, index) {\n            item.addEventListener('change', function () {\n                if (this.checked === true) {\n                    \n                    // Remember tab checked radio\n                    localStorage.setItem('checkedSpaceTab', 2);\n                    \n                    radio4Spaces.forEach(function (item, index) {\n                        item.checked = false;\n                    });\n                    \n                    radio2Spaces.forEach(function (item, index) {\n                        item.checked = true;\n                    });\n                    \n                    // Set to 2 tabs\n                    htmlCodeEl.forEach(function (item) {\n                        applyCleanHtml(item.textContent, 4, null, item);\n                    });\n                    \n                    // Apply clean js\n                    applyCleanJs(2, null, true, jsCodeEl);\n                                            \n                    // Set copy button state\n                    applyCopyBtnState('enabled');\n                    \n                    this.focus();\n                }\n            });\n        });\n\n        // Tabspaces (4) radio change event listeners\n        radio4Spaces.forEach(function (item, index) {\n            item.addEventListener('change', function () {\n                if (this.checked === true) {\n                    \n                    // Remember tab checked radio\n                    localStorage.setItem('checkedSpaceTab', 4);\n                    \n                    radio2Spaces.forEach(function (item, index) {\n                        item.checked = false;\n                    });\n                    \n                    radio4Spaces.forEach(function (item, index) {\n                        item.checked = true;\n                    });\n                    \n                    // Set to 4 tabs\n                    htmlCodeEl.forEach(function (item) {\n                        applyCleanHtml(item.textContent, 4, null, item);\n                    });\n                    \n                    // Apply clean js\n                    applyCleanJs(4, null, true, jsCodeEl);\n                    \n                    // Set copy button state\n                    applyCopyBtnState('enabled');\n                    \n                    this.focus();\n                }\n            });\n        });\n\n\n        // Dark theme radio change event listeners\n        themeDark.forEach(function (item) {\n            item.addEventListener('change', function () {\n                if (this.checked === true) {\n                    \n                    themeLight.forEach(function (item, index) {\n                        item.checked = false;\n                    });\n                    \n                    themeDark.forEach(function (item, index) {\n                        item.checked = true;\n                    });\n                    \n                    // Remember tab checked radio\n                    localStorage.setItem('checkedThemeColor', 'dark');\n                    document.documentElement.classList.remove('js-view-markup-theme-light');\n                    document.getElementById('highlightJsCss').href = themeCssDarkUrl;\n                }\n            });\n        });\n\n        // Light theme radio change event listeners\n        themeLight.forEach(function (item) {\n            item.addEventListener('change', function () {\n                if (this.checked === true) {\n                    \n                    themeDark.forEach(function (item, index) {\n                        item.checked = false;\n                    });\n                    \n                    themeLight.forEach(function (item, index) {\n                        item.checked = true;\n                    });\n                    \n                    // Remember tab checked radio\n                    localStorage.setItem('checkedThemeColor', 'light');\n                    document.documentElement.classList.add('js-view-markup-theme-light');\n                    document.getElementById('highlightJsCss').href = themeCssLightUrl;\n                }\n            });\n        });\n\n        // Medium modal size radio change event listeners\n        modalSizeMedium.forEach(function (item) {\n            item.addEventListener('change', function () {\n                if (this.checked === true) {\n                    \n                    modalSizeLarge.forEach(function (item, index) {\n                        item.checked = false;\n                    });\n                    \n                    modalSizeMedium.forEach(function (item, index) {\n                        item.checked = true;\n                    });\n                    \n                    // Remember tab checked radio\n                    localStorage.setItem('checkedModalSize', 'medium');\n                    document.body.classList.remove('js-view-markup-size-large');\n                }\n            });\n        });\n\n        // Large modal size radio change event listeners\n        modalSizeLarge.forEach(function (item) {\n            item.addEventListener('change', function () {\n                if (this.checked === true) {\n                    \n                    modalSizeMedium.forEach(function (item, index) {\n                        item.checked = false;\n                    });\n                    \n                    modalSizeLarge.forEach(function (item, index) {\n                        item.checked = true;\n                    });\n                    \n                    // Remember tab checked radio\n                    localStorage.setItem('checkedModalSize', 'large');\n                    document.body.classList.add('js-view-markup-size-large');\n                }\n            });\n        });\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // HTML/JS tab toggling\n        // -----------------------------------------------------------------------------\n\n        htmlTab.forEach(function (item, index) {\n            item.addEventListener('click', function () {\n                applyCopyBtnState('enabled');\n                this.closest('.view-markup__content').classList.remove('view-markup--js-tab-showing');\n            });\n        });\n\n        jsTab.forEach(function (item, index) {\n            item.addEventListener('click', function () {\n                applyCopyBtnState('enabled');\n                this.closest('.view-markup__content').classList.add('view-markup--js-tab-showing');\n            });\n        });\n\n\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Exiting the modal\n        // -----------------------------------------------------------------------------\n\n        // Hide modal by clicking outside of it\n        modal.addEventListener('mousedown', function (event) {\n            let isClickInside = false;\n            \n            modalContent.forEach(function (item) {\n                if ( item.contains(event.target) ) {\n                    isClickInside = true;\n                }\n            });\n            \n            if (!isClickInside && this.classList.contains('view-markup-modal--showing')) {\n                modalHide();\n            }\n        });\n\n        // Hide modal with close and cancel button click\n        modalCloseBtn.forEach(function (item) {\n            item.addEventListener('click', function () {\n                modalHide();\n            });\n        });\n\n        // Hide modal with esc key\n        modal.addEventListener('keydown', function (e) {\n            let key = e.key;\n\n            if (key === 'Escape' && document.documentElement.classList.contains('js-view-markup-modal-showing')) {\n                modalHide();\n            }\n        });\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Settings dropdown functionality\n        // -----------------------------------------------------------------------------\n\n        let optionDropdownClass = 'view-markup__settings-dropdown--showing';\n\n        // Settings dropdown\n        settingsBtn.forEach(function (item, index) {\n            item.addEventListener('click', function () {\n                let ariaExpandedAttr = this.getAttribute('aria-expanded');\n\n                this.setAttribute('aria-expanded', (ariaExpandedAttr === 'true') ? 'false' : 'true');\n                settingsDropdown[index].classList.toggle(optionDropdownClass);\n            });\n        });\n\n        // Hide settings dropdown by clicking outside of it\n        document.addEventListener('mousedown', function (event) {\n            settingsDropdown.forEach(function (item, index) {\n                let isClickInside = item.contains(event.target);\n\n                if (\n                    !event.target.classList.contains('view-markup__settings-btn') &&\n                    item.classList.contains(optionDropdownClass) &&\n                    !isClickInside\n                ) {\n                    settingsBtn[index].setAttribute('aria-expanded', false);\n                    item.classList.remove(optionDropdownClass);\n                }\n            });\n        });\n\n        // Focus out of dropdown\n        // settingsDropdown.addEventListener('focusout', function (event) {\n        //     settingsBtn.setAttribute('aria-expanded', false);\n        //     settingsDropdown.classList.remove(optionDropdownClass);\n        // });\n\n\n\n\n\n        // -----------------------------------------------------------------------------\n        // Functions\n        // -----------------------------------------------------------------------------\n\n        // Function properly assigns untouched DOM html modal\n        function viewMarkupInitialize() {\n            elHtmlStripped.forEach(function (item, index) {\n                \n                // Assign modal button to correct html to view\n                let modalParent = viewMarkupEl[index].closest('.view-markup') || viewMarkupEl[index];\n                let modalBtnEL = modalParent.querySelector('.view-markup__modal-btn');\n\n                // Crack open the modal with the correct html in view\n                modalMapping(item, 2, modalBtnEL, null);\n            });\n            \n            readyAdjustments();\n        }\n\n        // Cleanup and highlight markup\n        function applyCleanHtml(html, spaces, btnEl, codeEl) {\n            let tidyHTML = html_beautify(html, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                \n            codeEl.textContent = tidyHTML;\n            \n            hljs.highlightElement(codeEl);\n        }\n\n        // Cleanup and highlight associated js\n        function applyCleanJs(spaces, btnEl, setTabSpaces, jsCodeEl) {    \n            for (let i = 0; i < jsCodeEl.length; i++) {\n                if (jsCodeEl[i] !== undefined) {\n                    let jsToTidy;\n                            \n                    if (setTabSpaces) {\n                        jsToTidy = jsCodeEl[i].textContent;\n                    } else if (btnEl !== null && btnEl.hasAttribute('data-view-markup-script-selector')) {\n                        let scriptElement = document.querySelector(btnEl.getAttribute('data-view-markup-script-selector'));\n                        jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                    }\n                            \n                    jsCodeEl[i].textContent = '';\n                    \n                    let tidyJs = html_beautify(jsToTidy, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                    \n                    jsCodeEl[i].textContent = tidyJs;\n                    \n                    hljs.highlightElement(jsCodeEl[i]);\n                }\n            }\n        }\n\n        // Return cached space/tab amount\n        function getCachedSpaceTab() {\n            let checkedSpacesRadio;\n            if (localStorage.getItem('checkedSpaceTab') === null) {\n                checkedSpacesRadio = (radio2Spaces[0].checked === true) ? 2 : 4;\n            } else {\n                checkedSpacesRadio = localStorage.getItem('checkedSpaceTab');\n            }\n            return checkedSpacesRadio;\n        }\n\n        // Populate hidden textarea with tidy html/js for copy button\n        function applyTidyCodeToTextArea(code, spaceTabRadio, index) {\n            let tidyCode = html_beautify(code, { indent_size: spaceTabRadio, space_in_empty_paren: true });\n            textArea[index].textContent = tidyCode;\n            return;\n        }\n\n        // Function that gets html, beautifies it, and displays it in a modal\n        let currentViewMarkupIndex;\n        function modalMapping(html, spaces, btnEl) {    \n            btnEl.addEventListener('click', function () {        \n                \n                // Current modal button index (used for modal navigation)\n                currentViewMarkupIndex = this.getAttribute('data-view-markup-nav-index');\n                \n                // screenShotDomElement(viewMarkupEl[currentViewMarkupIndex]);\n\n                // Clean html\n                applyCleanHtml(html, spaces, this, modalCodeHtmlEL);\n                \n                // Clean js\n                applyCleanJs(spaces, this, null, modalCodeJsEL);\n\n                modalContentEl.classList.remove('view-markup--js-tab-showing');\n                \n                jsCodeEl.forEach(function (item) {\n                    if (item.textContent !== '') {\n                        modalContentEl.classList.add('view-markup-modal--has-js');\n                    } else {\n                        modalContentEl.classList.remove('view-markup-modal--has-js');\n                    }\n                });\n                \n                modalShow();\n                \n                applyCopyBtnState('enabled');\n\n                // Add option title to modal title if there is one\n                if (btnEl.hasAttribute('data-view-markup-title')) {\n                    let cleanTitle = btnEl.getAttribute('data-view-markup-title').replace(/^'(.*)'$/, '$1');\n                    modalTitleEl.textContent = cleanTitle;\n                } else {\n                    modalTitleEl.textContent = 'Viewing markup';\n                }\n                \n                // Add option backdrop rgb to modal back\n                if (btnEl.hasAttribute('data-view-markup-backdrop-rgb')) {\n                    modal.style.backgroundColor = 'rgba(' + options.backdropRgb + ', .7)';\n                } else {\n                    modal.style.backgroundColor = '';\n                }\n            });\n        }\n\n        // Apply copy button state\n        function applyCopyBtnState(state) {\n            let clickedButton = document.querySelectorAll('.view-markup__copy-btn:focus');\n            if (state === 'disabled') {\n                clickedButton.forEach(function (item) {\n                    item.textContent = 'Copied';\n                    item.setAttribute('disabled', 'disabled');\n                });\n            } else if (state === 'enabled') {\n                copyBtn.forEach(function (item) {\n                    item.textContent = 'Copy';\n                    item.removeAttribute('disabled');\n                });\n            }\n        }\n\n        // Wrap in tag\n        function wrapElement(el, wrapper) {\n            el.parentNode.insertBefore(wrapper, el);\n            wrapper.appendChild(el);\n        }\n\n        // Insert after\n        function insertAfter(newNode, existingNode) {\n            existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n        }\n\n        // Show modal\n        function modalShow() {\n            document.documentElement.classList.add('js-view-markup-modal-showing');\n            modal.classList.add('view-markup-modal--showing');\n            \n            // Save current focus\n            let focusedElementBeforeModal = document.activeElement;\n\n            // Listen for and trap the keyboard\n            modal.addEventListener('keydown', trapTabKey);\n            \n            // Find all focusable children\n            let focusableElementsString =\n                'a[href],' +\n                'area[href],' +\n                'input,' +\n                'select:not([disabled]),' +\n                'textarea:not([tabindex=\"-1\"]),' +\n                'button:not([disabled]),' +\n                'iframe,' +\n                'object,' +\n                'embed,' +\n                '[tabindex=\"0\"],' +\n                '[contenteditable]';\n                \n            let focusableElements = modal.querySelectorAll(focusableElementsString);\n            \n            // Convert NodeList to Array\n            focusableElements = Array.prototype.slice.call(focusableElements);\n\n            let firstTabStop = focusableElements[0];\n            let lastTabStop = focusableElements[focusableElements.length - 1];\n            \n            // Set initial focus on the modal\n            modal.focus();\n            \n            function trapTabKey(e) {\n                \n                // Check for TAB key press\n                if (e.keyCode === 9) {\n\n                    // SHIFT + TAB\n                    if (e.shiftKey) {\n                        if (document.activeElement === firstTabStop) {\n                            e.preventDefault();\n                            lastTabStop.focus();\n                        }\n\n                    // TAB\n                    } else {\n                        if (document.activeElement === lastTabStop) {\n                            e.preventDefault();\n                            firstTabStop.focus();\n                        }\n                    }\n                }\n            }\n        }\n\n        // Hide modal\n        function modalHide() {\n            document.documentElement.classList.remove('js-view-markup-modal-showing');\n            modal.classList.remove('view-markup-modal--showing');\n            applyCopyBtnState('enabled');\n            focusedElementBeforeModal.focus();\n        }\n\n        // Go to previous/next view markup element\n        function modalNavigate(el, direction) {\n            let mapToModalBtnIndex;\n            \n            if (direction === 'prev') {\n                mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === 0) ? parseInt(elAmount) - 1 : parseInt(currentViewMarkupIndex) - 1;\n            } else if (direction === 'next') {\n                mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === parseInt(elAmount) - 1) ? 0 : parseInt(currentViewMarkupIndex) + 1;\n            }\n                \n            let mapToModalBtnSelector = '[data-view-markup-nav-index=\"' + mapToModalBtnIndex + '\"]';\n            let mapToModalBtn = document.querySelector(mapToModalBtnSelector.toString());\n            \n            document.documentElement.classList.add('js-view-markup-modal-showing--navigating');\n            \n            mapToModalBtn.click();\n            mapToModalBtn.focus();\n            \n            setTimeout(function () {\n                document.documentElement.classList.remove('js-view-markup-modal-showing--navigating');\n            }, 300);\n        }\n\n        // Modal navigation arrows\n        function modalNavigation() {    \n            \n            // Add index to modal buttons for navigation\n            let modalNavEl = document.querySelector('.view-markup__nav');\n            let modalBtn = document.querySelectorAll('.view-markup__modal-btn');\n            \n            elAmount = modalBtn.length;\n            \n            modalBtn.forEach(function (item, index) {\n                item.setAttribute('data-view-markup-nav-index', index);\n            });\n            \n            if (elAmount > 1) {\n\n                // Modal previous button\n                let modalPrevBtn = modal.querySelector('.view-markup__prev-btn');\n\n                // Modal next button\n                let modalNextBtn = modal.querySelector('.view-markup__next-btn');\n                \n                // Modal previous button click\n                modalPrevBtn.addEventListener('click', function () {\n                    modalNavigate(this, 'prev');\n                });\n\n                // Modal next button click\n                modalNextBtn.addEventListener('click', function () {\n                    modalNavigate(this, 'next');\n                });  \n            } else {\n\n                // Remove modal nav if only 1 item\n                modalNavEl.remove();\n            }\n            \n            if (modalNav === null) {\n            \n                // Remove modal nav if no setting is found\n                modalNavEl.remove();\n            }\n        }\n\n\n\n\n        \n        /* -----------------------------------------------------------------------------\n            EXPIREMENTAL WIP: prototype floating the buttons over the page instead of\n            wrapping each element in a div and then positioning it inside that div. Not\n            a fan of how much it currently modifies the DOM to get the modal button next\n            to the associated element correctly\n\n            TODOS:\n            ✓ Allow for dynamic button positioning\n            • Add \"Skip to view markup modal navigation\" skip link\n            • Add visual focus indicator to modal button when focus in the background\n              when using modal navigation.\n            ✓ Set smooth scrolling on the html,body when modal is active\n            • Enhance preserve attribute functionality a bit. (allow for top and inner)\n        ----------------------------------------------------------------------------- */\n\n        // Render image of view-markup element\n        function screenShotDomElement(el) {\n            html2canvas(el).then(function(canvas) {\n                document.body.appendChild(canvas);\n            });\n        }\n\n        // Unwrap function\n        function unwrap(wrapper) {\n            let docFrag = document.createDocumentFragment();\n            \n            while (wrapper.firstChild) {\n                let child = wrapper.removeChild(wrapper.firstChild);\n                docFrag.appendChild(child);\n            }\n\n            wrapper.parentNode.replaceChild(docFrag, wrapper);\n        }\n\n        // Debounce function (throttle window resize)\n        function debounce(func) {\n            let timer;\n\n            return (event) => {\n                if (timer) {\n                    clearTimeout(timer);\n                }\n                timer = setTimeout(func, 1000, event);\n            };\n        }\n\n        // Get query params if any\n        let scriptLinkage = document.getElementById('view-markup-js');\n        let modalNav = null;\n        let dynamicPos = null;\n        let dynamicPosZIndex = null;\n\n        if (scriptLinkage) {\n            let urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n            modalNav = urlParam.get('modal-nav');\n            dynamicPos = urlParam.get('dynamic-pos');\n            dynamicPosZIndex = urlParam.get('z-index');\n\n            // If dynamic position query param is set, do some stuff\n            if (dynamicPos !== null) {\n                window.addEventListener('load', () => {\n                \n                    // Create new div that will contain all modal buttons\n                    let floatingButtonHolder = document.createElement('div');\n                    floatingButtonHolder.classList.add('view-markup-dynamic-nav');\n                    \n                    if (dynamicPosZIndex !== null) {\n                        floatingButtonHolder.style.zIndex = dynamicPosZIndex.toString();\n                    }\n                    \n                    document.body.appendChild(floatingButtonHolder);\n            \n                    // Cache elements with modals\n                    let withModalEl = document.querySelectorAll('[data-view-markup]:not([data-view-markup-render-in-page])');\n                    \n                    // Re-cache remaining buttons\n                    let floatingModalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                    \n                    // Dynamically position modal button next to associated element\n                    function positionModalBtns(load) {\n                        \n                        // Add inline css to position button at the top left of the element\n                        withModalEl.forEach( (item, i) => {\n                            let btnElement = floatingModalBtn[i];\n            \n                            btnElement.style.top = (item.getBoundingClientRect().top + window.scrollY) + 'px';\n                            btnElement.style.left = item.getBoundingClientRect().left + 'px';\n            \n                            if (load === 'load') {\n                                floatingButtonHolder.appendChild(btnElement);\n                            }\n                        });\n                    }\n                    \n                    // Remove un-needed highlight divs\n                    let highlightElement = document.querySelectorAll('.view-markup__highlight');\n                    highlightElement.forEach( (item) => {\n                        item.remove();\n                    });\n            \n                    // Unwrap view-markup div\n                    wrapperEl.forEach( (item) => {\n                        unwrap(item);\n                    });\n                    \n                    // Position buttons on load\n                    positionModalBtns('load');\n                    \n                    // Position buttons after resize\n                    window.addEventListener('resize', debounce( () => {\n                        positionModalBtns();\n                    }));\n                });\n            }\n        }\n    }\n})();"]}