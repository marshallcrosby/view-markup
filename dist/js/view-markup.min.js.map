{"version":3,"sources":["view-markup.js"],"names":["viewMarkup","viewMarkupEl","document","querySelectorAll","scriptLinkage","getElementById","querySelector","modalNav","dynamicPos","dynamicPosZIndex","excludeAttribute","urlParam","URLSearchParams","getAttribute","split","get","srcready","Event","pageSrc","request","window","XMLHttpRequest","ActiveXObject","makeHttpObject","open","location","href","send","onreadystatechange","readyState","responseText","dispatchEvent","addEventListener","str","copiedViewMarkupEl","DOMParser","parseFromString","length","options","elHtmlInitial","elHtmlClean","elAmount","markupContentHtmlString","forEach","item","index","excludeAttributeArr","element","attribute","removeAttribute","tagName","toLowerCase","outerHTML","el","optionPreserveAttr","convertToParamString","preserveViewMarkupAttr","replace","modalBtn","createElement","classList","add","setAttribute","innerHTML","nodeName","wrapperDivBody","body","prepend","appendChild","markupWrapperDiv","wrapper","parentNode","insertBefore","optionsParams","title","btnX","btnY","btnZ","btnPos","btnAppendTo","btnPrependTo","btnColor","scriptSelector","backdropRgb","renderInPage","marginBottom","marginTop","style","transform","zIndex","position","backgroundColor","elBtnParent","closest","textStyle","textStyleString","textContent","head","highlightVersionNumb","css","js","themeCssDarkUrl","themeCssLightUrl","highlightCssUrl","localStorage","getItem","highlightScriptUrl","beautifyScriptUrl","loadExternalJs","scriptSrc","callback","getElementsByTagName","script","src","onload","url","link","id","rel","loadExternalCss","viewMarkupInitialize","modalEl","setAttributes","aria-labelledby","aria-modal","role","tabindex","modalDialog","wrapperEl","inPageBlock","inPageContent","inPageHeader","modalSetSize","readyAdjustments","inPageCodeJsBlock","jsToTidy","toString","tidyJS","html_beautify","indent_size","getCachedSpaceTab","space_in_empty_paren","hljs","highlightElement","inPageCodeHtmlBlock","tidyHTML","remove","modalNavEl","modalPrevBtn","modalNextBtn","modalNavigate","this","modalNavigation","documentElement","vmReadyEvent","allID","allFor","allAriaLabelledBy","x","y","currentFor","z","currentAriaLabelledBy","modalContent","modalCloseBtn","copyBtn","settingsBtn","settingsDropdown","textArea","preEl","htmlCodeEl","jsCodeEl","radio2Spaces","radio4Spaces","themeDark","themeLight","fontSize","htmlTab","jsTab","modalCodeHtmlEL","modalContentEl","modalTitleEl","modalSizeMedium","modalSizeLarge","modalCodeJsEL","checked","value","currentValue","setItem","currentShowingCode","currentCode","i","offsetWidth","offsetHeight","code","spaceTabRadio","tidyCode","applyTidyCodeToTextArea","applyCopyBtnState","navigator","clipboard","writeText","applyCleanHtml","applyCleanJs","focus","event","isClickInside","contains","target","modalHide","e","key","currentViewMarkupIndex","focusedElementBeforeModal","optionDropdownClass","modalBtnEL","html","spaces","btnEl","activeElement","keyCode","shiftKey","firstTabStop","preventDefault","lastTabStop","focusableElements","Array","prototype","slice","call","modalShow","hasAttribute","cleanTitle","codeEl","setTabSpaces","undefined","tidyJs","checkedSpacesRadio","state","clickedButton","direction","mapToModalBtnIndex","parseInt","mapToModalBtnSelector","mapToModalBtn","click","tabParent","tablistPanelId","setTimeout","ariaExpandedAttr","toggle","floatingButtonHolder","withmodalEl","floatingModalBtn","positionModalBtns","load","btnElement","top","getBoundingClientRect","scrollY","left","docFrag","createDocumentFragment","firstChild","child","removeChild","replaceChild","unwrap","func","timer","clearTimeout","debounce","parent","tabNav","aria-label","tabsList","tabButton","entry","tabButtonEntry","cloneNode","entryTitle","uniqueString","match","toUpperCase","camelize","aria-selected","aria-controls","vmPanel","tabButtonElement","panel","tabs","tabList","tab","changeTabs","tabFocus","tabslistParam","tabsParams","maxWidth","background","pillView","paddingX","class","tabsTitle","Object","assign","marginLeft","marginRight","paddingLeft","paddingRight","classItem","tabViewModalBtn","urlHash","hash","urlIDElement","associatedTab","scrollIntoView","behavior","grandparent","attrs","stringCleanup"],"mappings":"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","sourcesContent":["/*!\n    * View markup v1.5.2\n    * Plugin that makes it easy for developers to view and copy the html needed for a component.\n    *\n    * Copyright 2021-2022 Marshall Crosby\n    * https://marshallcrosby.com\n*/\n\nconst viewMarkup = function() {\n    \n    // Cache elements\n    const viewMarkupEl = document.querySelectorAll('[data-view-markup]');\n    \n    // Get query params if any\n    let scriptLinkage = document.getElementById('view-markup-js') || document.querySelector('script[src*=view-markup]');\n    let modalNav = null;\n    let dynamicPos = null;\n    let dynamicPosZIndex = null;\n    let excludeAttribute = null;\n\n    if (scriptLinkage) {\n        let urlParam = new URLSearchParams(scriptLinkage.getAttribute('src').split('?')[1]);\n        modalNav = urlParam.get('modal-nav');\n        dynamicPos = urlParam.get('dynamic-pos');\n        dynamicPosZIndex = urlParam.get('z-index');\n        excludeAttribute = urlParam.get('exclude-attribute');\n    }\n\n    let srcready = new Event('ViewMarkupSrcIsReady');\n    let pageSrc = null;\n    let request = makeHttpObject();\n    \n    request.open('GET', window.location.href, true);\n    request.send(null);\n    request.onreadystatechange = function() {\n        if (request.readyState === 4) {\n            pageSrc = request.responseText;\n            document.dispatchEvent(srcready);\n        }\n    }\n\n    // Get original page src\n    function makeHttpObject() {\n        if ('XMLHttpRequest' in window) {\n            return new XMLHttpRequest();\n        } else if ('ActiveXObject' in window) {\n            return new ActiveXObject('Msxml2.XMLHTTP');\n        }\n    }\n    \n    // Convert src string to HTML\n    function stringToHTML(str) {\n        let parser = new DOMParser();\n        let doc = parser.parseFromString(str, 'text/html');\n        return doc;\n    }\n\n    // Remove multiple attributes\n    function removeAttributes(element, attributes) {\n        attributes.forEach(function (attribute) {\n            element.removeAttribute(attribute);\n        });\n    }\n\n    document.addEventListener('ViewMarkupSrcIsReady', function () {\n        const copiedPageHTML = stringToHTML(pageSrc);\n        const copiedViewMarkupEl = copiedPageHTML.querySelectorAll('[data-view-markup]');\n                    \n        if (viewMarkupEl.length > 0) {\n            let elHtmlInitial = [];\n            let elHtmlClean = [];\n            let elAmount = 0;\n            let options;\n            let markupContentHtmlString = `//import _view-markup-modal.html`;\n\n            viewMarkupEl.forEach(function (item, index) {\n\n                // Remove specified param attribute(s)\n                if (excludeAttribute !== null) {\n                    let excludeAttributeArr = excludeAttribute.split(',');\n                    removeAttributes(copiedViewMarkupEl[index], excludeAttributeArr);\n                }\n                \n                // Cache all viewable markup elements               \n                elHtmlInitial[index] = (index === 0 && viewMarkupEl[0].tagName.toLowerCase() === 'html') ?\n                    pageSrc :\n                    copiedViewMarkupEl[index].outerHTML;\n                \n                // Remove the view markup specific data attributes\n                if (!preserveViewMarkupAttr(viewMarkupEl[index])) {\n                    elHtmlClean[index] = elHtmlInitial[index].replace(/data-view-markup=\"[^\\\"]*\"/g, '').replace(/data-view-markup/g, '');\n                } else {\n                    elHtmlClean[index] = elHtmlInitial[index];\n                }\n                \n                // Create modal button\n                let modalBtn = document.createElement('button');\n                modalBtn.classList.add('view-markup__modal-btn');\n                modalBtn.setAttribute('type', 'button');\n                modalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                    \n                // if <html> or <body> do things a bit differently\n                if (viewMarkupEl[index].nodeName.toLowerCase()  === 'body' || viewMarkupEl[index].nodeName.toLowerCase()  === 'html') {\n                    let wrapperDivBody = document.createElement('div');\n                    wrapperDivBody.classList.add('view-markup', 'view-markup--body');\n                    document.body.prepend(wrapperDivBody);\n                    wrapperDivBody.appendChild(modalBtn);\n                } else {\n                    \n                    // Wrap in div\n                    let markupWrapperDiv = document.createElement('div');\n                    markupWrapperDiv.classList.add('view-markup');\n                    markupWrapperDiv.innerHTML = '<div class=\"view-markup__highlight\"></div>';\n                    wrapElement(viewMarkupEl[index], markupWrapperDiv);\n                    markupWrapperDiv.prepend(modalBtn);\n                }\n\n                // Apply some options to toggle if available\n                let optionsParams = convertToParamString(viewMarkupEl[index].getAttribute('data-view-markup'));\n                \n                options = {\n                    title: optionsParams.get('title'),\n                    btnX: optionsParams.get('btn-x'),\n                    btnY: optionsParams.get('btn-y'),\n                    btnZ: optionsParams.get('btn-z'),\n                    btnPos: optionsParams.get('btn-pos'),\n                    btnAppendTo: optionsParams.get('btn-append-to'),\n                    btnPrependTo: optionsParams.get('btn-prepend-to'),\n                    btnColor: optionsParams.get('btn-color'),\n                    scriptSelector: optionsParams.get('script-selector'),\n                    backdropRgb: optionsParams.get('backdrop-rgb'),\n                    renderInPage: optionsParams.get('render-in-page'),\n                    marginBottom: optionsParams.get('margin-bottom'),\n                    marginTop: optionsParams.get('margin-top')\n                };\n                                        \n                if (optionsParams !== 'null') {\n                    \n                    // Setup title attribute to be used later\n                    if (options.title) {\n                        modalBtn.setAttribute('data-view-markup-title', options.title);\n                    }\n\n                    // Btn x postion set\n                    if (options.btnX) {\n                        modalBtn.style.transform = 'translateX(' + options.btnX + ')';\n                    }\n\n                    // Btn y postion set\n                    if (options.btnY) {\n                        modalBtn.style.transform = 'translateY(' + options.btnY + ')';\n                    }\n\n                    // Btn both positions\n                    if (options.btnX && options.btnY) {\n                        modalBtn.style.transform = 'translateX(' + options.btnX + ') translateY(' + options.btnY + ')';\n                    }\n\n                    // Btn z-index\n                    if (options.btnZ) {\n                        modalBtn.style.zIndex = options.btnZ;\n                    }\n\n                    // Btn position\n                    if (options.btnPos) {\n                        modalBtn.style.position = options.btnPos;\n                    }\n                    \n                    // TODO: Btn color\n                    if (options.btnColor) {\n                        modalBtn.style.backgroundColor = options.btnColor;\n                    }\n\n                    // Append to selector\n                    if (options.btnAppendTo) {\n                        elBtnParent = document.querySelector(options.btnAppendTo);\n                        elBtnParent.appendChild(modalBtn);\n                    }\n\n                    // Prepend to selector\n                    if (options.btnPrependTo) {\n                        elBtnParent = document.querySelector(options.btnPrependTo);\n                        elBtnParent.prepend(modalBtn);\n                    }\n                    \n                    // Script selector\n                    if (options.scriptSelector) {\n                        modalBtn.setAttribute('data-view-markup-script-selector', options.scriptSelector);\n                    }\n                    \n                    // Backdrop rgba\n                    if (options.backdropRgb) {\n                        modalBtn.setAttribute('data-view-markup-backdrop-rgb', options.backdropRgb);\n                    }\n                    \n                    // In page rendering\n                    if (options.renderInPage) {\n                        modalBtn.setAttribute('data-view-markup-in-page', 'true');\n                        item.setAttribute('data-view-markup-render-in-page', '');\n                    }\n                                            \n                    // Bottom margin for in page view\n                    if (options.marginBottom) {\n                        item.closest('.view-markup').style.marginBottom = options.marginBottom;\n                    }\n                    \n                    // Top margin for in page view\n                    if (options.marginTop) {\n                        item.closest('.view-markup').style.marginTop = options.marginTop;\n                    }\n                }   \n            });\n\n\n            // Check for preserve-attribute option\n            function preserveViewMarkupAttr(el) {                   \n                let optionsParams = convertToParamString(el.getAttribute('data-view-markup'));\n                let optionPreserveAttr = optionsParams.get('preserve-attribute');\n                \n                if (optionPreserveAttr) {                                \n                    if (optionPreserveAttr === 'true') {\n                        return true;\n                    } else {\n                        return false;\n                    }    \n                }\n            }\n            \n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Custom styles added via js\n            // -----------------------------------------------------------------------------\n\n            // Create style tag to dump styles into for the markup modal\n            let textStyle = document.createElement('style');\n            textStyle.setAttribute('id', 'viewMarkupStyle');\n\n            // Import compressed styles as a string\n            let textStyleString = `//import view-markup.css`;\n\n            // Apply in page styles to style tag\n            textStyle.textContent = textStyleString;\n\n            // Add in page styles to head\n            document.head.appendChild(textStyle);\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Load external libraries\n            // -----------------------------------------------------------------------------\n\n            // TODO: import these through npm packages\n\n            // Highlight css and js CDN. Project repo: https://github.com/highlightjs/highlight.js/\n            let highlightVersionNumb = {\n                css: '10.7.2',\n                js: '11.3.1'\n            }\n            let themeCssDarkUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/atom-one-dark.min.css';\n            let themeCssLightUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.css + '/styles/github.min.css';\n\n            let highlightCssUrl = (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') ? themeCssDarkUrl : themeCssLightUrl;\n            let highlightScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/highlight.js/' + highlightVersionNumb.js + '/highlight.min.js';\n\n            // Beautify HTML CDN. Project repo: https://github.com/beautifier/beautifier.io\n            let beautifyVersionNumb = '1.14.0';\n            let beautifyScriptUrl = 'https://cdnjs.cloudflare.com/ajax/libs/js-beautify/' + beautifyVersionNumb + '/beautify-html.min.js';\n\n            // Load highlight js/css external assets\n            loadExternalCss(highlightCssUrl);\n\n            // Initalize everything after getting beautify-html script\n            loadExternalJs(beautifyScriptUrl, loadFinalJS);\n            \n            function loadFinalJS() {\n                loadExternalJs(highlightScriptUrl, viewMarkupInitialize);\n            }\n\n            function loadExternalJs(scriptSrc, callback) {\n                let head = document.getElementsByTagName('head')[0];\n                let script = document.createElement('script');\n                \n                script.src = scriptSrc;\n                \n                head.appendChild(script);\n                script.onload = callback;\n            }\n\n            // Run after getting beautify-html/highlight.io external assets\n            function loadExternalCss(url, callback) {\n                let head = document.getElementsByTagName('head')[0];\n                let link = document.createElement('link');\n                    \n                link.id = 'highlightJsCss';\n                link.rel = 'stylesheet';\n                link.href = url;\n                \n                link.onreadystatechange = callback;\n                link.onload = callback;\n                head.appendChild(link);\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Render modal\n            // -----------------------------------------------------------------------------\n                \n            // Setup modal outer div and attributes\n            let modalEl = document.createElement('div');\n            modalEl.classList.add('view-markup-modal');\n            \n            setAttributes(modalEl, {\n                'id': 'viewMarkupModal',\n                'aria-labelledby': 'viewMarkupModalTitle',\n                'aria-modal': 'true',\n                'role': 'dialog',\n                'tabindex': '-1',\n            });\n\n            // Create modal dialog div\n            let modalDialog = document.createElement('div');\n\n            // Insert modal dialog element into outer modal element\n            modalDialog.classList.add('view-markup-modal__dialog');\n            modalEl.appendChild(modalDialog);\n\n            // Add the rest of the html string into modal dialog\n            modalDialog.innerHTML = markupContentHtmlString;\n            document.body.appendChild(modalEl);\n\n            // Set in page element\n            let wrapperEl = document.querySelectorAll('.view-markup');\n            wrapperEl.forEach(function (item) {\n                if (item.querySelector('[data-view-markup-in-page]')) {\n                    let inPageBlock = document.createElement('div');\n                    inPageBlock.classList.add('view-markup__in-page-view');\n                    item.appendChild(inPageBlock);\n                    inPageBlock.innerHTML = markupContentHtmlString;\n                }\n            });\n\n            // Assign in page unique ids and adjust aria-lablledby to match\n            let inPageContent = document.querySelectorAll('.view-markup__in-page-view .view-markup__content');\n            let inPageHeader = document.querySelectorAll('.view-markup__in-page-view .view-markup__header');\n            let modalSetSize = document.querySelectorAll('.view-markup__size-set');\n\n            inPageContent.forEach(function (item, index) {\n                inPageHeader[index].remove();\n                modalSetSize[index].remove();\n                \n                let allID = item.querySelectorAll('[id]');\n                let allFor = item.querySelectorAll('[for]');\n                let allAriaLabelledBy = item.querySelectorAll('[aria-labelledby]');\n\n                // Unique id\n                for (let x = 0; x < allID.length; x++) {\n                    allID[x].id = allID[x].id + '-' + index;\n                }\n                \n                // Unique for\n                for (let y = 0; y < allFor.length; y++) {\n                    let currentFor = allFor[y].getAttribute('for');\n                    allFor[y].setAttribute('for', currentFor + '-' + index);\n                }\n\n                // Unique aria-labelledby\n                for (let z = 0; z < allAriaLabelledBy.length; z++) {\n                    let currentAriaLabelledBy = allAriaLabelledBy[z].getAttribute('aria-labelledby');\n                    allAriaLabelledBy[z].setAttribute('aria-labelledby', currentAriaLabelledBy + '-' + index);\n                }\n            });\n\n            // When external assets are loaded run this\n            function readyAdjustments() {\n                wrapperEl.forEach(function (item, index) {\n                    \n                    // Tidy js\n                    if (item.querySelector('[data-view-markup-in-page]') && item.querySelector('[data-view-markup-script-selector]')) {\n                        let inPageCodeJsBlock = item.querySelector('.view-markup__code--js');\n                        let scriptSelector = item.querySelector('[data-view-markup-script-selector]').getAttribute('data-view-markup-script-selector');\n                        let scriptElement = document.querySelector(scriptSelector);\n                        let jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        \n                        let tidyJS = html_beautify(jsToTidy, {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeJsBlock.textContent = tidyJS;\n                        hljs.highlightElement(inPageCodeJsBlock);\n                        \n                        if (inPageCodeJsBlock.textContent !== '') {\n                            inPageCodeJsBlock.closest('.view-markup__content').classList.add('view-markup-modal--has-js');\n                        }\n                    }\n                    \n                    // Tidy html\n                    if (item.querySelector('[data-view-markup-in-page]')) {\n                        let inPageCodeHtmlBlock = item.querySelector('.view-markup__code--html');\n                        let tidyHTML = html_beautify(elHtmlClean[index], {\n                            indent_size: getCachedSpaceTab(),\n                            space_in_empty_paren: true\n                        });\n                        \n                        inPageCodeHtmlBlock.textContent = tidyHTML;\n                        hljs.highlightElement(inPageCodeHtmlBlock);\n                        \n                        // Remove uneeded modal button\n                        item.querySelector('[data-view-markup-in-page]').remove();\n                    }\n                });\n                \n                // Ready to initialize modal navigation\n                modalNavigation();\n                \n                // Add ready class on body\n                document.documentElement.classList.add('js-view-markup-ready');\n\n                const vmReadyEvent = new Event('ViewMarkupReady');\n                window.dispatchEvent(vmReadyEvent);\n            }\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Cache rendered elements\n            // -----------------------------------------------------------------------------\n\n            let modalContent = document.querySelectorAll('.view-markup__content');\n            let modalCloseBtn = document.querySelectorAll('.view-markup__close-btn');\n            let copyBtn = document.querySelectorAll('.view-markup__copy-btn');\n            let settingsBtn = document.querySelectorAll('.view-markup__settings-btn');\n            let settingsDropdown = document.querySelectorAll('.view-markup__settings-dropdown');\n            let textArea = document.querySelectorAll('.view-markup__hidden-textarea');\n            let preEl = document.querySelectorAll('.view-markup__pre');\n            let htmlCodeEl = document.querySelectorAll('.view-markup__code--html');\n            let jsCodeEl = document.querySelectorAll('.view-markup__code--js');\n            let radio2Spaces = document.querySelectorAll('.view-markup__indent-2');\n            let radio4Spaces = document.querySelectorAll('.view-markup__indent-4');\n            let themeDark = document.querySelectorAll('.view-markup__theme-dark');\n            let themeLight = document.querySelectorAll('.view-markup__theme-light');\n            let fontSize = document.querySelectorAll('.view-markup__font-size');\n            let htmlTab = document.querySelectorAll('.view-markup__tabs-button--html');\n            let jsTab = document.querySelectorAll('.view-markup__tabs-button--js');\n\n            // Modal specific elements\n            let modalCodeHtmlEL = document.querySelector('.view-markup-modal .view-markup__code--html');\n            let modalContentEl = document.querySelector('.view-markup-modal .view-markup__content');\n            let modalTitleEl = document.querySelector('.view-markup-modal .view-markup__title');\n            let modalSizeMedium = document.querySelectorAll('.view-markup__size-medium');\n            let modalSizeLarge = document.querySelectorAll('.view-markup__size-large');\n            let modalCodeJsEL = document.querySelectorAll('.view-markup-modal .view-markup__code--js');\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Setup cached settings\n            // -----------------------------------------------------------------------------\n\n            // Select cached tabspaces radio\n            if (localStorage.getItem('checkedSpaceTab') === null || localStorage.getItem('checkedSpaceTab') === '4' ) {\n                radio4Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                radio2Spaces.forEach(function (item) {\n                    item.checked = true;\n                });\n            }\n\n\n            // Select cached theme radio\n            if (localStorage.getItem('checkedThemeColor') === null || localStorage.getItem('checkedThemeColor') === 'dark') {\n                themeDark.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                themeLight.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.documentElement.classList.add('js-view-markup-theme-light');\n            }\n\n\n            // Select cached modal size radio\n            if (localStorage.getItem('checkedModalSize') === null || localStorage.getItem('checkedModalSize') === 'medium' ) {\n                modalSizeMedium.forEach(function (item) {\n                    item.checked = true;\n                });\n            } else {\n                modalSizeLarge.forEach(function (item) {\n                    item.checked = true;\n                });\n                document.body.classList.add('js-view-markup-size-large');\n            } \n\n\n            // Get cached font-size\n            if (localStorage.getItem('fontSizevalue') === null ) {\n                fontSize.forEach(function (item) {\n                    item.value = '13';\n                });\n            } else {\n                let currentValue = localStorage.getItem('fontSizevalue');\n                \n                fontSize.forEach(function (item) {\n                    item.value = localStorage.getItem('fontSizevalue');\n                });\n\n                preEl.forEach(function (item, index) {\n                    item.style.fontSize = currentValue + 'px';\n                });\n            }\n\n            \n            // Font code font size\n            fontSize.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    let currentValue = item.value;\n                    \n                    localStorage.setItem('fontSizevalue', currentValue);\n\n                    fontSize.forEach(function (item, index) {\n                        item.value = currentValue\n                    });\n\n                    preEl.forEach(function (item, index) {\n                        item.style.fontSize = currentValue + 'px';\n                    });\n                });\n            });\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Modal and code controls\n            // -----------------------------------------------------------------------------\n\n            // Copy button\n            copyBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    let currentShowingCode;\n                    let closestElement = item.closest('.view-markup__content');\n                    let currentCode = closestElement.querySelectorAll('.view-markup__code');\n                            \n                    for (let i = 0; i < currentCode.length; i++) {\n                        if (currentCode[i].offsetWidth > 0 && currentCode[i].offsetHeight > 0) {\n                            currentShowingCode = currentCode[i];\n                        }\n                    }\n                            \n                    applyTidyCodeToTextArea(currentShowingCode.textContent, getCachedSpaceTab(), index);\n                    \n                    applyCopyBtnState('disabled');\n\n                    navigator.clipboard.writeText(textArea[index].value);\n                });\n            });\n\n            // Tabspaces (2) radio change event listeners\n            radio2Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 2);\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 2 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(2, null, true, jsCodeEl);\n                                                \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n            // Tabspaces (4) radio change event listeners\n            radio4Spaces.forEach(function (item, index) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedSpaceTab', 4);\n                        \n                        radio2Spaces.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        radio4Spaces.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Set to 4 tabs\n                        htmlCodeEl.forEach(function (item) {\n                            applyCleanHtml(item.textContent, 4, null, item);\n                        });\n                        \n                        // Apply clean js\n                        applyCleanJs(4, null, true, jsCodeEl);\n                        \n                        // Set copy button state\n                        applyCopyBtnState('enabled');\n                        \n                        this.focus();\n                    }\n                });\n            });\n\n\n            // Dark theme radio change event listeners\n            themeDark.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'dark');\n                        document.documentElement.classList.remove('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssDarkUrl;\n                    }\n                });\n            });\n\n            // Light theme radio change event listeners\n            themeLight.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        themeDark.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        themeLight.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedThemeColor', 'light');\n                        document.documentElement.classList.add('js-view-markup-theme-light');\n                        document.getElementById('highlightJsCss').href = themeCssLightUrl;\n                    }\n                });\n            });\n\n            // Medium modal size radio change event listeners\n            modalSizeMedium.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeLarge.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeMedium.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'medium');\n                        document.body.classList.remove('js-view-markup-size-large');\n                    }\n                });\n            });\n\n            // Large modal size radio change event listeners\n            modalSizeLarge.forEach(function (item) {\n                item.addEventListener('change', function () {\n                    if (this.checked === true) {\n                        \n                        modalSizeMedium.forEach(function (item, index) {\n                            item.checked = false;\n                        });\n                        \n                        modalSizeLarge.forEach(function (item, index) {\n                            item.checked = true;\n                        });\n                        \n                        // Remember tab checked radio\n                        localStorage.setItem('checkedModalSize', 'large');\n                        document.body.classList.add('js-view-markup-size-large');\n                    }\n                });\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // HTML/JS tab toggling\n            // -----------------------------------------------------------------------------\n\n            htmlTab.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.remove('view-markup--js-tab-showing');\n                });\n            });\n\n            jsTab.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    applyCopyBtnState('enabled');\n                    this.closest('.view-markup__content').classList.add('view-markup--js-tab-showing');\n                });\n            });\n\n\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Exiting the modal\n            // -----------------------------------------------------------------------------\n\n            // Hide modal by clicking outside of it\n            modalEl.addEventListener('mousedown', function (event) {\n                let isClickInside = false;\n                \n                modalContent.forEach(function (item) {\n                    if ( item.contains(event.target) ) {\n                        isClickInside = true;\n                    }\n                });\n                \n                if (!isClickInside && this.classList.contains('view-markup-modal--showing')) {\n                    modalHide();\n                }\n            });\n\n            // Hide modal with close and cancel button click\n            modalCloseBtn.forEach(function (item) {\n                item.addEventListener('click', function () {\n                    modalHide();\n                });\n            });\n\n            // Hide modal with esc key\n            modalEl.addEventListener('keydown', function (e) {\n                let key = e.key;\n\n                if (key === 'Escape' && document.documentElement.classList.contains('js-view-markup-modal-showing')) {\n                    modalHide();\n                }\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Settings dropdown functionality\n            // -----------------------------------------------------------------------------\n\n            let optionDropdownClass = 'view-markup__settings-dropdown--showing';\n\n            // Settings dropdown\n            settingsBtn.forEach(function (item, index) {\n                item.addEventListener('click', function () {\n                    let ariaExpandedAttr = this.getAttribute('aria-expanded');\n\n                    this.setAttribute('aria-expanded', (ariaExpandedAttr === 'true') ? 'false' : 'true');\n                    settingsDropdown[index].classList.toggle(optionDropdownClass);\n                });\n            });\n\n            // Hide settings dropdown by clicking outside of it\n            document.addEventListener('mousedown', function (event) {\n                settingsDropdown.forEach(function (item, index) {\n                    let isClickInside = item.contains(event.target);\n\n                    if (\n                        !event.target.classList.contains('view-markup__settings-btn') &&\n                        item.classList.contains(optionDropdownClass) &&\n                        !isClickInside\n                    ) {\n                        settingsBtn[index].setAttribute('aria-expanded', false);\n                        item.classList.remove(optionDropdownClass);\n                    }\n                });\n            });\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Functions\n            // -----------------------------------------------------------------------------\n\n            // Function properly assigns untouched DOM html modal\n            function viewMarkupInitialize() {\n                elHtmlClean.forEach(function (item, index) {\n                    \n                    // Assign modal button to correct html to view\n                    let modalParent = viewMarkupEl[index].closest('.view-markup') || viewMarkupEl[index];\n                    let modalBtnEL = modalParent.querySelector('.view-markup__modal-btn');\n\n                    // Crack open the modal with the correct html in view\n                    modalMapping(item, 2, modalBtnEL, null);\n                });\n                \n                readyAdjustments();\n            }\n\n            // Cleanup and highlight markup\n            function applyCleanHtml(html, spaces, btnEl, codeEl) {\n                let tidyHTML = html_beautify(html, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                    \n                codeEl.textContent = tidyHTML;\n                \n                hljs.highlightElement(codeEl);\n            }\n\n            // Cleanup and highlight associated js\n            function applyCleanJs(spaces, btnEl, setTabSpaces, jsCodeEl) {    \n                for (let i = 0; i < jsCodeEl.length; i++) {\n                    if (jsCodeEl[i] !== undefined) {\n                        let jsToTidy;\n                                \n                        if (setTabSpaces) {\n                            jsToTidy = jsCodeEl[i].textContent;\n                        } else if (btnEl !== null && btnEl.hasAttribute('data-view-markup-script-selector')) {\n                            let scriptElement = document.querySelector(btnEl.getAttribute('data-view-markup-script-selector'));\n                            jsToTidy = scriptElement.outerHTML.toString().replace(/ id=\".*\"/g, '');\n                        }\n                                \n                        jsCodeEl[i].textContent = '';\n                        \n                        let tidyJs = html_beautify(jsToTidy, { indent_size: getCachedSpaceTab(), space_in_empty_paren: true });\n                        \n                        jsCodeEl[i].textContent = tidyJs;\n                        \n                        hljs.highlightElement(jsCodeEl[i]);\n                    }\n                }\n            }\n\n            // Return cached space/tab amount\n            function getCachedSpaceTab() {\n                let checkedSpacesRadio;\n                if (localStorage.getItem('checkedSpaceTab') === null) {\n                    checkedSpacesRadio = (radio2Spaces[0].checked === true) ? 2 : 4;\n                } else {\n                    checkedSpacesRadio = localStorage.getItem('checkedSpaceTab');\n                }\n                return checkedSpacesRadio;\n            }\n\n            // Populate hidden textarea with tidy html/js for copy button\n            function applyTidyCodeToTextArea(code, spaceTabRadio, index) {\n                let tidyCode = html_beautify(code, { indent_size: spaceTabRadio, space_in_empty_paren: true });\n                textArea[index].textContent = tidyCode;\n                return;\n            }\n\n            // Function that gets html, beautifies it, and displays it in a modal\n            let currentViewMarkupIndex;\n            function modalMapping(html, spaces, btnEl) {    \n                btnEl.addEventListener('click', function () {        \n                    \n                    // Current modal button index (used for modal navigation)\n                    currentViewMarkupIndex = this.getAttribute('data-view-markup-nav-index');\n                    \n                    // screenShotDomElement(viewMarkupEl[currentViewMarkupIndex]);\n\n                    // Clean html\n                    applyCleanHtml(html, spaces, this, modalCodeHtmlEL);\n                    \n                    // Clean js\n                    applyCleanJs(spaces, this, null, modalCodeJsEL);\n\n                    modalContentEl.classList.remove('view-markup--js-tab-showing');\n                    \n                    jsCodeEl.forEach(function (item) {\n                        if (item.textContent !== '') {\n                            modalContentEl.classList.add('view-markup-modal--has-js');\n                        } else {\n                            modalContentEl.classList.remove('view-markup-modal--has-js');\n                        }\n                    });\n                    \n                    modalShow();\n                    \n                    applyCopyBtnState('enabled');\n\n                    // Add option title to modal title if there is one\n                    if (btnEl.hasAttribute('data-view-markup-title')) {\n                        let cleanTitle = btnEl.getAttribute('data-view-markup-title').replace(/^'(.*)'$/, '$1');\n                        modalTitleEl.textContent = cleanTitle;\n                    } else {\n                        modalTitleEl.textContent = 'Viewing markup';\n                    }\n                    \n                    // Add option backdrop rgb to modal back\n                    if (btnEl.hasAttribute('data-view-markup-backdrop-rgb')) {\n                        modalEl.style.backgroundColor = 'rgba(' + options.backdropRgb + ', .7)';\n                    } else {\n                        modalEl.style.backgroundColor = '';\n                    }\n                });\n            }\n\n            // Apply copy button state\n            function applyCopyBtnState(state) {\n                let clickedButton = document.querySelectorAll('.view-markup__copy-btn:focus');\n                if (state === 'disabled') {\n                    clickedButton.forEach(function (item) {\n                        item.textContent = 'Copied';\n                        item.setAttribute('disabled', 'disabled');\n                    });\n                } else if (state === 'enabled') {\n                    copyBtn.forEach(function (item) {\n                        item.textContent = 'Copy';\n                        item.removeAttribute('disabled');\n                    });\n                }\n            }\n\n            // Wrap in tag\n            function wrapElement(el, wrapper) {\n                el.parentNode.insertBefore(wrapper, el);\n                wrapper.appendChild(el);\n            }\n\n            // Insert after\n            function insertAfter(newNode, existingNode) {\n                existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n            }\n\n            // Show modal\n            let focusedElementBeforeModal;\n            function modalShow() {\n                document.documentElement.classList.add('js-view-markup-modal-showing');\n                modalEl.classList.add('view-markup-modal--showing');\n                \n                // Save current focus\n                focusedElementBeforeModal = document.activeElement;\n\n                // Listen for and trap the keyboard\n                modalEl.addEventListener('keydown', trapTabKey);\n                \n                // Find all focusable children\n                let focusableElementsString =`\n                    a[href],\n                    area[href],\n                    input,\n                    select:not([disabled]),\n                    textarea:not([tabindex=\"-1\"]),\n                    button:not([disabled]),\n                    iframe,\n                    object,\n                    embed,\n                    [tabindex=\"0\"],\n                    [contenteditable]\n                `;\n                    \n                let focusableElements = modalEl.querySelectorAll(focusableElementsString);\n                \n                // Convert NodeList to Array\n                focusableElements = Array.prototype.slice.call(focusableElements);\n\n                let firstTabStop = focusableElements[0];\n                let lastTabStop = focusableElements[focusableElements.length - 1];\n                \n                // Set initial focus on the modal\n                modalEl.focus();\n                \n                function trapTabKey(e) {\n                    \n                    // Check for TAB key press\n                    if (e.keyCode === 9) {\n\n                        // SHIFT + TAB\n                        if (e.shiftKey) {\n                            if (document.activeElement === firstTabStop) {\n                                e.preventDefault();\n                                lastTabStop.focus();\n                            }\n\n                        // TAB\n                        } else {\n                            if (document.activeElement === lastTabStop) {\n                                e.preventDefault();\n                                firstTabStop.focus();\n                            }\n                        }\n                    }\n                }\n            }\n\n            // Hide modal\n            function modalHide() {\n                document.documentElement.classList.remove('js-view-markup-modal-showing');\n                modalEl.classList.remove('view-markup-modal--showing');\n                applyCopyBtnState('enabled');\n                focusedElementBeforeModal.focus();\n            }\n\n            // Go to previous/next view markup element\n            function modalNavigate(el, direction) {\n                let mapToModalBtnIndex;\n                \n                if (direction === 'prev') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === 0) ? parseInt(elAmount) - 1 : parseInt(currentViewMarkupIndex) - 1;\n                } else if (direction === 'next') {\n                    mapToModalBtnIndex = (parseInt(currentViewMarkupIndex) === parseInt(elAmount) - 1) ? 0 : parseInt(currentViewMarkupIndex) + 1;\n                }\n                    \n                let mapToModalBtnSelector = '[data-view-markup-nav-index=\"' + mapToModalBtnIndex + '\"]';\n                let mapToModalBtn = document.querySelector(mapToModalBtnSelector.toString());\n                \n                document.documentElement.classList.add('js-view-markup-modal-showing--navigating');\n                \n                mapToModalBtn.click();\n                mapToModalBtn.focus();\n                \n                // Show corresponding tab if contained in one\n                if (mapToModalBtn.closest('.view-markup-tabs__panel')) {\n                    let tabParent = mapToModalBtn.closest('[data-view-markup-tabs]');\n                    let tablistPanelId = mapToModalBtn.closest('.view-markup-tabs__panel').id;\n                    \n                    tabParent\n                        .querySelector(`[aria-controls=\"${tablistPanelId}\"]`)\n                        .click();\n                }\n                \n                setTimeout(function () {\n                    document.documentElement.classList.remove('js-view-markup-modal-showing--navigating');\n                }, 300);\n            }\n\n            // Modal navigation arrows\n            function modalNavigation() {    \n                \n                // Add index to modal buttons for navigation\n                let modalNavEl = document.querySelector('.view-markup__nav');\n                let modalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                \n                elAmount = modalBtn.length;\n                \n                modalBtn.forEach(function (item, index) {\n                    item.setAttribute('data-view-markup-nav-index', index);\n                });\n                \n                if (elAmount > 1) {\n\n                    // Modal previous button\n                    let modalPrevBtn = modalEl.querySelector('.view-markup__prev-btn');\n\n                    // Modal next button\n                    let modalNextBtn = modalEl.querySelector('.view-markup__next-btn');\n                    \n                    // Modal previous button click\n                    modalPrevBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'prev');\n                    });\n\n                    // Modal next button click\n                    modalNextBtn.addEventListener('click', function () {\n                        modalNavigate(this, 'next');\n                    });  \n                } else {\n\n                    // Remove modal nav if only 1 item\n                    modalNavEl.remove();\n                }\n                \n                if (modalNav === null) {\n                \n                    // Remove modal nav if no setting is found\n                    modalNavEl.remove();\n                }\n            }\n\n\n\n            // If dynamic position query param is set, do some stuff\n            if (dynamicPos !== null) {\n                window.addEventListener('ViewMarkupReady', () => {\n                \n                    // Create new div that will contain all modal buttons\n                    let floatingButtonHolder = document.createElement('div');\n                    floatingButtonHolder.classList.add('view-markup-dynamic-nav');\n                    \n                    if (dynamicPosZIndex !== null) {\n                        floatingButtonHolder.style.zIndex = dynamicPosZIndex.toString();\n                    }\n                    \n                    document.body.appendChild(floatingButtonHolder);\n            \n                    // Cache elements with modals\n                    let withmodalEl = document.querySelectorAll('[data-view-markup]:not([data-view-markup-render-in-page])');\n                    \n                    // Re-cache remaining buttons\n                    let floatingModalBtn = document.querySelectorAll('.view-markup__modal-btn');\n                    \n                    // Dynamically position modal button next to associated element\n                    function positionModalBtns(load) {\n                        \n                        // Add inline css to position button at the top left of the element\n                        withmodalEl.forEach( (item, i) => {\n                            let btnElement = floatingModalBtn[i];\n            \n                            btnElement.style.top = (item.getBoundingClientRect().top + window.scrollY) + 'px';\n                            btnElement.style.left = item.getBoundingClientRect().left + 'px';\n            \n                            if (load === 'load') {\n                                floatingButtonHolder.appendChild(btnElement);\n                            }\n                        });\n                    }\n                    \n                    // Remove un-needed highlight divs\n                    let highlightElement = document.querySelectorAll('.view-markup__highlight');\n                    highlightElement.forEach( (item) => {\n                        item.remove();\n                    });\n            \n                    // Unwrap view-markup div\n                    wrapperEl.forEach( (item) => {\n                        unwrap(item);\n                    });\n                    \n                    // Position buttons on load\n                    positionModalBtns('load');\n                    \n                    // Position buttons after resize\n                    window.addEventListener('resize', debounce( () => {\n                        positionModalBtns();\n                    }));\n                }, false);\n            }\n\n\n\n\n            \n            /* -----------------------------------------------------------------------------\n                EXPIREMENTAL WIP: prototype floating the buttons over the page instead of\n                wrapping each element in a div and then positioning it inside that div. Not\n                a fan of how much it currently modifies the DOM to get the modal button next\n                to the associated element correctly\n\n                TODOS:\n                ✓ Allow for dynamic button positioning\n                • Add \"Skip to view markup modal navigation\" skip link\n                • Add visual focus indicator to modal button when focus in the background\n                when using modal navigation.\n                ✓ Set smooth scrolling on the html,body when modal is active\n                • Enhance preserve attribute functionality a bit. (allow for top and inner)\n                • Add tab view\n            ----------------------------------------------------------------------------- */\n\n            // Unwrap function\n            function unwrap(wrapper) {\n                let docFrag = document.createDocumentFragment();\n                \n                while (wrapper.firstChild) {\n                    let child = wrapper.removeChild(wrapper.firstChild);\n                    docFrag.appendChild(child);\n                }\n\n                wrapper.parentNode.replaceChild(docFrag, wrapper);\n            }\n\n            // Debounce function (throttle window resize)\n            function debounce(func) {\n                let timer;\n\n                return (event) => {\n                    if (timer) {\n                        clearTimeout(timer);\n                    }\n                    timer = setTimeout(func, 1000, event);\n                };\n            }\n\n\n\n\n\n            // -----------------------------------------------------------------------------\n            // Create tabs view of view markup elements inside a container\n            // Based off https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/tab_role\n            // -----------------------------------------------------------------------------\n\n            const viewMarkupTabsParent = document.querySelectorAll('[data-view-markup-tabs]');\n    \n            viewMarkupTabsParent.forEach((parent) => {\n                parent.classList.add('view-markup-tabs');\n                \n                // Create tab nav element\n                const tabNav = document.createElement('div');\n                tabNav.classList.add('view-markup-tabs__nav');\n                setAttributes(tabNav, {\n                    'role': 'tablist',\n                    'aria-label': 'View markup tabs'\n                });\n                parent.prepend(tabNav);\n\n                // Create tabs list element\n                const tabsList = document.createElement('div');\n                tabsList.classList.add('view-markup-tabs__tabs-list');\n                tabNav.prepend(tabsList);\n                \n                // Create tab nav item element(s)\n                const tabButton = document.createElement('div');\n                tabButton.classList.add('view-markup-tabs__tab-button');\n                \n                // Get title(s) if any\n                const vmEntry = parent.querySelectorAll('[data-view-markup]');\n                \n                // Setup tab list entry\n                vmEntry.forEach((entry, index) => {\n                    let tabButtonEntry = tabButton.cloneNode();\n                    let entryTitle = convertToParamString(entry.getAttribute('data-view-markup')).get('title');\n                    let uniqueString = camelize(entryTitle.replace(/[^a-z0-9]/gi, ' '));\n                    \n                    setAttributes(tabButtonEntry, {\n                        'aria-selected': (index === 0) ? 'true' : 'false',\n                        'role': 'tab',\n                        'tabindex': (index === 0) ? '0' : '-1',\n                        'aria-controls': uniqueString + 'Panel',\n                        'id': uniqueString\n                    });\n\n                    tabButtonEntry.innerHTML = entryTitle;\n                    tabsList.appendChild(tabButtonEntry);\n                });\n\n                // Setup tab panel areas\n                const vmPanel = parent.querySelectorAll('.view-markup');\n                const tabButtonElement = parent.querySelectorAll('.view-markup-tabs__tab-button');\n                \n                vmPanel.forEach((panel, index) => {\n                    panel.classList.add('view-markup-tabs__panel');\n                    setAttributes(panel, {\n                        'role': 'tabpanel',\n                        'tabindex': '0',\n                        'aria-labelledby': tabButtonElement[index].getAttribute('id'),\n                        'id': tabButtonElement[index].getAttribute('id') + 'Panel'\n                    });\n\n                    if (index > 0) {\n                        panel.setAttribute('hidden', 'true');\n                    }\n                });\n\n                const tabs = parent.querySelectorAll('[role=\"tab\"]');\n                const tabList = parent.querySelector('[role=\"tablist\"]');\n\n                // Add a click event handler to each tab\n                tabs.forEach((tab) => {\n                    tab.addEventListener('click', changeTabs);\n                });\n                \n                // Enable arrow navigation between tabs in the tab list\n                let tabFocus = 0;\n                \n                tabList.addEventListener('keydown', (event) => {\n                    \n                    // Move right\n                    if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n                        tabs[tabFocus].setAttribute('tabindex', '-1');\n                        \n                        if (event.key === 'ArrowRight') {\n                            tabFocus++;\n                            \n                            // If we're at the end, go to the start\n                            if (tabFocus >= tabs.length) {\n                                tabFocus = 0;\n                            }\n                        \n                        // Move left\n                        } else if (event.key === 'ArrowLeft') {\n                            tabFocus--;\n                            \n                            // If we're at the start, move to the end\n                            if (tabFocus < 0) {\n                                tabFocus = tabs.length - 1;\n                            }\n                        }\n\n                        tabs[tabFocus].setAttribute('tabindex', '0');\n                        tabs[tabFocus].focus();\n                    }\n\n                    if (event.key === 'Enter' || event.code === 'Space') {\n                        event.preventDefault();\n                        event.target.click();\n                    }\n                });\n\n                // Create tab title and max-width option\n                let tabslistParam = convertToParamString(parent.getAttribute('data-view-markup-tabs'));\n                let tabsParams = {\n                    title: tabslistParam.get('title'),\n                    maxWidth: tabslistParam.get('max-width'),\n                    background: tabslistParam.get('background'),\n                    pillView: tabslistParam.get('pill-view'),\n                    paddingX: tabslistParam.get('padding-x'),\n                    class: tabslistParam.get('class'),\n                    modalBtn: tabslistParam.get('modal-btn')\n                }\n\n                if (tabsParams.title !== null) {\n                    const tabsTitle = document.createElement('div');\n                    tabsTitle.classList.add('view-markup-tabs__title');\n                    tabsTitle.innerHTML = tabsParams.title;\n                    tabNav.prepend(tabsTitle);\n                }\n\n                if (tabsParams.maxWidth !== null) {\n                    Object.assign(tabNav.style,{\n                        maxWidth: tabsParams.maxWidth,\n                        marginLeft: 'auto',\n                        marginRight: 'auto',\n                    });\n                }\n                \n                if (tabsParams.paddingX !== null) {\n                    Object.assign(tabNav.style,{\n                        paddingLeft: tabsParams.paddingX,\n                        paddingRight: tabsParams.paddingX,\n                    });\n                }\n\n                if (tabsParams.background === 'false') {\n                    parent.classList.add('view-markup-tabs--bg-none');\n                }\n                \n                if (tabsParams.pillView !== null) {\n                    parent.classList.add('view-markup-tabs--pill-view');\n                }\n\n                if (tabsParams.class !== null) {\n                    let classes = tabsParams.class.replace(/,\\s|,/g, ' ').split(' ');\n                    classes.forEach((classItem) => {\n                        tabNav.classList.add(classItem);\n                    });\n                }\n\n                if (tabsParams.modalBtn !== null) {\n                    parent.classList.add('view-markup-tabs--show-modal-btn');\n\n                    // Create view markup button which controls the visible tab panel element\n                    const tabViewModalBtn = document.createElement('div');\n                    tabViewModalBtn.classList.add('view-markup-tabs__modal-btn');\n                    tabViewModalBtn.innerHTML = '<span class=\"view-markup__modal-btn-text\">View markup</span>';\n                    setAttributes(tabViewModalBtn, {\n                        'role': 'button',\n                        'tabindex': '0'\n                    });\n                    tabNav.appendChild(tabViewModalBtn);\n    \n                    tabViewModalBtn.addEventListener('click', function () {\n                        parent.querySelector('.view-markup-tabs__panel:not([hidden]) .view-markup__modal-btn').click();\n                    });\n    \n                    tabViewModalBtn.addEventListener('keydown', function (event) {\n                        if (event.key === 'Enter' || event.code === 'Space') {\n                            parent.querySelector('.view-markup-tabs__panel:not([hidden]) .view-markup__modal-btn').click();\n                        }\n                    });\n                }\n            });\n\n            // Display and scrollto tablist item if hash is available\n            let urlHash = window.location.hash;\n            if (urlHash !== '') {\n                let urlIDElement = document.querySelector(`${urlHash}`);\n                if (urlIDElement && urlIDElement.closest('[data-view-markup-tabs]')) {\n                    let associatedTab = document.querySelector('[aria-controls=\"' + urlHash.replace('#', '') +'\"]')\n                    \n                    // Click associated tab\n                    associatedTab.click();\n\n                    // Scroll into view\n                    associatedTab.scrollIntoView({\n                        behavior: 'smooth'\n                    });\n                }\n            }\n\n            function changeTabs(event) {\n                const target = event.target;\n                const parent = target.closest('.view-markup-tabs__nav');\n                const grandparent = parent.closest('.view-markup-tabs');\n\n                // Remove all current selected tabs\n                parent\n                    .querySelectorAll('[aria-selected=\"true\"]')\n                    .forEach((tab) => tab.setAttribute('aria-selected', 'false'));\n\n                // Set this tab as selected\n                target.setAttribute('aria-selected', 'true');\n\n                // Hide all tab panels\n                grandparent\n                    .querySelectorAll('[role=\"tabpanel\"]')\n                    .forEach((panel) => panel.setAttribute('hidden', true));\n\n                // Show the selected panel\n                grandparent.parentNode\n                    .querySelector(`#${target.getAttribute('aria-controls')}`)\n                    .removeAttribute('hidden');\n\n                event.target.focus();\n            }\n\n            function setAttributes(el, attrs) {\n                for(var key in attrs) {\n                    el.setAttribute(key, attrs[key]);\n                }\n            }\n\n            function camelize(str) {\n                return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n                if (+match === 0) return \"\";\n                    return index === 0 ? match.toLowerCase() : match.toUpperCase();\n                });\n            }\n\n            function convertToParamString(str) {\n                let stringCleanup = str.replace(/;\\s|;/g, '&').replace(/:\\s|:/g, '=');\n                let optionParam = new URLSearchParams(stringCleanup);\n                return optionParam;\n            }\n        }\n    });\n}\n\nwindow.addEventListener('DOMContentLoaded', viewMarkup);"]}